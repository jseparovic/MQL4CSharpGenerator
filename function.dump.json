[
    {
        "url": "http://docs.mql4.com/common/alert.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "Alert", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "argument", 
                        "description": ""
                    }
                ]
            }
        ], 
        "description": "Displays a message in a separate window.", 
        "title": "Alert"
    }, 
    {
        "url": "http://docs.mql4.com/common/comment.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "Comment", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "argument", 
                        "description": "[in] Any values, separated by commas. To delimit output information into several lines, a line break symbol \"\\n\" or \"\\r\\n\" is used. Number of parameters cannot exceed 64. Total length of the input comment (including invisible symbols) cannot exceed 2045 characters (excess symbols will be cut out during output)."
                    }
                ]
            }
        ], 
        "description": "This function outputs a comment defined by a user in the top left corner of a chart.", 
        "title": "Comment"
    }, 
    {
        "url": "http://docs.mql4.com/common/sendftp.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "SendFTP", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "filename", 
                        "description": "[in] Name of sent file."
                    }, 
                    {
                        "default": "NULL", 
                        "type": "string", 
                        "name": "ftp_path", 
                        "description": "[in] FTP catalog. If a directory is not specified, directory described in settings is used."
                    }
                ]
            }
        ], 
        "description": "Sends a file at the address, specified in the setting window of the \"FTP\" tab.", 
        "title": "SendFTP"
    }, 
    {
        "url": "http://docs.mql4.com/common/sendnotification.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "SendNotification", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "text", 
                        "description": "[in] The text of the notification. The message length should not exceed 255 characters."
                    }
                ]
            }
        ], 
        "description": "Sends push notifications to the mobile terminals, whose MetaQuotes IDs are specified in the \"Notifications\" tab.", 
        "title": "SendNotification"
    }, 
    {
        "url": "http://docs.mql4.com/common/sendmail.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "SendMail", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "subject", 
                        "description": "[in] Email header."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "some_text", 
                        "description": "[in] Email body."
                    }
                ]
            }
        ], 
        "description": "Sends an email at the address specified in the settings window of the \"Email\" tab.", 
        "title": "SendMail"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountinfodouble.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "AccountInfoDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": "[in] Identifier of the property. The value can be one of the values of ."
                    }
                ]
            }
        ], 
        "description": "Returns the value of the corresponding account property.", 
        "title": "AccountInfoDouble"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountinfointeger.html", 
        "functions": [
            {
                "returnType": "long", 
                "name": "AccountInfoInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": "[in] Identifier of the property. The value can be one of the values of ."
                    }
                ]
            }
        ], 
        "description": "Returns the value of the properties of the account.", 
        "title": "AccountInfoInteger"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountinfostring.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "AccountInfoString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": "[in] Identifier of the property. The value can be one of the values of ."
                    }
                ]
            }
        ], 
        "description": "Returns the value of the corresponding account property.", 
        "title": "AccountInfoString"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountbalance.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "AccountBalance", 
                "parameters": []
            }
        ], 
        "description": "Returns balance value of the current account.", 
        "title": "AccountBalance"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountcredit.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "AccountCredit", 
                "parameters": []
            }
        ], 
        "description": "Returns credit value of the current account.", 
        "title": "AccountCredit"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountcompany.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "AccountCompany", 
                "parameters": []
            }
        ], 
        "description": "Returns the brokerage company name where the current account was registered.", 
        "title": "AccountCompany"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountcurrency.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "AccountCurrency", 
                "parameters": []
            }
        ], 
        "description": "Returns currency name of the current account.", 
        "title": "AccountCurrency"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountequity.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "AccountEquity", 
                "parameters": []
            }
        ], 
        "description": "Returns equity value of the current account.", 
        "title": "AccountEquity"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountfreemargin.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "AccountFreeMargin", 
                "parameters": []
            }
        ], 
        "description": "Returns free margin value of the current account.", 
        "title": "AccountFreeMargin"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountfreemargincheck.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "AccountFreeMarginCheck", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol for trading operation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "cmd", 
                        "description": "[in] Operation type. It can be either OP_BUY or OP_SELL."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "volume", 
                        "description": "[in] Number of lots."
                    }
                ]
            }
        ], 
        "description": "Returns free margin that remains after the specified order has been opened at the current price on the current account.", 
        "title": "AccountFreeMarginCheck"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountfreemarginmode.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "AccountFreeMarginMode", 
                "parameters": []
            }
        ], 
        "description": "Returns the calculation mode of free margin allowed to open orders on the current account.", 
        "title": "AccountFreeMarginMode"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountleverage.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "AccountLeverage", 
                "parameters": []
            }
        ], 
        "description": "Returns leverage of the current account.", 
        "title": "AccountLeverage"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountmargin.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "AccountMargin", 
                "parameters": []
            }
        ], 
        "description": "Returns margin value of the current account.", 
        "title": "AccountMargin"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountname.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "AccountName", 
                "parameters": []
            }
        ], 
        "description": "Returns the current account name.", 
        "title": "AccountName"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountnumber.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "AccountNumber", 
                "parameters": []
            }
        ], 
        "description": "Returns the current account number.", 
        "title": "AccountNumber"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountprofit.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "AccountProfit", 
                "parameters": []
            }
        ], 
        "description": "Returns profit value of the current account.", 
        "title": "AccountProfit"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountserver.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "AccountServer", 
                "parameters": []
            }
        ], 
        "description": "Returns the connected server name.", 
        "title": "AccountServer"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountstopoutlevel.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "AccountStopoutLevel", 
                "parameters": []
            }
        ], 
        "description": "Returns the value of the Stop Out level.", 
        "title": "AccountStopoutLevel"
    }, 
    {
        "url": "http://docs.mql4.com/account/accountstopoutmode.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "AccountStopoutMode", 
                "parameters": []
            }
        ], 
        "description": "Returns the calculation mode for the Stop Out level.", 
        "title": "AccountStopoutMode"
    }, 
    {
        "url": "http://docs.mql4.com/check/getlasterror.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "GetLastError", 
                "parameters": []
            }
        ], 
        "description": "Returns the contents of the", 
        "title": "GetLastError"
    }, 
    {
        "url": "http://docs.mql4.com/check/isstopped.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsStopped", 
                "parameters": []
            }
        ], 
        "description": "Checks the forced shutdown of an mql4 program.", 
        "title": "IsStopped"
    }, 
    {
        "url": "http://docs.mql4.com/check/uninitializereason.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "UninitializeReason", 
                "parameters": []
            }
        ], 
        "description": "Returns the code of a", 
        "title": "UninitializeReason"
    }, 
    {
        "url": "http://docs.mql4.com/check/mqlinfointeger.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "MQLInfoInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": "[in] Identifier of a property. Can be one of values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of a corresponding property of a running mql4 program.", 
        "title": "MQLInfoInteger"
    }, 
    {
        "url": "http://docs.mql4.com/check/mqlinfostring.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "MQLInfoString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": "[in] Identifier of a property. Can be one of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of a corresponding property of a running MQL4 program.", 
        "title": "MQLInfoString"
    }, 
    {
        "url": "http://docs.mql4.com/check/mqlsetinteger.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "MQLSetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": "[in] Identifier of a property. Only is supported, as other properties cannot be changed."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_value", 
                        "description": "[in] Value of property. Can be one of the ."
                    }
                ]
            }
        ], 
        "description": "Sets the value of the", 
        "title": "MQLSetInteger"
    }, 
    {
        "url": "http://docs.mql4.com/check/terminalinfointeger.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "TerminalInfoInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": "[in] Identifier of a property. Can be one of the values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of a corresponding property of the mql4 program environment.", 
        "title": "TerminalInfoInteger"
    }, 
    {
        "url": "http://docs.mql4.com/check/terminalinfodouble.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "TerminalInfoDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": "[in] Identifier of a property. Can be one of the values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of a corresponding property of the mql4 program environment.", 
        "title": "TerminalInfoDouble"
    }, 
    {
        "url": "http://docs.mql4.com/check/terminalinfostring.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "TerminalInfoString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": "[in] Identifier of a property. Can be one of the values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of a corresponding property of the mql4 program environment. The property must be of string type.", 
        "title": "TerminalInfoString"
    }, 
    {
        "url": "http://docs.mql4.com/check/symbol.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "Symbol", 
                "parameters": []
            }
        ], 
        "description": "Returns the name of a symbol of the current chart.", 
        "title": "Symbol"
    }, 
    {
        "url": "http://docs.mql4.com/check/period.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "Period", 
                "parameters": []
            }
        ], 
        "description": "Returns the current chart timeframe.", 
        "title": "Period"
    }, 
    {
        "url": "http://docs.mql4.com/check/digits.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "Digits", 
                "parameters": []
            }
        ], 
        "description": "Returns the number of decimal digits determining the accuracy of price of the current chart symbol.", 
        "title": "Digits"
    }, 
    {
        "url": "http://docs.mql4.com/check/point.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "Point", 
                "parameters": []
            }
        ], 
        "description": "Returns the point size of the current symbol in the quote currency.", 
        "title": "Point"
    }, 
    {
        "url": "http://docs.mql4.com/check/isconnected.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsConnected", 
                "parameters": []
            }
        ], 
        "description": "Checks connection between client terminal and server.", 
        "title": "IsConnected"
    }, 
    {
        "url": "http://docs.mql4.com/check/isdemo.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsDemo", 
                "parameters": []
            }
        ], 
        "description": "Checks if the Expert Advisor runs on a demo account.", 
        "title": "IsDemo"
    }, 
    {
        "url": "http://docs.mql4.com/check/isdllsallowed.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsDllsAllowed", 
                "parameters": []
            }
        ], 
        "description": "Checks if the DLL function call is allowed for the Expert Advisor.", 
        "title": "IsDllsAllowed"
    }, 
    {
        "url": "http://docs.mql4.com/check/isexpertenabled.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsExpertEnabled", 
                "parameters": []
            }
        ], 
        "description": "Checks if Expert Advisors are enabled for running.", 
        "title": "IsExpertEnabled"
    }, 
    {
        "url": "http://docs.mql4.com/check/islibrariesallowed.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsLibrariesAllowed", 
                "parameters": []
            }
        ], 
        "description": "Checks if the Expert Advisor can call library function.", 
        "title": "IsLibrariesAllowed"
    }, 
    {
        "url": "http://docs.mql4.com/check/isoptimization.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsOptimization", 
                "parameters": []
            }
        ], 
        "description": "Checks if Expert Advisor runs in the Strategy Tester optimization mode.", 
        "title": "IsOptimization"
    }, 
    {
        "url": "http://docs.mql4.com/check/istesting.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsTesting", 
                "parameters": []
            }
        ], 
        "description": "Checks", 
        "title": "IsTesting"
    }, 
    {
        "url": "http://docs.mql4.com/check/istradeallowed.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsTradeAllowed", 
                "parameters": []
            }, 
            {
                "returnType": "bool", 
                "name": "IsTradeAllowed", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "DateTime", 
                        "name": "tested_time", 
                        "description": "[in] Time to check status."
                    }
                ]
            }
        ], 
        "description": "Checks", 
        "title": "IsTradeAllowed"
    }, 
    {
        "url": "http://docs.mql4.com/check/istradecontextbusy.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsTradeContextBusy", 
                "parameters": []
            }
        ], 
        "description": "Returns the information about trade context.", 
        "title": "IsTradeContextBusy"
    }, 
    {
        "url": "http://docs.mql4.com/check/isvisualmode.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IsVisualMode", 
                "parameters": []
            }
        ], 
        "description": "Checks", 
        "title": "IsVisualMode"
    }, 
    {
        "url": "http://docs.mql4.com/check/terminalcompany.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "TerminalCompany", 
                "parameters": []
            }
        ], 
        "description": "Returns the name of company owning the client terminal.", 
        "title": "TerminalCompany"
    }, 
    {
        "url": "http://docs.mql4.com/check/terminalname.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "TerminalName", 
                "parameters": []
            }
        ], 
        "description": "Returns client terminal name.", 
        "title": "TerminalName"
    }, 
    {
        "url": "http://docs.mql4.com/check/terminalpath.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "TerminalPath", 
                "parameters": []
            }
        ], 
        "description": "Returns the directory, from which the client terminal was launched.", 
        "title": "TerminalPath"
    }, 
    {
        "url": "http://docs.mql4.com/marketinformation/marketinfo.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "MarketInfo", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "type", 
                        "description": "[in] Request of information to be returned. Can be any of values of request identifiers."
                    }
                ]
            }
        ], 
        "description": "Returns various data about securities listed in the \"Market Watch\" window.", 
        "title": "MarketInfo"
    }, 
    {
        "url": "http://docs.mql4.com/marketinformation/symbolstotal.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "SymbolsTotal", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "bool", 
                        "name": "selected", 
                        "description": "[in] Request mode. Can be true or false."
                    }
                ]
            }
        ], 
        "description": "Returns the number of available (selected in Market Watch or all) symbols.", 
        "title": "SymbolsTotal"
    }, 
    {
        "url": "http://docs.mql4.com/marketinformation/symbolname.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "SymbolName", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "pos", 
                        "description": "[in] Order number of a symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "bool", 
                        "name": "selected", 
                        "description": "[in] Request mode. If the value is true, the symbol is taken from the list of symbols selected in MarketWatch. If the value is false, the symbol is taken from the general list."
                    }
                ]
            }
        ], 
        "description": "Returns the name of a symbol.", 
        "title": "SymbolName"
    }, 
    {
        "url": "http://docs.mql4.com/marketinformation/symbolselect.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "SymbolSelect", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] Symbol name."
                    }, 
                    {
                        "default": "", 
                        "type": "bool", 
                        "name": "select", 
                        "description": "[in] Switch. If the value is false, a symbol should be removed from MarketWatch, otherwise a symbol should be selected in this window. A symbol can't be removed if the symbol chart is open, or there are open orders for this symbol."
                    }
                ]
            }
        ], 
        "description": "Selects a symbol in the Market Watch window or removes a symbol from the window.", 
        "title": "SymbolSelect"
    }, 
    {
        "url": "http://docs.mql4.com/series/refreshrates.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "RefreshRates", 
                "parameters": []
            }
        ], 
        "description": "Refreshing of data in pre-defined variables and series arrays.", 
        "title": "RefreshRates"
    }, 
    {
        "url": "http://docs.mql4.com/series/barsfunction.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "Bars", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol_name", 
                        "description": "[in] Symbol name."
                    }, 
                    {
                        "default": "", 
                        "type": "ENUM_TIMEFRAMES", 
                        "name": "timeframe", 
                        "description": "[in] Period."
                    }
                ]
            }, 
            {
                "returnType": "int", 
                "name": "Bars", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol_name", 
                        "description": "[in] Symbol name."
                    }, 
                    {
                        "default": "", 
                        "type": "ENUM_TIMEFRAMES", 
                        "name": "timeframe", 
                        "description": "[in] Period."
                    }, 
                    {
                        "default": "", 
                        "type": "DateTime", 
                        "name": "start_time", 
                        "description": "[in] Bar time corresponding to the first element."
                    }, 
                    {
                        "default": "", 
                        "type": "DateTime", 
                        "name": "stop_time", 
                        "description": "[in] Bar time corresponding to the last element."
                    }
                ]
            }
        ], 
        "description": "Returns the number of bars count in the history for a specified symbol and period. There are 2 variants of functions calls.", 
        "title": "Bars"
    }, 
    {
        "url": "http://docs.mql4.com/series/ibars.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "iBars", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol the data of which should be used to calculate indicator. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }
                ]
            }
        ], 
        "description": "Returns the number of bars on the specified chart.", 
        "title": "iBars"
    }, 
    {
        "url": "http://docs.mql4.com/series/ibarshift.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "iBarShift", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "DateTime", 
                        "name": "time", 
                        "description": "[in] Time value for searching."
                    }, 
                    {
                        "default": "false", 
                        "type": "bool", 
                        "name": "exact", 
                        "description": "[in] Return mode when the bar is not found (false - iBarShift returns the nearest, true - iBarShift returns -1)."
                    }
                ]
            }
        ], 
        "description": "Search for a bar by its time. The function returns the index of the bar which covers the specified time.", 
        "title": "iBarShift"
    }, 
    {
        "url": "http://docs.mql4.com/series/iclose.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iClose", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Returns Close price value for the bar of specified symbol with timeframe and shift.", 
        "title": "iClose"
    }, 
    {
        "url": "http://docs.mql4.com/series/ihigh.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iHigh", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Returns High price value for the bar of specified symbol with timeframe and shift.", 
        "title": "iHigh"
    }, 
    {
        "url": "http://docs.mql4.com/series/ihighest.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "iHighest", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol the data of which should be used for search. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "type", 
                        "description": "[in] Series array identifier. It can be any of the enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "count", 
                        "description": "[in] Number of bars (in direction from the start bar to the back one) on which the search is carried out."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "start", 
                        "description": "[in] Shift showing the bar, relative to the current bar, that the data should be taken from."
                    }
                ]
            }
        ], 
        "description": "Returns the shift of the maximum value over a specific number of bars depending on type.", 
        "title": "iHighest"
    }, 
    {
        "url": "http://docs.mql4.com/series/ilow.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iLow", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Returns Low price value for the bar of indicated symbol with timeframe and shift.", 
        "title": "iLow"
    }, 
    {
        "url": "http://docs.mql4.com/series/ilowest.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "iLowest", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "type", 
                        "description": "[in] Series array identifier. It can be any of the enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "count", 
                        "description": "[in] Number of bars (in direction from the start bar to the back one) on which the search is carried out."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "start", 
                        "description": "[in] Shift showing the bar, relative to the current bar, that the data should be taken from."
                    }
                ]
            }
        ], 
        "description": "Returns the shift of the lowest value over a specific number of bars depending on type.", 
        "title": "iLowest"
    }, 
    {
        "url": "http://docs.mql4.com/series/iopen.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iOpen", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Returns Open price value for the bar of specified symbol with timeframe and shift.", 
        "title": "iOpen"
    }, 
    {
        "url": "http://docs.mql4.com/series/itime.html", 
        "functions": [
            {
                "returnType": "DateTime", 
                "name": "iTime", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Returns Time value for the bar of specified symbol with timeframe and shift.", 
        "title": "iTime"
    }, 
    {
        "url": "http://docs.mql4.com/series/ivolume.html", 
        "functions": [
            {
                "returnType": "long", 
                "name": "iVolume", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Returns Tick Volume value for the bar of specified symbol with timeframe and shift.", 
        "title": "iVolume"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartapplytemplate.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartApplyTemplate", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "filename", 
                        "description": "[in] The name of the file containing the template."
                    }
                ]
            }
        ], 
        "description": "Applies a specific template from a specified file to the chart. The command is added to chart message queue and executed only after all previous commands have been processed.", 
        "title": "ChartApplyTemplate"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartsavetemplate.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartSaveTemplate", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "filename", 
                        "description": "[in] The filename to save the template. The \".tpl\" extension will be added to the filename automatically; there is no need to specify it. The template is saved in terminal_directory\\Profiles\\Templates\\ and can be used for manual application in the terminal. If a template with the same filename already exists, the contents of this file will be overwritten."
                    }
                ]
            }
        ], 
        "description": "Saves current chart settings in a template with a specified name. The command is added to chart message queue and executed only after all previous commands have been processed.", 
        "title": "ChartSaveTemplate"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartwindowfind.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ChartWindowFind", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 denotes the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "indicator_shortname", 
                        "description": "[in] Short name of the indicator."
                    }
                ]
            }, 
            {
                "returnType": "int", 
                "name": "ChartWindowFind", 
                "parameters": []
            }
        ], 
        "description": "The function returns the number of a subwindow where an indicator is drawn. There are 2 variants of the function.", 
        "title": "ChartWindowFind"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartopen.html", 
        "functions": [
            {
                "returnType": "long", 
                "name": "ChartOpen", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Chart symbol. means the symbol of the current chart (the Expert Advisor is attached to)."
                    }, 
                    {
                        "default": "", 
                        "type": "ENUM_TIMEFRAMES", 
                        "name": "period", 
                        "description": "[in] Chart period (timeframe). Can be one of the values. 0 means the current chart period."
                    }
                ]
            }
        ], 
        "description": "Opens a new chart with the specified symbol and period. The command is added to chart message queue and executed only after all previous commands have been processed.", 
        "title": "ChartOpen"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartfirst.html", 
        "functions": [
            {
                "returnType": "long", 
                "name": "ChartFirst", 
                "parameters": []
            }
        ], 
        "description": "Returns the ID of the first chart of the client terminal.", 
        "title": "ChartFirst"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartnext.html", 
        "functions": [
            {
                "returnType": "long", 
                "name": "ChartNext", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 does not mean the current chart. 0 means \"return the first chart ID\"."
                    }
                ]
            }
        ], 
        "description": "Returns the chart ID of the chart next to the specified one.", 
        "title": "ChartNext"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartclose.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartClose", 
                "parameters": [
                    {
                        "default": "0", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }
                ]
            }
        ], 
        "description": "Closes the specified chart.", 
        "title": "ChartClose"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartsymbol.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "ChartSymbol", 
                "parameters": [
                    {
                        "default": "0", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }
                ]
            }
        ], 
        "description": "Returns the symbol name for the specified chart.", 
        "title": "ChartSymbol"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartredraw.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "ChartRedraw", 
                "parameters": [
                    {
                        "default": "0", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }
                ]
            }
        ], 
        "description": "This function calls a forced redrawing of a specified chart.", 
        "title": "ChartRedraw"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartsetdouble.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartSetDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] Chart property ID. Can be one of the values (except the read-only properties)."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "value", 
                        "description": "[in] Property value."
                    }
                ]
            }
        ], 
        "description": "Sets a value for a corresponding property of the specified chart. Chart property should be of a", 
        "title": "ChartSetDouble"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartsetinteger.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartSetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] Chart property ID. It can be one of the value (except the read-only properties)."
                    }, 
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "value", 
                        "description": "[in] Property value."
                    }
                ]
            }, 
            {
                "returnType": "bool", 
                "name": "ChartSetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "property_id", 
                        "description": ""
                    }, 
                    {
                        "default": "", 
                        "type": "uint", 
                        "name": "sub_window", 
                        "description": "[in] Chart subwindow."
                    }, 
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "value", 
                        "description": "[in] Property value."
                    }
                ]
            }
        ], 
        "description": "Sets a value for a corresponding property of the specified chart. Chart property must be", 
        "title": "ChartSetInteger"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartsetstring.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartSetString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] Chart property ID. Its value can be one of the values (except the read-only properties)."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "str_value", 
                        "description": "[in] Property value string. String length cannot exceed 2045 characters (extra characters will be truncated)."
                    }
                ]
            }
        ], 
        "description": "Sets a value for a corresponding property of the specified chart. Chart property must be of the string type. The command is added to chart message queue and executed only after all previous commands have been processed.", 
        "title": "ChartSetString"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartnavigate.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartNavigate", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "position", 
                        "description": "[in] Chart position to perform a shift. Can be one of the values."
                    }, 
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Number of bars to shift the chart. Positive value means the right shift (to the end of chart), negative value means the left shift (to the beginning of chart). The zero shift can be used to navigate to the beginning or end of chart."
                    }
                ]
            }
        ], 
        "description": "Performs shift of the specified chart by the specified number of bars relative to the specified position in the chart. The command is added to chart message queue and executed only after all previous commands have been processed.", 
        "title": "ChartNavigate"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartid.html", 
        "functions": [
            {
                "returnType": "long", 
                "name": "ChartID", 
                "parameters": []
            }
        ], 
        "description": "Returns the ID of the current chart.", 
        "title": "ChartID"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartindicatordelete.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartIndicatorDelete", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 denotes the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "sub_window", 
                        "description": "[in] Number of the chart subwindow. 0 denotes the main chart subwindow."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "indicator_shortname", 
                        "description": ""
                    }
                ]
            }
        ], 
        "description": "Removes an indicator with a specified name from the specified chart window. The command is added to chart message queue and executed only after all previous commands have been processed.", 
        "title": "ChartIndicatorDelete"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartindicatorname.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "ChartIndicatorName", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 denotes the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "sub_window", 
                        "description": "[in] Number of the chart subwindow. 0 denotes the main chart subwindow."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] the index of the indicator in the list of indicators. The numeration of indicators start with zero, i.e. the first indicator in the list has the 0 index. To obtain the number of indicators in the list use the function."
                    }
                ]
            }
        ], 
        "description": "Returns the short name of the indicator by the number in the indicators list on the specified chart window.", 
        "title": "ChartIndicatorName"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartindicatorstotal.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ChartIndicatorsTotal", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 denotes the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "sub_window", 
                        "description": "[in] Number of the chart subwindow. 0 denotes the main chart subwindow."
                    }
                ]
            }
        ], 
        "description": "Returns the number of all indicators applied to the specified chart window.", 
        "title": "ChartIndicatorsTotal"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartwindowondropped.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ChartWindowOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the number (index) of the chart subwindow the Expert Advisor or script has been dropped to. 0 means the main chart window.", 
        "title": "ChartWindowOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartpriceondropped.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "ChartPriceOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the price coordinate corresponding to the chart point the Expert Advisor or script has been dropped to.", 
        "title": "ChartPriceOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/charttimeondropped.html", 
        "functions": [
            {
                "returnType": "DateTime", 
                "name": "ChartTimeOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the time coordinate corresponding to the chart point the Expert Advisor or script has been dropped to.", 
        "title": "ChartTimeOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartxondropped.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ChartXOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the X coordinate of the chart point the Expert Advisor or script has been dropped to.", 
        "title": "ChartXOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartyondropped.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ChartYOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the Y coordinateof the chart point the Expert Advisor or script has been dropped to.", 
        "title": "ChartYOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartsetsymbolperiod.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartSetSymbolPeriod", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Chart symbol. value means the current chart symbol (Expert Advisor is attached to)"
                    }, 
                    {
                        "default": "", 
                        "type": "ENUM_TIMEFRAMES", 
                        "name": "period", 
                        "description": "[in] Chart period (timeframe). Can be one of the values. 0 means the current chart period."
                    }
                ]
            }
        ], 
        "description": "Changes the symbol and period of the specified chart. The function is asynchronous, i.e. it sends the command and does not wait for its execution completion. The command is added to chart message queue and executed only after all previous commands have been processed.", 
        "title": "ChartSetSymbolPeriod"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/chartscreenshot.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ChartScreenShot", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart ID. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "filename", 
                        "description": "[in] Screenshot file name. Cannot exceed 63 characters. Screenshot files are placed in the \\Files directory."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "width", 
                        "description": "[in] Screenshot width in pixels."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "height", 
                        "description": "[in] Screenshot height in pixels."
                    }, 
                    {
                        "default": "ALIGN_RIGHT", 
                        "type": "ENUM_ALIGN_MODE", 
                        "name": "align_mode", 
                        "description": "[in] Output mode of a narrow screenshot. A value of the enumeration. ALIGN_RIGHT means align to the right margin (the output from the end). ALIGN_LEFT means Left justify."
                    }
                ]
            }
        ], 
        "description": "Saves current chart screen shot as a GIF, PNG or BMP file depending on specified extension. The command is added to chart message queue and executed only after all previous commands have been processed.", 
        "title": "ChartScreenShot"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowbarsperchart.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowBarsPerChart", 
                "parameters": []
            }
        ], 
        "description": "Returns the amount of bars visible on the chart.", 
        "title": "WindowBarsPerChart"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowexpertname.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "WindowExpertName", 
                "parameters": []
            }
        ], 
        "description": "Returns the name of the executed Expert Advisor, script, custom indicator, or library.", 
        "title": "WindowExpertName"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowfind.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowFind", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] Indicator short name."
                    }
                ]
            }
        ], 
        "description": "Returns the window index containing this specified indicator.", 
        "title": "WindowFind"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowfirstvisiblebar.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowFirstVisibleBar", 
                "parameters": []
            }
        ], 
        "description": "Returns index of the first visible bar in the current chart window.", 
        "title": "WindowFirstVisibleBar"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowhandle.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowHandle", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }
                ]
            }
        ], 
        "description": "Returns the system handle of the chart window.", 
        "title": "WindowHandle"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowisvisible.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowIsVisible", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Subwindow index."
                    }
                ]
            }
        ], 
        "description": "Returns the visibility flag of the chart subwindow.", 
        "title": "WindowIsVisible"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowondropped.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the window index where Expert Advisor, custom indicator or script was dropped.", 
        "title": "WindowOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowpricemax.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowPriceMax", 
                "parameters": [
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Chart subwindow index (0 - main chart window)."
                    }
                ]
            }
        ], 
        "description": "Returns the maximal value of the vertical scale of the specified subwindow of the current chart.", 
        "title": "WindowPriceMax"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowpricemin.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowPriceMin", 
                "parameters": [
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Chart subwindow index (0 - main chart window)."
                    }
                ]
            }
        ], 
        "description": "Returns the minimal value of the vertical scale of the specified subwindow of the current chart.", 
        "title": "WindowPriceMin"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowpriceondropped.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "WindowPriceOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the price of the chart point where Expert Advisor or script was dropped.", 
        "title": "WindowPriceOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowredraw.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "WindowRedraw", 
                "parameters": []
            }
        ], 
        "description": "Redraws the current chart forcedly.", 
        "title": "WindowRedraw"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowscreenshot.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "WindowScreenShot", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "filename", 
                        "description": "[in] Screen shot file name. Screenshot is saved to \\Files folder."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "size_x", 
                        "description": "[in] Screen shot width in pixels."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "size_y", 
                        "description": "[in] Screen shot height in pixels."
                    }, 
                    {
                        "default": "-1", 
                        "type": "int", 
                        "name": "start_bar", 
                        "description": "[in] Index of the first visible bar in the screen shot. If 0 value is set, the current first visible bar will be shot. If no value or negative value has been set, the end-of-chart screen shot will be produced, indent being taken into consideration."
                    }, 
                    {
                        "default": "-1", 
                        "type": "int", 
                        "name": "chart_scale", 
                        "description": "[in] Horizontal chart scale for screen shot. Can be in the range from 0 to 5. If no value or negative value has been set, the current chart scale will be used."
                    }, 
                    {
                        "default": "-1", 
                        "type": "int", 
                        "name": "chart_mode", 
                        "description": "[in] Chart displaying mode. It can take the following values: CHART_BAR (0 is a sequence of bars), CHART_CANDLE (1 is a sequence of candlesticks), CHART_LINE (2 is a close prices line). If no value or negative value has been set, the chart will be shown in its current mode."
                    }
                ]
            }
        ], 
        "description": "Saves current chart screen shot as a GIF file.", 
        "title": "WindowScreenShot"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowtimeondropped.html", 
        "functions": [
            {
                "returnType": "DateTime", 
                "name": "WindowTimeOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the time of the chart point where Expert Advisor or script was dropped.", 
        "title": "WindowTimeOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowstotal.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowsTotal", 
                "parameters": []
            }
        ], 
        "description": "Returns total number of indicator windows on the chart.", 
        "title": "WindowsTotal"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowxondropped.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowXOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the value at X axis in pixels for the chart window client area point at which the Expert Advisor or script was dropped.", 
        "title": "WindowXOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/chart_operations/windowyondropped.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "WindowYOnDropped", 
                "parameters": []
            }
        ], 
        "description": "Returns the value at Y axis in pixels for the chart window client area point at which the Expert Advisor or script was dropped.", 
        "title": "WindowYOnDropped"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderclose.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "OrderClose", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ticket", 
                        "description": "[in] Unique number of the order ticket."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "lots", 
                        "description": "[in] Number of lots."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "price", 
                        "description": "[in] Closing price."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "slippage", 
                        "description": "[in] Value of the maximum price slippage in points."
                    }, 
                    {
                        "default": "", 
                        "type": "COLOR", 
                        "name": "arrow_color", 
                        "description": "[in] Color of the closing arrow on the chart. If the parameter is missing or has CLR_NONE value closing arrow will not be drawn on the chart."
                    }
                ]
            }
        ], 
        "description": "Closes opened order.", 
        "title": "OrderClose"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordercloseby.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "OrderCloseBy", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ticket", 
                        "description": "[in] Unique number of the order ticket."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "opposite", 
                        "description": "[in] Unique number of the opposite order ticket."
                    }, 
                    {
                        "default": "", 
                        "type": "COLOR", 
                        "name": "arrow_color", 
                        "description": "[in] Color of the closing arrow on the chart. If the parameter is missing or has CLR_NONE value closing arrow will not be drawn on the chart."
                    }
                ]
            }
        ], 
        "description": "Closes an opened order by another opposite opened order.", 
        "title": "OrderCloseBy"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordercloseprice.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "OrderClosePrice", 
                "parameters": []
            }
        ], 
        "description": "Returns close price of the currently selected order.", 
        "title": "OrderClosePrice"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderclosetime.html", 
        "functions": [
            {
                "returnType": "DateTime", 
                "name": "OrderCloseTime", 
                "parameters": []
            }
        ], 
        "description": "Returns close time of the currently selected order.", 
        "title": "OrderCloseTime"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordercomment.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "OrderComment", 
                "parameters": []
            }
        ], 
        "description": "Returns comment of the currently selected order.", 
        "title": "OrderComment"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordercommission.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "OrderCommission", 
                "parameters": []
            }
        ], 
        "description": "Returns calculated commission of the currently selected order.", 
        "title": "OrderCommission"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderdelete.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "OrderDelete", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ticket", 
                        "description": "[in] Unique number of the order ticket."
                    }, 
                    {
                        "default": "", 
                        "type": "COLOR", 
                        "name": "arrow_color", 
                        "description": "[in] Color of the arrow on the chart. If the parameter is missing or has CLR_NONE value arrow will not be drawn on the chart."
                    }
                ]
            }
        ], 
        "description": "Deletes previously opened pending order.", 
        "title": "OrderDelete"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderexpiration.html", 
        "functions": [
            {
                "returnType": "DateTime", 
                "name": "OrderExpiration", 
                "parameters": []
            }
        ], 
        "description": "Returns expiration date of the selected pending order.", 
        "title": "OrderExpiration"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderlots.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "OrderLots", 
                "parameters": []
            }
        ], 
        "description": "Returns amount of lots of the selected order.", 
        "title": "OrderLots"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordermagicnumber.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "OrderMagicNumber", 
                "parameters": []
            }
        ], 
        "description": "Returns an identifying (magic) number of the currently selected order.", 
        "title": "OrderMagicNumber"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordermodify.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "OrderModify", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ticket", 
                        "description": "[in] Unique number of the order ticket."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "price", 
                        "description": "[in] New open price of the pending order."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "stoploss", 
                        "description": "[in] New StopLoss level."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "takeprofit", 
                        "description": "[in] New TakeProfit level."
                    }, 
                    {
                        "default": "", 
                        "type": "DateTime", 
                        "name": "expiration", 
                        "description": "[in] Pending order expiration time."
                    }, 
                    {
                        "default": "", 
                        "type": "COLOR", 
                        "name": "arrow_color", 
                        "description": "[in] Arrow color for StopLoss/TakeProfit modifications in the chart. If the parameter is missing or has CLR_NONE value, the arrows will not be shown in the chart."
                    }
                ]
            }
        ], 
        "description": "Modification of characteristics of the previously opened or pending orders.", 
        "title": "OrderModify"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderopenprice.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "OrderOpenPrice", 
                "parameters": []
            }
        ], 
        "description": "Returns open price of the currently selected order.", 
        "title": "OrderOpenPrice"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderopentime.html", 
        "functions": [
            {
                "returnType": "DateTime", 
                "name": "OrderOpenTime", 
                "parameters": []
            }
        ], 
        "description": "Returns open time of the currently selected order.", 
        "title": "OrderOpenTime"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderprint.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "OrderPrint", 
                "parameters": []
            }
        ], 
        "description": "Prints information about the selected order in the log.", 
        "title": "OrderPrint"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderprofit.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "OrderProfit", 
                "parameters": []
            }
        ], 
        "description": "Returns profit of the currently selected order.", 
        "title": "OrderProfit"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderselect.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "OrderSelect", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": ""
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "select", 
                        "description": "[in] Selecting flags. It can be any of the following values:"
                    }, 
                    {
                        "default": "MODE_TRADES", 
                        "type": "int", 
                        "name": "pool", 
                        "description": "SELECT_BY_POS - index in the order pool, SELECT_BY_TICKET - index is order ticket."
                    }
                ]
            }
        ], 
        "description": "The function selects an order for further processing.", 
        "title": "OrderSelect"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordersend.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "OrderSend", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol for trading."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "cmd", 
                        "description": "[in] Operation type. It can be any of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "volume", 
                        "description": "[in] Number of lots."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "price", 
                        "description": "[in] Order price."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "slippage", 
                        "description": "[in] Maximum price slippage for buy or sell orders."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "stoploss", 
                        "description": "[in] Stop loss level."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "takeprofit", 
                        "description": "[in] Take profit level."
                    }, 
                    {
                        "default": "NULL", 
                        "type": "string", 
                        "name": "comment", 
                        "description": "[in] Order comment text. Last part of the comment may be changed by server."
                    }, 
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "magic", 
                        "description": "[in] Order magic number. May be used as user defined identifier."
                    }, 
                    {
                        "default": "0", 
                        "type": "DateTime", 
                        "name": "expiration", 
                        "description": "[in] Order expiration time (for pending orders only)."
                    }, 
                    {
                        "default": "clrNONE", 
                        "type": "COLOR", 
                        "name": "arrow_color", 
                        "description": "[in] Color of the opening arrow on the chart. If parameter is missing or has CLR_NONE value opening arrow is not drawn on the chart."
                    }
                ]
            }
        ], 
        "description": "The main function used to open market or place a pending order.", 
        "title": "OrderSend"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordershistorytotal.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "OrdersHistoryTotal", 
                "parameters": []
            }
        ], 
        "description": "Returns the number of closed orders in the account history loaded into the terminal.", 
        "title": "OrdersHistoryTotal"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderstoploss.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "OrderStopLoss", 
                "parameters": []
            }
        ], 
        "description": "Returns stop loss value of the currently selected order.", 
        "title": "OrderStopLoss"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderstotal.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "OrdersTotal", 
                "parameters": []
            }
        ], 
        "description": "Returns the number of market and pending orders.", 
        "title": "OrdersTotal"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderswap.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "OrderSwap", 
                "parameters": []
            }
        ], 
        "description": "Returns swap value of the currently selected order.", 
        "title": "OrderSwap"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordersymbol.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "OrderSymbol", 
                "parameters": []
            }
        ], 
        "description": "Returns symbol name of the currently selected order.", 
        "title": "OrderSymbol"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordertakeprofit.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "OrderTakeProfit", 
                "parameters": []
            }
        ], 
        "description": "Returns take profit value of the currently selected order.", 
        "title": "OrderTakeProfit"
    }, 
    {
        "url": "http://docs.mql4.com/trading/orderticket.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "OrderTicket", 
                "parameters": []
            }
        ], 
        "description": "Returns ticket number of the currently selected order.", 
        "title": "OrderTicket"
    }, 
    {
        "url": "http://docs.mql4.com/trading/ordertype.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "OrderType", 
                "parameters": []
            }
        ], 
        "description": "Returns order operation type of the currently selected order.", 
        "title": "OrderType"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalbasegetdouble.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "SignalBaseGetDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "ENUM_SIGNAL_BASE_DOUBLE", 
                        "name": "property_id", 
                        "description": "[in] Signal property identifier. The value can be one of the values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of", 
        "title": "SignalBaseGetDouble"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalbasegetinteger.html", 
        "functions": [
            {
                "returnType": "long", 
                "name": "SignalBaseGetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "ENUM_SIGNAL_BASE_INTEGER", 
                        "name": "property_id", 
                        "description": "[in] Signal property identifier. The value can be one of the values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of", 
        "title": "SignalBaseGetInteger"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalbasegetstring.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "SignalBaseGetString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "ENUM_SIGNAL_BASE_STRING", 
                        "name": "property_id", 
                        "description": "[in] Signal property identifier. The value can be one of the values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of", 
        "title": "SignalBaseGetString"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalbaseselect.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "SignalBaseSelect", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Signal index in base of trading signals."
                    }
                ]
            }
        ], 
        "description": "Selects a signal from signals, available in terminal for further working with it.", 
        "title": "SignalBaseSelect"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalbasetotal.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "SignalBaseTotal", 
                "parameters": []
            }
        ], 
        "description": "Returns the total amount of signals, available in terminal.", 
        "title": "SignalBaseTotal"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalinfogetdouble.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "SignalInfoGetDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "ENUM_SIGNAL_INFO_DOUBLE", 
                        "name": "property_id", 
                        "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of", 
        "title": "SignalInfoGetDouble"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalinfogetinteger.html", 
        "functions": [
            {
                "returnType": "long", 
                "name": "SignalInfoGetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "ENUM_SIGNAL_INFO_INTEGER", 
                        "name": "property_id", 
                        "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of", 
        "title": "SignalInfoGetInteger"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalinfogetstring.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "SignalInfoGetString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "ENUM_SIGNAL_INFO_STRING", 
                        "name": "property_id", 
                        "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                    }
                ]
            }
        ], 
        "description": "Returns the value of", 
        "title": "SignalInfoGetString"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalinfosetdouble.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "SignalInfoSetDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "ENUM_SIGNAL_INFO_DOUBLE", 
                        "name": "property_id", 
                        "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "value", 
                        "description": "[in] The value of signal copy settings property."
                    }
                ]
            }
        ], 
        "description": "Sets the value of", 
        "title": "SignalInfoSetDouble"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalinfosetinteger.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "SignalInfoSetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "ENUM_SIGNAL_INFO_INTEGER", 
                        "name": "property_id", 
                        "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "value", 
                        "description": "[in] The value of signal copy settings property."
                    }
                ]
            }
        ], 
        "description": "Sets the value of", 
        "title": "SignalInfoSetInteger"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalsubscribe.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "SignalSubscribe", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "signal_id", 
                        "description": "[in] Signal identifier."
                    }
                ]
            }
        ], 
        "description": "Subscribes to the trading signal.", 
        "title": "SignalSubscribe"
    }, 
    {
        "url": "http://docs.mql4.com/signals/signalunsubscribe.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "SignalUnsubscribe", 
                "parameters": []
            }
        ], 
        "description": "Cancels subscription.", 
        "title": "SignalUnsubscribe"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariablecheck.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "GlobalVariableCheck", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] Global variable name."
                    }
                ]
            }
        ], 
        "description": "Checks the existence of a global variable with the specified name", 
        "title": "GlobalVariableCheck"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariabletime.html", 
        "functions": [
            {
                "returnType": "DateTime", 
                "name": "GlobalVariableTime", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] Name of the global variable."
                    }
                ]
            }
        ], 
        "description": "Returns the time when the global variable was last accessed.", 
        "title": "GlobalVariableTime"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariabledel.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "GlobalVariableDel", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] Global variable name."
                    }
                ]
            }
        ], 
        "description": "Deletes a global variable from the client terminal", 
        "title": "GlobalVariableDel"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariableget.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "GlobalVariableGet", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] Global variable name."
                    }
                ]
            }
        ], 
        "description": "Returns the value of an existing global variable of the client terminal. There are 2 variants of the function.", 
        "title": "GlobalVariableGet"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariablename.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "GlobalVariableName", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Sequence number in the list of global variables. It should be greater than or equal to 0 and less than ."
                    }
                ]
            }
        ], 
        "description": "Returns the name of a global variable by its ordinal number.", 
        "title": "GlobalVariableName"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariableset.html", 
        "functions": [
            {
                "returnType": "DateTime", 
                "name": "GlobalVariableSet", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] Global variable name."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "value", 
                        "description": "[in] The new numerical value."
                    }
                ]
            }
        ], 
        "description": "Sets a new value for a global variable. If the variable does not exist, the system creates a new global variable.", 
        "title": "GlobalVariableSet"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariablesflush.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "GlobalVariablesFlush", 
                "parameters": []
            }
        ], 
        "description": "Forcibly saves contents of all global variables to a disk.", 
        "title": "GlobalVariablesFlush"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariabletemp.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "GlobalVariableTemp", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] The name of a temporary global variable."
                    }
                ]
            }
        ], 
        "description": "The function attempts to create a temporary global variable. If the variable doesn't exist, the system creates a new temporary global variable.", 
        "title": "GlobalVariableTemp"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariablesetoncondition.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "GlobalVariableSetOnCondition", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] The name of a global variable."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "value", 
                        "description": "[in] New value."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "check_value", 
                        "description": "[in] The value to check the current value of the global variable."
                    }
                ]
            }
        ], 
        "description": "Sets the new value of the existing global variable if the current value equals to the third parameter check_value. If there is no global variable, the function will generate an error ERR_GLOBALVARIABLE_NOT_FOUND (4501) and return false.", 
        "title": "GlobalVariableSetOnCondition"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariablesdeleteall.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "GlobalVariablesDeleteAll", 
                "parameters": [
                    {
                        "default": "NULL", 
                        "type": "string", 
                        "name": "prefix_name", 
                        "description": "[in] Name prefix global variables to remove. If you specify a prefix NULL or empty string, then all variables that meet the data criterion will be deleted."
                    }, 
                    {
                        "default": "0", 
                        "type": "DateTime", 
                        "name": "limit_data", 
                        "description": "[in] Optional parameter. Date to select global variables by the time of their last modification. The function removes global variables, which were changed before this date. If the parameter is zero, then all variables that meet the first criterion (prefix) are deleted."
                    }
                ]
            }
        ], 
        "description": "Deletes global variables of the client terminal.", 
        "title": "GlobalVariablesDeleteAll"
    }, 
    {
        "url": "http://docs.mql4.com/globals/globalvariablestotal.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "GlobalVariablesTotal", 
                "parameters": []
            }
        ], 
        "description": "Returns the total number of global variables of the client terminal.", 
        "title": "GlobalVariablesTotal"
    }, 
    {
        "url": "http://docs.mql4.com/customind/hidetestindicators.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "HideTestIndicators", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "bool", 
                        "name": "hide", 
                        "description": "[in] Hiding flag."
                    }
                ]
            }
        ], 
        "description": "The function sets a flag hiding indicators called by the Expert Advisor.", 
        "title": "HideTestIndicators"
    }, 
    {
        "url": "http://docs.mql4.com/customind/indicatorsetdouble.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IndicatorSetDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "prop_value", 
                        "description": "[in] Value of property."
                    }
                ]
            }, 
            {
                "returnType": "bool", 
                "name": "IndicatorSetDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_modifier", 
                        "description": "[in] Modifier of the specified property. Only level properties require a modifier. Numbering of levels starts from 0. It means that in order to set property for the second level you need to specify 1 (1 less than when using )."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "prop_value", 
                        "description": "[in] Value of property."
                    }
                ]
            }
        ], 
        "description": "The function sets the value of the corresponding indicator property. Indicator property must be of the double type. There are two variants of the function.", 
        "title": "IndicatorSetDouble"
    }, 
    {
        "url": "http://docs.mql4.com/customind/indicatorsetinteger.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IndicatorSetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_value", 
                        "description": "[in] Value of property."
                    }
                ]
            }, 
            {
                "returnType": "bool", 
                "name": "IndicatorSetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_modifier", 
                        "description": "[in] Modifier of the specified property. Only level properties require a modifier."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_value", 
                        "description": "[in] Value of property."
                    }
                ]
            }
        ], 
        "description": "The function sets the value of the corresponding indicator property. Indicator property must be of the int or color type. There are two variants of the function.", 
        "title": "IndicatorSetInteger"
    }, 
    {
        "url": "http://docs.mql4.com/customind/indicatorsetstring.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IndicatorSetString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "prop_value", 
                        "description": "[in] Value of property."
                    }
                ]
            }, 
            {
                "returnType": "bool", 
                "name": "IndicatorSetString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_modifier", 
                        "description": "[in] Modifier of the specified property. Only level properties require a modifier."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "prop_value", 
                        "description": "[in] Value of property."
                    }
                ]
            }
        ], 
        "description": "The function sets the value of the corresponding indicator property. Indicator property must be of the string type. There are two variants of the function.", 
        "title": "IndicatorSetString"
    }, 
    {
        "url": "http://docs.mql4.com/customind/indicatorbuffers.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "IndicatorBuffers", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "count", 
                        "description": "[in] Amount of buffers to be allocated. Should be within the range between indicator_buffers and 512 buffers."
                    }
                ]
            }
        ], 
        "description": "Allocates memory for buffers used for custom indicator calculations.", 
        "title": "IndicatorBuffers"
    }, 
    {
        "url": "http://docs.mql4.com/customind/indicatorcounted.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "IndicatorCounted", 
                "parameters": []
            }
        ], 
        "description": "The function returns the amount of bars not changed after the indicator had been launched last.", 
        "title": "IndicatorCounted"
    }, 
    {
        "url": "http://docs.mql4.com/customind/indicatordigits.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "IndicatorDigits", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "digits", 
                        "description": "[in] Precision format, the count of digits after decimal point."
                    }
                ]
            }
        ], 
        "description": "Sets precision format (the count of digits after decimal point) to visualize indicator values.", 
        "title": "IndicatorDigits"
    }, 
    {
        "url": "http://docs.mql4.com/customind/indicatorshortname.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "IndicatorShortName", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] New short name."
                    }
                ]
            }
        ], 
        "description": "Sets the \"short\" name of a custom indicator to be shown in the DataWindow and in the chart subwindow.", 
        "title": "IndicatorShortName"
    }, 
    {
        "url": "http://docs.mql4.com/customind/setindexarrow.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "SetIndexArrow", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Line index. Must lie between 0 and 7."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "code", 
                        "description": "[in] Symbol code from or predefined ."
                    }
                ]
            }
        ], 
        "description": "Sets an arrow symbol for indicators line of the DRAW_ARROW type.", 
        "title": "SetIndexArrow"
    }, 
    {
        "url": "http://docs.mql4.com/customind/setindexdrawbegin.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "SetIndexDrawBegin", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Line index. Must lie between 0 and 7."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "begin", 
                        "description": "[in] First drawing bar position number."
                    }
                ]
            }
        ], 
        "description": "Sets the bar number (from the data beginning) from which the drawing of the given indicator line must start.", 
        "title": "SetIndexDrawBegin"
    }, 
    {
        "url": "http://docs.mql4.com/customind/setindexemptyvalue.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "SetIndexEmptyValue", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Line index. Must lie between 0 and 7."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "value", 
                        "description": "[in] New \"empty\" value."
                    }
                ]
            }
        ], 
        "description": "Sets drawing line empty value.", 
        "title": "SetIndexEmptyValue"
    }, 
    {
        "url": "http://docs.mql4.com/customind/setindexlabel.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "SetIndexLabel", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Line index. Must lie between 0 and 7."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "text", 
                        "description": "[in] Label text. NULL means that index value is not shown in the DataWindow."
                    }
                ]
            }
        ], 
        "description": "Sets drawing line description for showing in the DataWindow and in the tooltip.", 
        "title": "SetIndexLabel"
    }, 
    {
        "url": "http://docs.mql4.com/customind/setindexshift.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "SetIndexShift", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Line index. Must lie between 0 and 7."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Shift value in bars."
                    }
                ]
            }
        ], 
        "description": "Sets offset for the drawing line.", 
        "title": "SetIndexShift"
    }, 
    {
        "url": "http://docs.mql4.com/customind/setindexstyle.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "SetIndexStyle", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Line index. Must lie between 0 and 7."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "type", 
                        "description": "[in] Shape style. Can be one of listed."
                    }, 
                    {
                        "default": "EMPTY", 
                        "type": "int", 
                        "name": "style", 
                        "description": "[in] Drawing style. It is used for one-pixel thick lines. It can be one of the listed. EMPTY value means that the style will not be changed."
                    }, 
                    {
                        "default": "EMPTY", 
                        "type": "int", 
                        "name": "width", 
                        "description": "[in] Line width. Valid values are: 1,2,3,4,5. EMPTY value means that width will not be changed."
                    }, 
                    {
                        "default": "clrNONE", 
                        "type": "COLOR", 
                        "name": "clr", 
                        "description": "[in] Line color. Absence of this parameter means that the color will not be changed."
                    }
                ]
            }
        ], 
        "description": "Sets the new type, style, width and color for a given indicator line.", 
        "title": "SetIndexStyle"
    }, 
    {
        "url": "http://docs.mql4.com/customind/setlevelstyle.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "SetLevelStyle", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "draw_style", 
                        "description": "[in] Drawing style. Can be one of the listed. EMPTY value means that the style will not be changed."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "line_width", 
                        "description": "[in] Line width. Valid values are 1,2,3,4,5. EMPTY value indicates that the width will not be changed."
                    }, 
                    {
                        "default": "", 
                        "type": "COLOR", 
                        "name": "clr", 
                        "description": "[in] Line color. Empty value CLR_NONE means that the color will not be changed."
                    }
                ]
            }
        ], 
        "description": "The function sets a new style, width and color of horizontal levels of indicator to be output in a separate window.", 
        "title": "SetLevelStyle"
    }, 
    {
        "url": "http://docs.mql4.com/customind/setlevelvalue.html", 
        "functions": [
            {
                "returnType": "void", 
                "name": "SetLevelValue", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "level", 
                        "description": "[in] Level index (0-31)."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "value", 
                        "description": "[in] Value for the given indicator level."
                    }
                ]
            }
        ], 
        "description": "The function sets a value for a given horizontal level of the indicator to be output in a separate window.", 
        "title": "SetLevelValue"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectcreate.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ObjectCreate", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object. The name must be unique within a chart, including its subwindows."
                    }, 
                    {
                        "default": "", 
                        "type": "ENUM_OBJECT", 
                        "name": "object_type", 
                        "description": "[in] Object type. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "sub_window", 
                        "description": "[in] Number of the chart subwindow. 0 means the main chart window. The specified subwindow must exist (window index must be greater or equal to 0 and less than ), otherwise the function returns false."
                    }, 
                    {
                        "default": "", 
                        "type": "DateTime", 
                        "name": "time1", 
                        "description": "[in] The time coordinate of the first anchor point."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "price1", 
                        "description": "[in] The price coordinate of the first anchor point."
                    }, 
                    {
                        "default": "0", 
                        "type": "DateTime", 
                        "name": "timeN", 
                        "description": "[in] The time coordinate of the N-th anchor point."
                    }, 
                    {
                        "default": "0", 
                        "type": "double", 
                        "name": "priceN", 
                        "description": "[in] The price coordinate of the N-th anchor point."
                    }
                ]
            }, 
            {
                "returnType": "bool", 
                "name": "ObjectCreate", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object. The name must be unique within a chart, including its subwindows."
                    }, 
                    {
                        "default": "", 
                        "type": "ENUM_OBJECT", 
                        "name": "object_type", 
                        "description": "[in] Object type. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "sub_window", 
                        "description": "[in] Number of the chart subwindow. 0 means the main chart window. The specified subwindow must exist (window index must be greater or equal to 0 and less than ), otherwise the function returns false."
                    }, 
                    {
                        "default": "", 
                        "type": "DateTime", 
                        "name": "time1", 
                        "description": "[in] The time coordinate of the first anchor point."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "price1", 
                        "description": "[in] The price coordinate of the first anchor point."
                    }, 
                    {
                        "default": "0", 
                        "type": "DateTime", 
                        "name": "time2", 
                        "description": "[in] The time coordinate of the second anchor point."
                    }, 
                    {
                        "default": "0", 
                        "type": "double", 
                        "name": "price2", 
                        "description": "[in] The price coordinate of the second anchor point."
                    }, 
                    {
                        "default": "0", 
                        "type": "DateTime", 
                        "name": "time3", 
                        "description": "[in] The time coordinate of the third anchor point."
                    }, 
                    {
                        "default": "0", 
                        "type": "double", 
                        "name": "price3", 
                        "description": "[in] The price coordinate of the third anchor point."
                    }
                ]
            }
        ], 
        "description": "The function creates an object with the specified name, type, and the initial coordinates in the specified chart subwindow of the specified chart. There are two variants of the function:", 
        "title": "ObjectCreate"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectname.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "ObjectName", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "object_index", 
                        "description": "[in] Object index. This value must be greater or equal to 0 and less than ."
                    }
                ]
            }
        ], 
        "description": "The function returns the name of the corresponding object by its index in the objects list.", 
        "title": "ObjectName"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectdelete.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ObjectDelete", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of object to be deleted."
                    }
                ]
            }, 
            {
                "returnType": "bool", 
                "name": "ObjectDelete", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of object to be deleted."
                    }
                ]
            }
        ], 
        "description": "The function removes the object with the specified name at the specified chart. There are two variants of the function:", 
        "title": "ObjectDelete"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectsdeleteall.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ObjectsDeleteAll", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier."
                    }, 
                    {
                        "default": "EMPTY", 
                        "type": "int", 
                        "name": "sub_window", 
                        "description": "[in] Number of the chart window. Must be greater or equal to -1 (-1 mean all subwindows, 0 means the main chart window) and less than ."
                    }, 
                    {
                        "default": "EMPTY", 
                        "type": "int", 
                        "name": "object_type", 
                        "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY (-1) means all types."
                    }
                ]
            }, 
            {
                "returnType": "int", 
                "name": "ObjectsDeleteAll", 
                "parameters": [
                    {
                        "default": "EMPTY", 
                        "type": "int", 
                        "name": "sub_window", 
                        "description": "[in] Number of the chart window. Must be greater or equal to -1 (-1 mean all subwindows, 0 means the main chart window) and less than ."
                    }, 
                    {
                        "default": "EMPTY", 
                        "type": "int", 
                        "name": "object_type", 
                        "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY (-1) means all types."
                    }
                ]
            }, 
            {
                "returnType": "int", 
                "name": "ObjectsDeleteAll", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "prefix", 
                        "description": "[in] Prefix in object names. All objects whose names start with this set of characters will be removed from chart. You can specify prefix as 'name' or 'name*' both variants will work the same. If an empty string is specified as the prefix, objects with all possible names will be removed."
                    }, 
                    {
                        "default": "EMPTY", 
                        "type": "int", 
                        "name": "sub_window", 
                        "description": "[in] Number of the chart window. Must be greater or equal to -1 (-1 mean all subwindows, 0 means the main chart window) and less than ."
                    }, 
                    {
                        "default": "EMPTY", 
                        "type": "int", 
                        "name": "object_type", 
                        "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY (-1) means all types."
                    }
                ]
            }
        ], 
        "description": "Removes all objects from the specified chart, specified chart subwindow, of the specified type.", 
        "title": "ObjectsDeleteAll"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectfind.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ObjectFind", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] The name of the object to find."
                    }
                ]
            }, 
            {
                "returnType": "int", 
                "name": "ObjectFind", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] The name of the object to find."
                    }
                ]
            }
        ], 
        "description": "The function searches for an object having the specified name. There are two variants of the function:", 
        "title": "ObjectFind"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectgettimebyvalue.html", 
        "functions": [
            {
                "returnType": "DateTime", 
                "name": "ObjectGetTimeByValue", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "value", 
                        "description": "[in] Price value."
                    }, 
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "line_id", 
                        "description": "[in] Line identifier."
                    }
                ]
            }
        ], 
        "description": "The function returns the time value for the specified price value of the specified object.", 
        "title": "ObjectGetTimeByValue"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectgetvaluebytime.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "ObjectGetValueByTime", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "DateTime", 
                        "name": "time", 
                        "description": "[in] Time value."
                    }, 
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "line_id", 
                        "description": "[in] Line identifier."
                    }
                ]
            }
        ], 
        "description": "The function returns the price value for the specified time value of the specified object.", 
        "title": "ObjectGetValueByTime"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectmove.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ObjectMove", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "point_index", 
                        "description": "[in] Index of the anchor point. The number of anchor points depends on the ."
                    }, 
                    {
                        "default": "", 
                        "type": "DateTime", 
                        "name": "time", 
                        "description": "[in] Time coordinate of the selected anchor point."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "price", 
                        "description": "[in] Price coordinate of the selected anchor point."
                    }
                ]
            }
        ], 
        "description": "The function changes coordinates of the specified anchor point of the object at the specified chart. There are two variants of the function:", 
        "title": "ObjectMove"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectstotal.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ObjectsTotal", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier."
                    }, 
                    {
                        "default": "-1", 
                        "type": "int", 
                        "name": "sub_window", 
                        "description": "[in] Number of the chart subwindow. 0 means the main chart window, -1 means all the subwindows of the chart, including the main window."
                    }, 
                    {
                        "default": "-1", 
                        "type": "int", 
                        "name": "type", 
                        "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY(-1) means all types."
                    }
                ]
            }, 
            {
                "returnType": "int", 
                "name": "ObjectsTotal", 
                "parameters": [
                    {
                        "default": "EMPTY", 
                        "type": "int", 
                        "name": "type", 
                        "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY(-1) means all types."
                    }
                ]
            }
        ], 
        "description": "The function returns the number of objects of the specified type in the specified chart. There are two variants of the function:", 
        "title": "ObjectsTotal"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectgetdouble.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "ObjectGetDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "prop_modifier", 
                        "description": "[in] Modifier of the specified property. For the first variant, the default modifier value is equal to 0. Most properties do not require a modifier. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                    }
                ]
            }
        ], 
        "description": "The function returns the value of the corresponding object property. The object property must be of the", 
        "title": "ObjectGetDouble"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectgetinteger.html", 
        "functions": [
            {
                "returnType": "long", 
                "name": "ObjectGetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "prop_modifier", 
                        "description": "[in] Modifier of the specified property. For the first variant, the default modifier value is equal to 0. Most properties do not require a modifier. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                    }
                ]
            }
        ], 
        "description": "The function returns the value of the corresponding object property. The object property must be of the", 
        "title": "ObjectGetInteger"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectgetstring.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "ObjectGetString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "prop_modifier", 
                        "description": "[in] Modifier of the specified property. For the first variant, the default modifier value is equal to 0. Most properties do not require a modifier. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                    }
                ]
            }
        ], 
        "description": "The function returns the value of the corresponding object property. The object property must be of the", 
        "title": "ObjectGetString"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectsetdouble.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ObjectSetDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "prop_value", 
                        "description": "[in] The value of the property."
                    }
                ]
            }, 
            {
                "returnType": "bool", 
                "name": "ObjectSetDouble", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_modifier", 
                        "description": "[in] Modifier of the specified property. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "prop_value", 
                        "description": "[in] The value of the property."
                    }
                ]
            }
        ], 
        "description": "The function sets the value of the corresponding object property. The object property must be of the", 
        "title": "ObjectSetDouble"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectsetinteger.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ObjectSetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "prop_value", 
                        "description": "[in] The value of the property."
                    }
                ]
            }, 
            {
                "returnType": "bool", 
                "name": "ObjectSetInteger", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_modifier", 
                        "description": "[in] Modifier of the specified property. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                    }, 
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "prop_value", 
                        "description": "[in] The value of the property."
                    }
                ]
            }
        ], 
        "description": "The function sets the value of the corresponding object property. The object property must be of the", 
        "title": "ObjectSetInteger"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectsetstring.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ObjectSetString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "prop_value", 
                        "description": "[in] The value of the property."
                    }
                ]
            }, 
            {
                "returnType": "bool", 
                "name": "ObjectSetString", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "long", 
                        "name": "chart_id", 
                        "description": "[in] Chart identifier. 0 means the current chart."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Name of the object."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_id", 
                        "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "prop_modifier", 
                        "description": "[in] Modifier of the specified property. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "prop_value", 
                        "description": "[in] The value of the property."
                    }
                ]
            }
        ], 
        "description": "The function sets the value of the corresponding object property. The object property must be of the", 
        "title": "ObjectSetString"
    }, 
    {
        "url": "http://docs.mql4.com/objects/textsetfont.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "TextSetFont", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "name", 
                        "description": "[in] Font name in the system or the name of the resource containing the font or the path to font file on the disk."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "size", 
                        "description": "[in] The font size that can be set using positive and negative values. In case of positive values, the size of a displayed text does not depend on the operating system's font size settings. In case of negative values, the value is set in tenths of a point and the text size depends on the operating system settings (\"standard scale\" or \"large scale\"). See the Note below for more information about the differences between the modes."
                    }, 
                    {
                        "default": "0", 
                        "type": "uint", 
                        "name": "flags", 
                        "description": "[in] Combination of describing font style."
                    }, 
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "orientation", 
                        "description": "[in] Text's horizontal inclination to X axis, the unit of measurement is 0.1 degrees. It means that orientation=450 stands for inclination equal to 45 degrees."
                    }
                ]
            }
        ], 
        "description": "The function sets the font for displaying the text using drawing methods and returns the result of that operation. Arial font with the size -120 (12 pt) is used by default.", 
        "title": "TextSetFont"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectdescription.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "ObjectDescription", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Object name."
                    }
                ]
            }
        ], 
        "description": "Returns the object description.", 
        "title": "ObjectDescription"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectget.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "ObjectGet", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Object name."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Object property index. It can be any of the enumeration values."
                    }
                ]
            }
        ], 
        "description": "Returns the value of the specified object property.", 
        "title": "ObjectGet"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectgetfibodescription.html", 
        "functions": [
            {
                "returnType": "string", 
                "name": "ObjectGetFiboDescription", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Fibonacci object name."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Index of the Fibonacci level (0-31)."
                    }
                ]
            }
        ], 
        "description": "Returns the level description of a Fibonacci object.", 
        "title": "ObjectGetFiboDescription"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectgetshiftbyvalue.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ObjectGetShiftByValue", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Object name."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "value", 
                        "description": "[in] Price value."
                    }
                ]
            }
        ], 
        "description": "The function calculates and returns bar index (shift related to the current bar) for the given price.", 
        "title": "ObjectGetShiftByValue"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectgetvaluebyshift.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "ObjectGetValueByShift", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Object name."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Bar index."
                    }
                ]
            }
        ], 
        "description": "The function calculates and returns the price value for the specified bar (shift related to the current bar).", 
        "title": "ObjectGetValueByShift"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectset.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ObjectSet", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Object name."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Object property index. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "value", 
                        "description": "[in] New value of the given property."
                    }
                ]
            }
        ], 
        "description": "Changes the value of the specified object property.", 
        "title": "ObjectSet"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectsetfibodescription.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ObjectSetFiboDescription", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Object name."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "index", 
                        "description": "[in] Index of the Fibonacci level (0-31)."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "text", 
                        "description": "[in] New description of the level."
                    }
                ]
            }
        ], 
        "description": "The function sets a new description to a level of a Fibonacci object.", 
        "title": "ObjectSetFiboDescription"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objectsettext.html", 
        "functions": [
            {
                "returnType": "bool", 
                "name": "ObjectSetText", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Object name."
                    }, 
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "text", 
                        "description": "[in] A text describing the object."
                    }, 
                    {
                        "default": "0", 
                        "type": "int", 
                        "name": "font_size", 
                        "description": "[in] Font size in points."
                    }, 
                    {
                        "default": "NULL", 
                        "type": "string", 
                        "name": "font_name", 
                        "description": "[in] Font name."
                    }, 
                    {
                        "default": "clrNONE", 
                        "type": "COLOR", 
                        "name": "text_color", 
                        "description": "[in] Font color."
                    }
                ]
            }
        ], 
        "description": "The function c", 
        "title": "ObjectSetText"
    }, 
    {
        "url": "http://docs.mql4.com/objects/objecttype.html", 
        "functions": [
            {
                "returnType": "int", 
                "name": "ObjectType", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "object_name", 
                        "description": "[in] Object name."
                    }
                ]
            }
        ], 
        "description": "The function returns the object type value.", 
        "title": "ObjectType"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iac.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iAC", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Bill Williams' Accelerator/Decelerator oscillator and returns its value.", 
        "title": "iAC"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iad.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iAD", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Accumulation/Distribution indicator and returns its value.", 
        "title": "iAD"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iadx.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iADX", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period for calculation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Indicator line index. It can be any of the enumeration value. (0 - MODE_MAIN, 1 - MODE_PLUSDI, 2 - MODE_MINUSDI)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Average Directional Movement Index indicator and returns its value.", 
        "title": "iADX"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/ialligator.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iAlligator", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "jaw_period", 
                        "description": "[in] Blue line averaging period (Alligator's Jaw)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "jaw_shift", 
                        "description": "[in] Blue line shift relative to the chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "teeth_period", 
                        "description": "[in] Red line averaging period (Alligator's Teeth)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "teeth_shift", 
                        "description": "[in] Red line shift relative to the chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "lips_period", 
                        "description": "[in] Green line averaging period (Alligator's Lips)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "lips_shift", 
                        "description": "[in] Green line shift relative to the chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_method", 
                        "description": "[in] MA method. It can be any of Moving Average methods. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Data source, identifier of the . It can be any of the following values:"
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "MODE_GATORJAW - Gator Jaw (blue) balance line,MODE_GATORTEETH - Gator Teeth (red) balance line,MODE_GATORLIPS - Gator Lips (green) balance line."
                    }
                ]
            }
        ], 
        "description": "Calculates the Alligator indicator and returns its value.", 
        "title": "iAlligator"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iao.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iAO", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Awesome oscillator and returns its value.", 
        "title": "iAO"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iatr.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iATR", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Average True Range indicator and returns its value.", 
        "title": "iATR"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/ibearspower.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iBearsPower", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Bears Power indicator and returns its value.", 
        "title": "iBearsPower"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/ibands.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iBands", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period to calculate the main line."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "deviation", 
                        "description": "[in] Number of standard deviations from the main line."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "bands_shift", 
                        "description": "[in] The indicator shift relative to the chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Indicator line index. It can be any of the enumeration value (0 - MODE_MAIN, 1 - MODE_UPPER, 2 - MODE_LOWER)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Bollinger Bands indicator and returns its value.", 
        "title": "iBands"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/ibullspower.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iBullsPower", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period for calculation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Bulls Power indicator and returns its value.", 
        "title": "iBullsPower"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/icci.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iCCI", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period for calculation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Commodity Channel Index indicator and returns its value.", 
        "title": "iCCI"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/idemarker.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iDeMarker", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period for calculation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the DeMarker indicator and returns its value.", 
        "title": "iDeMarker"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/ienvelopes.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iEnvelopes", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_period", 
                        "description": "[in] Averaging period for calculation of the main line."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_method", 
                        "description": "[in] Moving Average method. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_shift", 
                        "description": "[in] MA shift. Indicator line offset relate to the chart by timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "deviation", 
                        "description": "[in] Percent deviation from the main line."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Indicator line index. It can be any of enumeration value (0 - MODE_MAIN, 1 - MODE_UPPER, 2 - MODE_LOWER)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Envelopes indicator and returns its value.", 
        "title": "iEnvelopes"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iforce.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iForce", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period for calculation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_method", 
                        "description": "[in] Moving Average method. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Force Index indicator and returns its value.", 
        "title": "iForce"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/ifractals.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iFractals", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Indicator line index. It can be any of the enumeration value."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Fractals indicator and returns its value.", 
        "title": "iFractals"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/igator.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iGator", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "jaw_period", 
                        "description": "[in] Blue line averaging period (Alligator's Jaw)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "jaw_shift", 
                        "description": "[in] Blue line shift relative to the chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "teeth_period", 
                        "description": "[in] Red line averaging period (Alligator's Teeth)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "teeth_shift", 
                        "description": "[in] Red line shift relative to the chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "lips_period", 
                        "description": "[in] Green line averaging period (Alligator's Lips)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "lips_shift", 
                        "description": "[in] Green line shift relative to the chart."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_method", 
                        "description": "[in] MA method. It can be any of enumeration value."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Indicator line index. It can be any of enumeration value."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "MODE_GATORJAW - blue line (Jaw line),MODE_GATORTEETH - red line (Teeth line),MODE_GATORLIPS - green line (Lips line)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Gator oscillator and returns its value.", 
        "title": "iGator"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iichimoku.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iIchimoku", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "tenkan_sen", 
                        "description": "[in] Tenkan Sen averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "kijun_sen", 
                        "description": "[in] Kijun Sen averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "senkou_span_b", 
                        "description": "[in] Senkou SpanB averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Source of data. It can be one of the enumeration (1 - MODE_TENKANSEN, 2 - MODE_KIJUNSEN, 3 - MODE_SENKOUSPANA, 4 - MODE_SENKOUSPANB, 5 - MODE_CHIKOUSPAN)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Ichimoku Kinko Hyo indicator and returns its value.", 
        "title": "iIchimoku"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/ibwmfi.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iBWMFI", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Market Facilitation Index indicator and returns its value.", 
        "title": "iBWMFI"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/imomentum.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iMomentum", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period (amount of bars) for calculation of price changes."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Momentum indicator and returns its value.", 
        "title": "iMomentum"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/imfi.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iMFI", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Period (amount of bars) for calculation of the indicator."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Money Flow Index indicator and returns its value.", 
        "title": "iMFI"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/ima.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iMA", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_period", 
                        "description": "[in] Averaging period for calculation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_shift", 
                        "description": "[in] MA shift. Indicators line offset relate to the chart by timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_method", 
                        "description": "[in] Moving Average method. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Moving Average indicator and returns its value.", 
        "title": "iMA"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iosma.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iOsMA", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "fast_ema_period", 
                        "description": "[in] Fast EMA averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "slow_ema_period", 
                        "description": "[in] Slow EMA averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "signal_period", 
                        "description": "[in] Signal line averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "iOsMA", 
        "title": "iOsMA"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/imacd.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iMACD", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "fast_ema_period", 
                        "description": "[in] Fast EMA averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "slow_ema_period", 
                        "description": "[in] Slow EMA averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "signal_period", 
                        "description": "[in] Signal line averaging period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Indicator line index. It can be one of the enumeration values (0-MODE_MAIN, 1-MODE_SIGNAL)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Moving Averages Convergence/Divergence indicator and returns its value.", 
        "title": "iMACD"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iobv.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iOBV", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the On Balance Volume indicator and returns its value.", 
        "title": "iOBV"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/isar.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iSAR", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "step", 
                        "description": "[in] The step of price increment, usually 0.02."
                    }, 
                    {
                        "default": "", 
                        "type": "double", 
                        "name": "maximum", 
                        "description": "[in] The maximum step, usually 0.2."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Parabolic Stop and Reverse system indicator and returns its value.", 
        "title": "iSAR"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/irsi.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iRSI", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period for calculation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Relative Strength Index indicator and returns its value.", 
        "title": "iRSI"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/irvi.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iRVI", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period for calculation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Indicator line index. It can be any of enumeration value."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Relative Vigor Index indicator and returns its value.", 
        "title": "iRVI"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/istddev.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iStdDev", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_period", 
                        "description": "[in] Moving Average period."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_shift", 
                        "description": "[in] Moving Average shift."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "ma_method", 
                        "description": "[in] Moving Average method. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "applied_price", 
                        "description": "[in] Applied price. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Standard Deviation indicator and returns its value.", 
        "title": "iStdDev"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/istochastic.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iStochastic", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "Kperiod", 
                        "description": "[in] Period of the %K line."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "Dperiod", 
                        "description": "[in] Period of the %D line."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "slowing", 
                        "description": "[in] Slowing value."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "method", 
                        "description": "[in] Moving Average method. It can be any of enumeration values."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "price_field", 
                        "description": "[in] Price field parameter. Can be one of this values: 0 - Low/High or 1 - Close/Close."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "mode", 
                        "description": "[in] Indicator line index. It can be any of the enumeration value (0 - MODE_MAIN, 1 - MODE_SIGNAL)."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Stochastic Oscillator and returns its value.", 
        "title": "iStochastic"
    }, 
    {
        "url": "http://docs.mql4.com/indicators/iwpr.html", 
        "functions": [
            {
                "returnType": "double", 
                "name": "iWPR", 
                "parameters": [
                    {
                        "default": "", 
                        "type": "string", 
                        "name": "symbol", 
                        "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "timeframe", 
                        "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "period", 
                        "description": "[in] Averaging period for calculation."
                    }, 
                    {
                        "default": "", 
                        "type": "int", 
                        "name": "shift", 
                        "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                    }
                ]
            }
        ], 
        "description": "Calculates the Larry Williams' Percent Range and returns its value.", 
        "title": "iWPR"
    }
]