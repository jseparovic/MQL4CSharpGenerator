[
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/alert.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "Alert", 
            "parameters": [
                {
                    "default": "", 
                    "type": "argument", 
                    "name": "first value", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "Displays a message in a separate window.", 
    "title": "Alert"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/checkpointer.html", 
    "functions": [
        {
            "returnType": "ENUM_POINTER_TYPE", 
            "name": "CheckPointer", 
            "parameters": [
                {
                    "default": "", 
                    "type": "object", 
                    "name": "*", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "The function returns the type of the object", 
    "title": "CheckPointer"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/comment.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "Comment", 
            "parameters": [
                {
                    "default": "", 
                    "type": "argument", 
                    "name": "first value", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "This function outputs a comment defined by a user in the top left corner of a chart.", 
    "title": "Comment"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/cryptencode.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "CryptEncode", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_CRYPT_METHOD", 
                    "name": "method", 
                    "description": "[in] Data transformation method. Can be one of the values of enumeration."
                }, 
                {
                    "default": "", 
                    "type": "const uchar&", 
                    "name": "data[]", 
                    "description": "[in] Source array."
                }, 
                {
                    "default": "", 
                    "type": "const uchar&", 
                    "name": "key[]", 
                    "description": "[in] Key array."
                }, 
                {
                    "default": "", 
                    "type": "uchar&", 
                    "name": "result[]", 
                    "description": "[out] Destination array."
                }
            ]
        }
    ], 
    "description": "Transforms the data from array with the specified method.", 
    "title": "CryptEncode"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/cryptdecode.html", 
    "functions": [
        {}
    ], 
    "description": "Performs the inverse transformation of the data from array, tranformed by", 
    "title": "CryptDecode"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/debugbreak.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "DebugBreak", 
            "parameters": []
        }
    ], 
    "description": "It is a program breakpoint in debugging.", 
    "title": "DebugBreak"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/expertremove.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "ExpertRemove", 
            "parameters": []
        }
    ], 
    "description": "The function stops an", 
    "title": "ExpertRemove"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/getpointer.html", 
    "functions": [
        {
            "returnType": "void*", 
            "name": "GetPointer", 
            "parameters": [
                {
                    "default": "", 
                    "type": "any_class", 
                    "name": "anyobject", 
                    "description": "[in] Object of any class."
                }
            ]
        }
    ], 
    "description": "The function returns the object", 
    "title": "GetPointer"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/gettickcount.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "GetTickCount", 
            "parameters": []
        }
    ], 
    "description": "The GetTickCount() function returns the number of milliseconds that elapsed since the system start.", 
    "title": "GetTickCount"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/getmicrosecondcount.html", 
    "functions": [
        {
            "returnType": "ulong", 
            "name": "GetMicrosecondCount", 
            "parameters": []
        }
    ], 
    "description": "The GetMicrosecondCount() function returns the number of microseconds that have elapsed since the start of MQL program.", 
    "title": "GetMicrosecondCount"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/messagebox.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "MessageBox", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "text", 
                    "description": "[in] Text, containing message to output."
                }, 
                {
                    "default": "NULL", 
                    "type": "string", 
                    "name": "caption", 
                    "description": "[in] Optional text to be displayed in the box header. If the parameter is empty, Expert Advisor name is shown in the box header."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "flags", 
                    "description": "[in] Optional defining appearance and behavior of a message box. Flags can be a combination of a special group of flags."
                }
            ]
        }
    ], 
    "description": "It creates and shows a message box and manages it. A message box contains a message and header, any combination of predefined signs and command buttons.", 
    "title": "MessageBox"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/periodseconds.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "PeriodSeconds", 
            "parameters": [
                {
                    "default": "PERIOD_CURRENT", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "period", 
                    "description": "[in] Value of a chart period from the enumeration . If the parameter isn't specified, it returns the number of seconds of the current chart period, at which the program runs."
                }
            ]
        }
    ], 
    "description": "This function returns number of seconds in a period.", 
    "title": "PeriodSeconds"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/playsound.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "PlaySound", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "filename", 
                    "description": "[in] Path to a sound file. If filename=NULL, the playback is stopped."
                }
            ]
        }
    ], 
    "description": "It plays a sound file.", 
    "title": "PlaySound"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/print.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "Print", 
            "parameters": [
                {
                    "default": "", 
                    "type": "argument", 
                    "name": "first value", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "It enters a message in the Expert Advisor log. Parameters can be of any type.", 
    "title": "Print"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/printformat.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "PrintFormat", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "format_string", 
                    "description": "[in] A format string consists of simple symbols, and if the format string is followed by arguments, it also contains format specifications."
                }
            ]
        }
    ], 
    "description": "It formats and enters sets of symbols and values in the Expert Advisor log in accordance with a preset format.", 
    "title": "PrintFormat"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/resetlasterror.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "ResetLastError", 
            "parameters": []
        }
    ], 
    "description": "Sets the value of the predefined variable", 
    "title": "ResetLastError"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/resourcecreate.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ResourceCreate", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "resource_name", 
                    "description": "[in] Resource name."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "path", 
                    "description": "[in] Relative path to the file, containing the resource data. If the path is started from \"\\\" (written as \"\\\\\"), it is assumed that file path is relative to terminal_data_folder\\MQL4\\, otherwise it is assumed that file is specified relative to .EX4 program folder."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ResourceCreate", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "resource_name", 
                    "description": "[in] Resource name."
                }, 
                {
                    "default": "", 
                    "type": "const uint&", 
                    "name": "data[]", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "img_width", 
                    "description": "[in] The width of the rectangular image area in pixels to be placed in the resource in the form of an image. It cannot be greater than the data_width value."
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "img_height", 
                    "description": "[in] The height of the rectangular image area in pixels to be placed in the resource in the form of an image."
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "data_xoffset", 
                    "description": "[in] The horizontal rightward offset of the rectangular area of the image."
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "data_yoffset", 
                    "description": "[in] The vertical downward offset of the rectangular area of the image."
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "data_width", 
                    "description": "[in] Required only for one-dimensional arrays. It denotes the full width of the image from the data set. If data_width=0, it is assumed to be equal to img_width. For two-dimensional arrays the parameter is ignored and is assumed to be equal to the second dimension of the data[] array."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_COLOR_FORMAT", 
                    "name": "color_format", 
                    "description": "[in] Color processing method, from a value from the enumeration."
                }
            ]
        }
    ], 
    "description": "Creates an image resource based on a data set. There are two variants of the function:", 
    "title": "ResourceCreate"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/resourcefree.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ResourceFree", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "resource_name", 
                    "description": "[in] name should start with \"::\"."
                }
            ]
        }
    ], 
    "description": "The function deletes", 
    "title": "ResourceFree"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/resourcereadimage.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ResourceReadImage", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "resource_name", 
                    "description": "[in] Name of the graphical resource containing an image. To gain access to its own resources, the name is used in brief form \"::resourcename\". If we download a resource from a compiled EX4 file, the full name should be used with the path relative to MQL4 directory, file and resource names \"path\\\\filename.ex4::resourcename\"."
                }, 
                {
                    "default": "", 
                    "type": "uint&", 
                    "name": "data[]", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "uint&", 
                    "name": "width", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "uint&", 
                    "name": "height", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "The function reads data from the graphical resource", 
    "title": "ResourceReadImage"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/resourcesave.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ResourceSave", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "resource_name", 
                    "description": "[in] The name of the resource, must start with \"::\"."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "file_name", 
                    "description": "[in] The name of the file relative to MQL4\\Files."
                }
            ]
        }
    ], 
    "description": "Saves a resource into the specified file.", 
    "title": "ResourceSave"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/setusererror.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "SetUserError", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ushort", 
                    "name": "user_error", 
                    "description": "[in] number set by a user."
                }
            ]
        }
    ], 
    "description": "Sets the predefined variable", 
    "title": "SetUserError"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/sendftp.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SendFTP", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "filename", 
                    "description": "[in] Name of sent file."
                }, 
                {
                    "default": "NULL", 
                    "type": "string", 
                    "name": "ftp_path", 
                    "description": "[in] FTP catalog. If a directory is not specified, directory described in settings is used."
                }
            ]
        }
    ], 
    "description": "Sends a file at the address, specified in the setting window of the \"FTP\" tab.", 
    "title": "SendFTP"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/sendnotification.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SendNotification", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "text", 
                    "description": "[in] The text of the notification. The message length should not exceed 255 characters."
                }
            ]
        }
    ], 
    "description": "Sends push notifications to the mobile terminals, whose MetaQuotes IDs are specified in the \"Notifications\" tab.", 
    "title": "SendNotification"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/sendmail.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SendMail", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "subject", 
                    "description": "[in] Email header."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "some_text", 
                    "description": "[in] Email body."
                }
            ]
        }
    ], 
    "description": "Sends an email at the address specified in the settings window of the \"Email\" tab.", 
    "title": "SendMail"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/sleep.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "Sleep", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "milliseconds", 
                    "description": "[in] Delay interval in milliseconds."
                }
            ]
        }
    ], 
    "description": "The function suspends execution of the current Expert Advisor or script within a specified interval.", 
    "title": "Sleep"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/terminalclose.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "TerminalClose", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "The function commands the terminal to complete operation.", 
    "title": "TerminalClose"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/testerstatistics.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "TesterStatistics", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_STATISTICS", 
                    "name": "", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "The function returns the value of the specified statistical parameter calculated based on testing results.", 
    "title": "TesterStatistics"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/webrequest.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WebRequest", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "method", 
                    "description": "[in] HTTP method."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "url", 
                    "description": "[in] URL."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "cookie", 
                    "description": "[in] Cookie value."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "referer", 
                    "description": "[in] Value of the Referer header of the HTTP request."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeout", 
                    "description": "[in] Timeout in milliseconds."
                }, 
                {
                    "default": "", 
                    "type": "const char", 
                    "name": "&data[]", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "data_size", 
                    "description": "[in] Size of the data[] array."
                }, 
                {
                    "default": "", 
                    "type": "char", 
                    "name": "&result[]", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "&result_headers", 
                    "description": ""
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "WebRequest", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "method", 
                    "description": "[in] HTTP method."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "url", 
                    "description": "[in] URL."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "headers", 
                    "description": "[in] Request headers of type \"key: value\", separated by a line break \"\\r\\n\"."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeout", 
                    "description": "[in] Timeout in milliseconds."
                }, 
                {
                    "default": "", 
                    "type": "const char", 
                    "name": "&data[]", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "char", 
                    "name": "&result[]", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "&result_headers", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "The function sends an HTTP request to a specified server. The function has two versions:", 
    "title": "WebRequest"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/common/zeromemory.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "ZeroMemory", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void", 
                    "name": "variable", 
                    "description": "[in] [out] Variable passed by reference, you want to reset (initialize by zero values)."
                }
            ]
        }
    ], 
    "description": "The function resets a variable passed to it by reference.", 
    "title": "ZeroMemory"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraybsearch.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayBsearch", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const double&", 
                    "name": "array[]", 
                    "description": "[in] Numeric array for search."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Value for search."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Count of elements to search for. By default, it searches in the whole array."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Starting index to search for. By default, the search starts at the first element."
                }, 
                {
                    "default": "MODE_ASCEND", 
                    "type": "int", 
                    "name": "direction", 
                    "description": "[in] Search direction. It can be any of the following values:"
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayBsearch", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const float&", 
                    "name": "array[]", 
                    "description": "[in] Numeric array for search."
                }, 
                {
                    "default": "", 
                    "type": "float", 
                    "name": "value", 
                    "description": "[in] Value for search."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Count of elements to search for. By default, it searches in the whole array."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Starting index to search for. By default, the search starts at the first element."
                }, 
                {
                    "default": "MODE_ASCEND", 
                    "type": "int", 
                    "name": "direction", 
                    "description": "[in] Search direction. It can be any of the following values:"
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayBsearch", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const long&", 
                    "name": "array[]", 
                    "description": "[in] Numeric array for search."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "value", 
                    "description": "[in] Value for search."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Count of elements to search for. By default, it searches in the whole array."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Starting index to search for. By default, the search starts at the first element."
                }, 
                {
                    "default": "MODE_ASCEND", 
                    "type": "int", 
                    "name": "direction", 
                    "description": "[in] Search direction. It can be any of the following values:"
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayBsearch", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const int&", 
                    "name": "array[]", 
                    "description": "[in] Numeric array for search."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "value", 
                    "description": "[in] Value for search."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Count of elements to search for. By default, it searches in the whole array."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Starting index to search for. By default, the search starts at the first element."
                }, 
                {
                    "default": "MODE_ASCEND", 
                    "type": "int", 
                    "name": "direction", 
                    "description": "[in] Search direction. It can be any of the following values:"
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayBsearch", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const short&", 
                    "name": "array[]", 
                    "description": "[in] Numeric array for search."
                }, 
                {
                    "default": "", 
                    "type": "short", 
                    "name": "value", 
                    "description": "[in] Value for search."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Count of elements to search for. By default, it searches in the whole array."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Starting index to search for. By default, the search starts at the first element."
                }, 
                {
                    "default": "MODE_ASCEND", 
                    "type": "int", 
                    "name": "direction", 
                    "description": "[in] Search direction. It can be any of the following values:"
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayBsearch", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const char&", 
                    "name": "array[]", 
                    "description": "[in] Numeric array for search."
                }, 
                {
                    "default": "", 
                    "type": "char", 
                    "name": "value", 
                    "description": "[in] Value for search."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Count of elements to search for. By default, it searches in the whole array."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Starting index to search for. By default, the search starts at the first element."
                }, 
                {
                    "default": "MODE_ASCEND", 
                    "type": "int", 
                    "name": "direction", 
                    "description": "[in] Search direction. It can be any of the following values:"
                }
            ]
        }
    ], 
    "description": "The function searches for a specified value in a one-dimension numeric array.", 
    "title": "ArrayBsearch"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraycopy.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayCopy", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void&", 
                    "name": "dst_array[]", 
                    "description": "[out] Destination array"
                }, 
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "src_array[]", 
                    "description": "[in] Source array"
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "dst_start", 
                    "description": "[in] Starting index from the destination array. By default, start index is 0."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "src_start", 
                    "description": "[in] Starting index for the source array. By default, start index is 0."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of elements that should be copied. By default, the whole array is copied (count=)."
                }
            ]
        }
    ], 
    "description": "It copies an array into another one.", 
    "title": "ArrayCopy"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraycompare.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayCompare", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array1[]", 
                    "description": "[in] First array."
                }, 
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array2[]", 
                    "description": "[in] Second array."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start1", 
                    "description": "[in] The element's initial index in the first array, from which comparison starts. The default start index - 0."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start2", 
                    "description": "[in] The element's initial index in the second array, from which comparison starts. The default start index - 0."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of elements to be compared. All elements of both arrays participate in comparison by default (count=)."
                }
            ]
        }
    ], 
    "description": "The function returns the result of comparing two arrays of the same type. It can be used to compare arrays of", 
    "title": "ArrayCompare"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arrayfree.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "ArrayFree", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void&", 
                    "name": "array[]", 
                    "description": "[in] Dynamic array."
                }
            ]
        }
    ], 
    "description": "It frees up a buffer of any dynamic array and sets the size of the zero dimension to 0.", 
    "title": "ArrayFree"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraygetasseries.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ArrayGetAsSeries", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array[]", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "It checks direction of an array index.", 
    "title": "ArrayGetAsSeries"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arrayinitialize.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayInitialize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "char", 
                    "name": "array[]", 
                    "description": "[out] Numeric array that should be initialized."
                }, 
                {
                    "default": "", 
                    "type": "char", 
                    "name": "value", 
                    "description": "[in] New value that should be set to all array elements."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayInitialize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "short", 
                    "name": "array[]", 
                    "description": "[out] Numeric array that should be initialized."
                }, 
                {
                    "default": "", 
                    "type": "short", 
                    "name": "value", 
                    "description": "[in] New value that should be set to all array elements."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayInitialize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "array[]", 
                    "description": "[out] Numeric array that should be initialized."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "value", 
                    "description": "[in] New value that should be set to all array elements."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayInitialize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "array[]", 
                    "description": "[out] Numeric array that should be initialized."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "value", 
                    "description": "[in] New value that should be set to all array elements."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayInitialize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "float", 
                    "name": "array[]", 
                    "description": "[out] Numeric array that should be initialized."
                }, 
                {
                    "default": "", 
                    "type": "float", 
                    "name": "value", 
                    "description": "[in] New value that should be set to all array elements."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayInitialize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "array[]", 
                    "description": "[out] Numeric array that should be initialized."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] New value that should be set to all array elements."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayInitialize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "bool", 
                    "name": "array[]", 
                    "description": "[out] Numeric array that should be initialized."
                }, 
                {
                    "default": "", 
                    "type": "bool", 
                    "name": "value", 
                    "description": "[in] New value that should be set to all array elements."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayInitialize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "array[]", 
                    "description": "[out] Numeric array that should be initialized."
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "value", 
                    "description": "[in] New value that should be set to all array elements."
                }
            ]
        }
    ], 
    "description": "The function initializes a numeric array by a preset value.", 
    "title": "ArrayInitialize"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arrayfill.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "ArrayFill", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void&", 
                    "name": "array[]", 
                    "description": "[out] Array of simple type (, , , , , , , , , , , , )."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Starting index. In such a case, specified is ignored."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of elements to fill."
                }, 
                {
                    "default": "", 
                    "type": "void", 
                    "name": "value", 
                    "description": "[in] Value to fill the array with."
                }
            ]
        }
    ], 
    "description": "The function fills an array with the specified value.", 
    "title": "ArrayFill"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arrayisdynamic.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ArrayIsDynamic", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array[]", 
                    "description": "[in] Checked array."
                }
            ]
        }
    ], 
    "description": "The function checks whether an array is dynamic.", 
    "title": "ArrayIsDynamic"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arrayisseries.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ArrayIsSeries", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array[]", 
                    "description": "[in] Checked array."
                }
            ]
        }
    ], 
    "description": "The function checks whether an array is a timeseries.", 
    "title": "ArrayIsSeries"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraymaximum.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayMaximum", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array[]", 
                    "description": "[in] A numeric array, in which search is made."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of elements for search. By default, searches in the entire array (count=)."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Index to start checking with."
                }
            ]
        }
    ], 
    "description": "The function searches a maximal element in a one-dimension numeric array.", 
    "title": "ArrayMaximum"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arrayminimum.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayMinimum", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array[]", 
                    "description": "[in] A numeric array, in which search is made."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of elements for search. By default, searches in the entire array (count=)."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Index to start checking with."
                }
            ]
        }
    ], 
    "description": "The function searches a minimal element in a one-dimension numeric array.", 
    "title": "ArrayMinimum"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arrayrange.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayRange", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array[]", 
                    "description": "[in] Checked array."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "rank_index", 
                    "description": "[in] Index of dimension."
                }
            ]
        }
    ], 
    "description": "The function returns the number of elements in a selected array dimension.", 
    "title": "ArrayRange"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arrayresize.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayResize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void&", 
                    "name": "array[]", 
                    "description": "[out] Array for changing sizes."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "new_size", 
                    "description": "[in] New size for the first dimension."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "reserve_size", 
                    "description": "[in] Optional parameter. Distributed size to get reserve."
                }
            ]
        }
    ], 
    "description": "The function sets a new size for the first dimension", 
    "title": "ArrayResize"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraysetasseries.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ArraySetAsSeries", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array[]", 
                    "description": "[in][out] Numeric array to set."
                }, 
                {
                    "default": "", 
                    "type": "bool", 
                    "name": "flag", 
                    "description": "[in] Array indexing direction."
                }
            ]
        }
    ], 
    "description": "The function sets the AS_SERIES flag to a selected", 
    "title": "ArraySetAsSeries"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraysize.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArraySize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array[]", 
                    "description": "[in] Array of any type."
                }
            ]
        }
    ], 
    "description": "The function returns the number of elements of a selected array.", 
    "title": "ArraySize"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraysort.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ArraySort", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void&", 
                    "name": "array[]", 
                    "description": "[in][out] Numeric array for sorting."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Count of elements to sort. By default, it sorts the whole array."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Starting index to sort. By default, the sort starts at the first element."
                }, 
                {
                    "default": "MODE_ASCEND", 
                    "type": "int", 
                    "name": "direction", 
                    "description": "[in] Sort direction. It can be any of the following values:"
                }
            ]
        }
    ], 
    "description": "Sorts numeric arrays by first dimension.", 
    "title": "ArraySort"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraycopyrates.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayCopyRates", 
            "parameters": [
                {
                    "default": "", 
                    "type": "MqlRates&", 
                    "name": "rates_array[]", 
                    "description": "[out] Destination array of type."
                }, 
                {
                    "default": "NULL", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ArrayCopyRates", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void&", 
                    "name": "dest_array[][]", 
                    "description": ""
                }, 
                {
                    "default": "NULL", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }
            ]
        }
    ], 
    "description": "Copies rates data to the array and returns the amount of bars copied. There are 2 variants of the function:", 
    "title": "ArrayCopyRates"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraycopyseries.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayCopySeries", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void&", 
                    "name": "array[]", 
                    "description": "[out] Destination array of double type."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "series_index", 
                    "description": "[in] Series array identifier. It can be any of the enumeration values."
                }, 
                {
                    "default": "NULL", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }
            ]
        }
    ], 
    "description": "Copies a series array to another one and returns the count of the copied elements.", 
    "title": "ArrayCopySeries"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/array/arraydimension.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ArrayDimension", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void&", 
                    "name": "array[]", 
                    "description": "[in] Array for which the rank will be returned."
                }
            ]
        }
    ], 
    "description": "Returns the multidimensional array rank.", 
    "title": "ArrayDimension"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/chartostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "CharToString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "uchar", 
                    "name": "char_code", 
                    "description": "[in] Code of ANSI symbol."
                }
            ]
        }
    ], 
    "description": "Converting a symbol code into a one-character string", 
    "title": "CharToString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/chararraytostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "CharArrayToString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "uchar", 
                    "name": "array[]", 
                    "description": "[in] Array of uchar type."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Position from which copying starts. by default 0 is used."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of array elements for copying. Defines the length of a resulting string. Default value is -1, which means copying up to the array end, or till terminal 0."
                }, 
                {
                    "default": "CP_ACP", 
                    "type": "uint", 
                    "name": "codepage", 
                    "description": "[in] The value of the code page. There is a number of built-in constants for the most used ."
                }
            ]
        }
    ], 
    "description": "It copies and converts part of array of uchar type into a returned string.", 
    "title": "CharArrayToString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/colortoargb.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "ColorToARGB", 
            "parameters": [
                {
                    "default": "", 
                    "type": "color", 
                    "name": "clr", 
                    "description": "[in] Color value in color type variable."
                }, 
                {
                    "default": "255", 
                    "type": "uchar", 
                    "name": "alpha", 
                    "description": "[in] The value of the alpha channel used to receive the color in format. The value may be set from 0 (a color of a foreground pixel does not change the display of an underlying one) up to 255 (a color of an underlying pixel is completely replaced by the foreground pixel's one). Color transparency in percentage terms is calculated as (1-alpha/255)*100%. In other words, the lesser value of the alpha channel leads to more transparent color."
                }
            ]
        }
    ], 
    "description": "The function converts", 
    "title": "ColorToARGB"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/colortostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ColorToString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "color", 
                    "name": "color_value", 
                    "description": "[in] Color value in color type variable."
                }, 
                {
                    "default": "", 
                    "type": "bool", 
                    "name": "color_name", 
                    "description": "[in] Return color name if it is identical to one of predefined ."
                }
            ]
        }
    ], 
    "description": "It converts color value into string of \"R,G,B\" form.", 
    "title": "ColorToString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/doubletostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "DoubleToString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Value with a floating point."
                }, 
                {
                    "default": "8", 
                    "type": "int", 
                    "name": "digits", 
                    "description": "[in] Accuracy format. If the digits value is in the range between 0 and 16, a string presentation of a number with the specified number of digits after the point will be obtained. If the digits value is in the range between -1 and -16, a string representation of a number in the scientific format with the specified number of digits after the decimal point will be obtained. In all other cases the string value will contain 8 digits after the decimal point."
                }
            ]
        }
    ], 
    "description": "Converting numeric value into text string.", 
    "title": "DoubleToString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/enumtostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "EnumToString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "any_enum", 
                    "name": "value", 
                    "description": "[in] Any type enumeration value."
                }
            ]
        }
    ], 
    "description": "Converting an enumeration value of any type to a text form.", 
    "title": "EnumToString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/integertostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "IntegerToString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "number", 
                    "description": "[in] Number for conversion."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "str_len", 
                    "description": "[in] String length. If the resulting string length is larger than the specified one, the string is not cut off. If it is smaller, filler symbols will be added to the left."
                }, 
                {
                    "default": "' '", 
                    "type": "ushort", 
                    "name": "fill_symbol", 
                    "description": "[in] Filler symbol. By default it is a space."
                }
            ]
        }
    ], 
    "description": "This function converts value of integer type into a string of a specified length and returns the obtained string.", 
    "title": "IntegerToString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/shorttostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ShortToString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ushort", 
                    "name": "symbol_code", 
                    "description": "[in] Symbol code. Instead of a symbol code you can use literal string containing a symbol or a literal string with 2-byte hexadecimal code corresponding to the symbol from the Unicode table."
                }
            ]
        }
    ], 
    "description": "It converts the symbol code (unicode) into one-symbol string and returns resulting string.", 
    "title": "ShortToString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/shortarraytostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ShortArrayToString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ushort", 
                    "name": "array[]", 
                    "description": "[in] Array of ushort type (analog of wchar_t type)."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Position, from which copying starts, Default - 0."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of array elements to copy. Defines the length of a resulting string. Default value is -1, which means copying up to the array end, or till terminal 0."
                }
            ]
        }
    ], 
    "description": "It copies part of array into a returned string.", 
    "title": "ShortArrayToString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/timetostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "TimeToString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "value", 
                    "description": "[in] Time in seconds from 00:00 1970/01/01."
                }, 
                {
                    "default": "TIME_DATE|TIME_MINUTES", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Additional data input mode. Can be one or combined flag: TIME_DATE gets result as \"yyyy.mm.dd\", TIME_MINUTES gets result as \"hh:mm\", TIME_SECONDS gets results as \"hh:mm:ss\"."
                }
            ]
        }
    ], 
    "description": "Converting a value containing time in seconds elapsed since 01.01.1970 into a string of \"yyyy.mm.dd hh:mi\" format.", 
    "title": "TimeToString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/normalizedouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "NormalizeDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Value with a floating point."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "digits", 
                    "description": "[in] Accuracy format, number of digits after point (0-8)."
                }
            ]
        }
    ], 
    "description": "Rounding floating point number to a specified accuracy.", 
    "title": "NormalizeDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/stringtochararray.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "StringToCharArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "text_string", 
                    "description": "[in] String to copy."
                }, 
                {
                    "default": "", 
                    "type": "uchar&", 
                    "name": "array[]", 
                    "description": "[out] Array of uchar type."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Position from which copying starts. Default - 0."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of array elements to copy. Defines length of a resulting string. Default value is -1, which means copying up to the array end, or till terminating '\\0'. Terminating zero will also be copied to the recipient array, in this case the size of a dynamic array can be increased if necessary to the size of the string. If the size of the dynamic array exceeds the length of the string, the size of the array will not be reduced."
                }, 
                {
                    "default": "CP_ACP", 
                    "type": "uint", 
                    "name": "codepage", 
                    "description": "[in] The value of the code page. For the most-used provide appropriate constants."
                }
            ]
        }
    ], 
    "description": "Symbol-wise copies", 
    "title": "StringToCharArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/stringtocolor.html", 
    "functions": [
        {
            "returnType": "color", 
            "name": "StringToColor", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "color_string", 
                    "description": "[in] String representation of a color of \"R,G,B\" type or name of one of predefined ."
                }
            ]
        }
    ], 
    "description": "Converting \"R,G,B\" string or string with color name into color type value.", 
    "title": "StringToColor"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/stringtodouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "StringToDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "value", 
                    "description": "[in] String containing a symbol representation of a number."
                }
            ]
        }
    ], 
    "description": "The function converts string containing a symbol representation of number into number of double type.", 
    "title": "StringToDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/stringtointeger.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "StringToInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "value", 
                    "description": "[in] String containing a number."
                }
            ]
        }
    ], 
    "description": "The function converts string containing a symbol representation of number into number of int (integer) type.", 
    "title": "StringToInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/stringtoshortarray.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "StringToShortArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "text_string", 
                    "description": "[in] String to copy"
                }, 
                {
                    "default": "", 
                    "type": "ushort&", 
                    "name": "array[]", 
                    "description": "[out] Array of type (analog of wchar_t type)."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Position, from which copying starts. Default - 0."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of array elements to copy. Defines length of a resulting string. Default value is -1, which means copying up to the array end, or till terminal 0.Terminal 0 will also be copied to the recipient array, in this case the size of a dynamic array can be increased if necessary to the size of the string. If the size of the dynamic array exceeds the length of the string, the size of the array will not be reduced."
                }
            ]
        }
    ], 
    "description": "The function symbol-wise copies a string into a specified place of an array of ushort type.", 
    "title": "StringToShortArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/stringtotime.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "StringToTime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "value", 
                    "description": "[in] String in \" yyyy.mm.dd hh:mi \" format."
                }
            ]
        }
    ], 
    "description": "The function converts a string containing time or date in \"yyyy.mm.dd [hh:mi]\" format into datetime type.", 
    "title": "StringToTime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/stringformat.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "StringFormat", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "format", 
                    "description": "[in] String containing method of formatting. Formatting rules are the same as for the function."
                }
            ]
        }
    ], 
    "description": "The function formats obtained parameters and returns a string.", 
    "title": "StringFormat"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/chartostr.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "CharToStr", 
            "parameters": [
                {
                    "default": "", 
                    "type": "uchar", 
                    "name": "char_code", 
                    "description": "[in] ASCII char code."
                }
            ]
        }
    ], 
    "description": "Conversion of the symbol code into a one-character string.", 
    "title": "CharToStr"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/doubletostr.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "DoubleToStr", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Floating point value."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "digits", 
                    "description": "[in] Precision format, number of digits after decimal point (0-8)."
                }
            ]
        }
    ], 
    "description": "Returns text string with the specified numerical value converted into a specified precision format.", 
    "title": "DoubleToStr"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/strtodouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "StrToDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "value", 
                    "description": "[in] String containing the number character representation format."
                }
            ]
        }
    ], 
    "description": "Converts string representation of number to double type (double-precision format with floating point).", 
    "title": "StrToDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/strtointeger.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "StrToInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "value", 
                    "description": "[in] String containing the integer character representation format."
                }
            ]
        }
    ], 
    "description": "Converts string containing the value character representation into a value of the int (integer) type.", 
    "title": "StrToInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/strtotime.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "StrToTime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "value", 
                    "description": "[in] String having \"yyyy.mm.dd hh:mi \" format."
                }
            ]
        }
    ], 
    "description": "Converts string in the format \"yyyy.mm.dd hh:mi\" to datetime type (the amount of seconds that have passed since 1 Jan., 1970).", 
    "title": "StrToTime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/convert/timetostr.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "TimeToStr", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "value", 
                    "description": "[in] Positive amount of seconds that have passed since 00:00, January 1, 1970."
                }, 
                {
                    "default": "TIME_DATE|TIME_MINUTES", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Optional data output mode can be one or combination of:TIME_DATE gets result as \"yyyy.mm.dd\",TIME_MINUTES gets result as \"hh:mi\",TIME_SECONDS gets result as \"hh:mi:ss\"."
                }
            ]
        }
    ], 
    "description": "Converts value containing time in seconds that has passed since January 1, 1970, into a string of \"yyyy.mm.dd hh:mi\" format.", 
    "title": "TimeToStr"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathabs.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathAbs", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Numeric value."
                }
            ]
        }
    ], 
    "description": "The function returns the absolute value (modulus) of the specified numeric value.", 
    "title": "MathAbs"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/matharccos.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathArccos", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "val", 
                    "description": "[in] The val value between -1 and 1, the arc cosine of which is to be calculated."
                }
            ]
        }
    ], 
    "description": "The function returns the arccosine of x within the range 0 to", 
    "title": "MathArccos"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/matharcsin.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathArcsin", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "val", 
                    "description": "[in] The val value between -1 and 1, the arc sine of which is to be calculated."
                }
            ]
        }
    ], 
    "description": "The function returns the arc sine of x within the range of -", 
    "title": "MathArcsin"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/matharctan.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathArctan", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] A number representing a tangent."
                }
            ]
        }
    ], 
    "description": "The function returns the arc tangent of x. If x is equal to 0, the function returns 0.", 
    "title": "MathArctan"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathceil.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathCeil", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "val", 
                    "description": "[in] Numeric value."
                }
            ]
        }
    ], 
    "description": "The function returns integer numeric value closest from above.", 
    "title": "MathCeil"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathcos.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathCos", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Angle in radians."
                }
            ]
        }
    ], 
    "description": "The function returns the cosine of an angle.", 
    "title": "MathCos"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathexp.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathExp", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] A number specifying the power."
                }
            ]
        }
    ], 
    "description": "The function returns the value of e raised to the power of d.", 
    "title": "MathExp"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathfloor.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathFloor", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "val", 
                    "description": "[in] Numeric value."
                }
            ]
        }
    ], 
    "description": "The function returns integer numeric value closest from below.", 
    "title": "MathFloor"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathlog.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathLog", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "val", 
                    "description": "[in] Value logarithm of which is to be found."
                }
            ]
        }
    ], 
    "description": "The function returns a natural logarithm.", 
    "title": "MathLog"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathlog10.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathLog10", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "val", 
                    "description": "[in] Numeric value the common logarithm of which is to be calculated."
                }
            ]
        }
    ], 
    "description": "Returns the logarithm of a number by base 10.", 
    "title": "MathLog10"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathmax.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathMax", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value1", 
                    "description": "[in] First numeric value."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value2", 
                    "description": "[in] Second numeric value."
                }
            ]
        }
    ], 
    "description": "The function returns the maximal value of two values.", 
    "title": "MathMax"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathmin.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathMin", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value1", 
                    "description": "[in] First numeric value."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value2", 
                    "description": "[in] Second numeric value."
                }
            ]
        }
    ], 
    "description": "The function returns the minimal value of two values.", 
    "title": "MathMin"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathmod.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathMod", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Dividend value."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value2", 
                    "description": "[in] Divisor value."
                }
            ]
        }
    ], 
    "description": "The function returns the real remainder of division of two numbers.", 
    "title": "MathMod"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathpow.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathPow", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "base", 
                    "description": "[in] Base."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "exponent", 
                    "description": "[in] Exponent value."
                }
            ]
        }
    ], 
    "description": "The function raises a base to a specified power.", 
    "title": "MathPow"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathrand.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "MathRand", 
            "parameters": []
        }
    ], 
    "description": "Returns a pseudorandom integer within the range of 0 to 32767.", 
    "title": "MathRand"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathround.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathRound", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Numeric value before rounding."
                }
            ]
        }
    ], 
    "description": "The function returns a value rounded off to the nearest integer of the specified numeric value.", 
    "title": "MathRound"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathsin.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathSin", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Angle in radians."
                }
            ]
        }
    ], 
    "description": "Returns the sine of a specified angle.", 
    "title": "MathSin"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathsqrt.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathSqrt", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Positive numeric value."
                }
            ]
        }
    ], 
    "description": "Returns the square root of a number.", 
    "title": "MathSqrt"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathsrand.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "MathSrand", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "seed", 
                    "description": "[in] Starting number for the sequence of random numbers."
                }
            ]
        }
    ], 
    "description": "Sets the starting point for generating a series of pseudorandom integers.", 
    "title": "MathSrand"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathtan.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MathTan", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "rad", 
                    "description": "[in] Angle in radians."
                }
            ]
        }
    ], 
    "description": "The function returns a tangent of a number.", 
    "title": "MathTan"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/math/mathisvalidnumber.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "MathIsValidNumber", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "number", 
                    "description": "[in] Checked numeric value."
                }
            ]
        }
    ], 
    "description": "It checks the correctness of a real number.", 
    "title": "MathIsValidNumber"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringadd.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "StringAdd", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "string_var", 
                    "description": "[in][out] String, to which another one is added."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "add_substring", 
                    "description": "[in] String that is added to the end of a source string."
                }
            ]
        }
    ], 
    "description": "The function adds", 
    "title": "StringAdd"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringbufferlen.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "StringBufferLen", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "string_var", 
                    "description": "[in] String."
                }
            ]
        }
    ], 
    "description": "The function returns the size of buffer allocated for the string.", 
    "title": "StringBufferLen"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringcompare.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "StringCompare", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string&", 
                    "name": "string1", 
                    "description": "[in] The first string."
                }, 
                {
                    "default": "", 
                    "type": "const string&", 
                    "name": "string2", 
                    "description": "[in] The second string."
                }, 
                {
                    "default": "true", 
                    "type": "bool", 
                    "name": "case_sensitive", 
                    "description": "[in] Case sensitivity mode selection. If it is true, then \"A\">\"a\". If it is false, then \"A\"=\"a\". By default the value is equal to true."
                }
            ]
        }
    ], 
    "description": "The function compares two strings and returns the comparison result in form of an integer.", 
    "title": "StringCompare"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringconcatenate.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "StringConcatenate", 
            "parameters": [
                {
                    "default": "", 
                    "type": "void", 
                    "name": "argument1", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "void", 
                    "name": "argument2", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "The function returns the string", 
    "title": "StringConcatenate"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringfill.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "StringFill", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "string_var", 
                    "description": "[in][out] String, that will be filled out by the selected symbol."
                }, 
                {
                    "default": "", 
                    "type": "ushort", 
                    "name": "character", 
                    "description": "[in] Symbol, by which the string will be filled out."
                }
            ]
        }
    ], 
    "description": "It fills out a selected string by specified symbols.", 
    "title": "StringFill"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringfind.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "StringFind", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "string_value", 
                    "description": "[in] String, in which search is made."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "match_substring", 
                    "description": "[in] Searched substring."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start_pos", 
                    "description": "[in] Position in the string from which search is started."
                }
            ]
        }
    ], 
    "description": "Search for a substring in a string.", 
    "title": "StringFind"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringgetcharacter.html", 
    "functions": [
        {
            "returnType": "ushort", 
            "name": "StringGetCharacter", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "string_value", 
                    "description": "[in] String."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "pos", 
                    "description": "[in] Position of a symbol in the string. Can be from 0 to (text) -1."
                }
            ]
        }
    ], 
    "description": "Returns value of a symbol, located in the specified position of a string.", 
    "title": "StringGetCharacter"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringinit.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "StringInit", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "string_var", 
                    "description": "[in][out] String that should be initialized and deinitialized."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "new_len", 
                    "description": "[in] String length after initialization. If length=0, it deinitializes the string, i.e. the string buffer is cleared and the buffer address is zeroed."
                }, 
                {
                    "default": "0", 
                    "type": "ushort", 
                    "name": "character", 
                    "description": "[in] Symbol to fill the string."
                }
            ]
        }
    ], 
    "description": "Initializes a string by specified symbols and provides the specified string size.", 
    "title": "StringInit"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringlen.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "StringLen", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "string_value", 
                    "description": "[in] String to calculate length."
                }
            ]
        }
    ], 
    "description": "Returns the number of symbols in a string.", 
    "title": "StringLen"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringreplace.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "StringReplace", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "str", 
                    "description": "[in][out] The string in which you are going to replace substrings."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "find", 
                    "description": "[in] The desired substring to replace."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "replacement", 
                    "description": "[in] The string that will be inserted instead of the found one."
                }
            ]
        }
    ], 
    "description": "It replaces all the found substrings of a string by a set sequence of symbols.", 
    "title": "StringReplace"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringsetcharacter.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "StringSetCharacter", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "string_var", 
                    "description": "[in][out] String."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "pos", 
                    "description": "[in] Position of a character in a string. Can be from 0 to (text)."
                }, 
                {
                    "default": "", 
                    "type": "ushort", 
                    "name": "character", 
                    "description": "[in] Symbol code Unicode."
                }
            ]
        }
    ], 
    "description": "Returns copy of a string with a changed character in a specified position.", 
    "title": "StringSetCharacter"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringsplit.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "StringSplit", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "string_value", 
                    "description": "[in] The string from which you need to get substrings. The string will not change."
                }, 
                {
                    "default": "", 
                    "type": "const ushort", 
                    "name": "separator", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "&", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "Gets substrings by a specified separator from the specified string, returns the number of substrings obtained.", 
    "title": "StringSplit"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringsubstr.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "StringSubstr", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "string_value", 
                    "description": "[in] String to extract a substring from."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start_pos", 
                    "description": "[in] Initial position of a substring. Can be from 0 to (text) -1."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "length", 
                    "description": "[in] Length of an extracted substring. If the parameter value is equal or less than 0 or parameter isn't set, the substring will be extracted from the indicated position till the string end."
                }
            ]
        }
    ], 
    "description": "Extracts a substring from a text string starting from the specified position.", 
    "title": "StringSubstr"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringtolower.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "StringToLower", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "string_var", 
                    "description": "[in][out] String."
                }
            ]
        }
    ], 
    "description": "Transforms all symbols of a selected string into lowercase.", 
    "title": "StringToLower"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringtoupper.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "StringToUpper", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "string_var", 
                    "description": "[in][out] String."
                }
            ]
        }
    ], 
    "description": "Transforms all symbols of a selected string into capitals.", 
    "title": "StringToUpper"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringtrimleft.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "StringTrimLeft", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "text", 
                    "description": "[in] String that will be cut from the left."
                }
            ]
        }
    ], 
    "description": "The function cuts line feed characters, spaces and tabs in the left part of the string till the first meaningful symbol. The string is modified at place.", 
    "title": "StringTrimLeft"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringtrimright.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "StringTrimRight", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "text", 
                    "description": "[in] String that will be cut from the right."
                }
            ]
        }
    ], 
    "description": "The function cuts line feed characters, spaces and tabs in the right part of the string after the last meaningful symbol. The string is modified at place.", 
    "title": "StringTrimRight"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringgetchar.html", 
    "functions": [
        {
            "returnType": "ushort", 
            "name": "StringGetChar", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "string_value", 
                    "description": "[in] String."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "pos", 
                    "description": "[in] Char position in the string. Can be from 0 to (text) -1."
                }
            ]
        }
    ], 
    "description": "Returns character (code) from the specified position in the string.", 
    "title": "StringGetChar"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/strings/stringsetchar.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "StringSetChar", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "string_var", 
                    "description": "[in] Source string."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "pos", 
                    "description": "[in] The character position in the string. Can be from 0 to (text)."
                }, 
                {
                    "default": "", 
                    "type": "ushort", 
                    "name": "value", 
                    "description": "[in] New char ASCII-code."
                }
            ]
        }
    ], 
    "description": "Returns the string copy with changed character in the specified position.", 
    "title": "StringSetChar"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timecurrent.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "TimeCurrent", 
            "parameters": []
        }, 
        {
            "returnType": "datetime", 
            "name": "TimeCurrent", 
            "parameters": [
                {
                    "default": "", 
                    "type": "MqlDateTime&", 
                    "name": "dt_struct", 
                    "description": "[out] structure type variable."
                }
            ]
        }
    ], 
    "description": "Returns the last known server time, time of the last quote receipt for one of the symbols selected in the \"Market Watch\" window. In the", 
    "title": "TimeCurrent"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timelocal.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "TimeLocal", 
            "parameters": []
        }, 
        {
            "returnType": "datetime", 
            "name": "TimeLocal", 
            "parameters": [
                {
                    "default": "", 
                    "type": "MqlDateTime&", 
                    "name": "dt_struct", 
                    "description": "[out] Variable of structure type ."
                }
            ]
        }
    ], 
    "description": "Returns the local time of a computer, where the client terminal is running. There are 2 variants of the function.", 
    "title": "TimeLocal"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timegmt.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "TimeGMT", 
            "parameters": []
        }, 
        {
            "returnType": "datetime", 
            "name": "TimeGMT", 
            "parameters": [
                {
                    "default": "", 
                    "type": "MqlDateTime&", 
                    "name": "dt_struct", 
                    "description": "[out] Variable of structure type ."
                }
            ]
        }
    ], 
    "description": "Returns the GMT, which is calculated taking into account the DST switch by the local time on the computer where the client terminal is running. There are 2 variants of the function.", 
    "title": "TimeGMT"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timedaylightsavings.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeDaylightSavings", 
            "parameters": []
        }
    ], 
    "description": "Returns correction for daylight saving time in seconds, if the switch to summer time has been made. It depends on the time settings of your computer.", 
    "title": "TimeDaylightSavings"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timegmtoffset.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeGMTOffset", 
            "parameters": []
        }
    ], 
    "description": "Returns the current difference between GMT time and the local computer time in seconds, taking into account switch to winter or summer time. Depends on the time settings of your computer.", 
    "title": "TimeGMTOffset"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timetostruct.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "TimeToStruct", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "dt", 
                    "description": "[in] Date value to convert."
                }, 
                {
                    "default": "", 
                    "type": "MqlDateTime&", 
                    "name": "dt_struct", 
                    "description": "[out] Variable of structure type MqlDateTime."
                }
            ]
        }
    ], 
    "description": "Converts a value of datetime type (number of seconds since 01.01.1970) into a structure variable", 
    "title": "TimeToStruct"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/structtotime.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "StructToTime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "MqlDateTime$", 
                    "name": "dt_struct", 
                    "description": "[in] Variable of structure type MqlDateTime."
                }
            ]
        }
    ], 
    "description": "Converts a structure variable", 
    "title": "StructToTime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/day.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Day", 
            "parameters": []
        }
    ], 
    "description": "Returns the current day of the month, i.e., the day of month of the last known server time.", 
    "title": "Day"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/dayofweek.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "DayOfWeek", 
            "parameters": []
        }
    ], 
    "description": "Returns the current zero-based day of the week (0-Sunday,1,2,3,4,5,6) of the last known server time.", 
    "title": "DayOfWeek"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/dayofyear.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "DayOfYear", 
            "parameters": []
        }
    ], 
    "description": "Returns the current day of the year (1 means 1 January,..,365(6) does 31 December), i.e., the day of year of the last known server time.", 
    "title": "DayOfYear"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/hour.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Hour", 
            "parameters": []
        }
    ], 
    "description": "Returns the hour (0,1,2,..23) of the last known server time by the moment of the program start.", 
    "title": "Hour"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/minute.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Minute", 
            "parameters": []
        }
    ], 
    "description": "Returns the current minute (0,1,2,..59) of the last known server time by the moment of the program start.", 
    "title": "Minute"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/month.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Month", 
            "parameters": []
        }
    ], 
    "description": "Returns the current month as number (1-January,2,3,4,5,6,7,8,9,10,11,12), i.e., the number of month of the last known server time.", 
    "title": "Month"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/seconds.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Seconds", 
            "parameters": []
        }
    ], 
    "description": "Returns the amount of seconds elapsed from the beginning of the current minute of the last known server time by the moment of the program start.", 
    "title": "Seconds"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timeday.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeDay", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "date", 
                    "description": "[in] Datetime as number of seconds elapsed since midnight (00:00:00), January 1, 1970."
                }
            ]
        }
    ], 
    "description": "Returns the day of month (1 - 31) of the specified date.", 
    "title": "TimeDay"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timedayofweek.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeDayOfWeek", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "date", 
                    "description": "[in] Datetime as number of seconds elapsed since midnight (00:00:00), January 1, 1970."
                }
            ]
        }
    ], 
    "description": "Returns the zero-based day of week (0 means Sunday,1,2,3,4,5,6) of the specified date.", 
    "title": "TimeDayOfWeek"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timedayofyear.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeDayOfYear", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "date", 
                    "description": "[in] Datetime as number of seconds elapsed since midnight (00:00:00), January 1, 1970."
                }
            ]
        }
    ], 
    "description": "Returns the day of year of the specified date.", 
    "title": "TimeDayOfYear"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timehour.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeHour", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "date", 
                    "description": "[in] Datetime is the number of seconds elapsed since midnight (00:00:00), January 1, 1970."
                }
            ]
        }
    ], 
    "description": "Returns the hour of the specified time.", 
    "title": "TimeHour"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timeminute.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeMinute", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "date", 
                    "description": "[in] Datetime as number of seconds elapsed since midnight (00:00:00), January 1, 1970."
                }
            ]
        }
    ], 
    "description": "Returns the minute of the specified time.", 
    "title": "TimeMinute"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timemonth.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeMonth", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "date", 
                    "description": "[in] Datetime as number of seconds elapsed since midnight (00:00:00), January 1, 1970."
                }
            ]
        }
    ], 
    "description": "Returns the month number of the specified time.", 
    "title": "TimeMonth"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timeseconds.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeSeconds", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "date", 
                    "description": "[in] Datetime as number of seconds elapsed since midnight (00:00:00), January 1, 1970."
                }
            ]
        }
    ], 
    "description": "Returns the amount of seconds elapsed from the beginning of the minute of the specified time.", 
    "title": "TimeSeconds"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/timeyear.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TimeYear", 
            "parameters": [
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "date", 
                    "description": "[in] Datetime as number of seconds elapsed since midnight (00:00:00), January 1, 1970."
                }
            ]
        }
    ], 
    "description": "Returns year of the specified date.", 
    "title": "TimeYear"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/dateandtime/year.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Year", 
            "parameters": []
        }
    ], 
    "description": "Returns the current year, i.e., the year of the last known server time.", 
    "title": "Year"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountinfodouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "AccountInfoDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": "[in] Identifier of the property. The value can be one of the values of ."
                }
            ]
        }
    ], 
    "description": "Returns the value of the corresponding account property.", 
    "title": "AccountInfoDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountinfointeger.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "AccountInfoInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": "[in] Identifier of the property. The value can be one of the values of ."
                }
            ]
        }
    ], 
    "description": "Returns the value of the properties of the account.", 
    "title": "AccountInfoInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountinfostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "AccountInfoString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": "[in] Identifier of the property. The value can be one of the values of ."
                }
            ]
        }
    ], 
    "description": "Returns the value of the corresponding account property.", 
    "title": "AccountInfoString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountbalance.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "AccountBalance", 
            "parameters": []
        }
    ], 
    "description": "Returns balance value of the current account.", 
    "title": "AccountBalance"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountcredit.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "AccountCredit", 
            "parameters": []
        }
    ], 
    "description": "Returns credit value of the current account.", 
    "title": "AccountCredit"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountcompany.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "AccountCompany", 
            "parameters": []
        }
    ], 
    "description": "Returns the brokerage company name where the current account was registered.", 
    "title": "AccountCompany"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountcurrency.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "AccountCurrency", 
            "parameters": []
        }
    ], 
    "description": "Returns currency name of the current account.", 
    "title": "AccountCurrency"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountequity.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "AccountEquity", 
            "parameters": []
        }
    ], 
    "description": "Returns equity value of the current account.", 
    "title": "AccountEquity"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountfreemargin.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "AccountFreeMargin", 
            "parameters": []
        }
    ], 
    "description": "Returns free margin value of the current account.", 
    "title": "AccountFreeMargin"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountfreemargincheck.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "AccountFreeMarginCheck", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol for trading operation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "cmd", 
                    "description": "[in] Operation type. It can be either OP_BUY or OP_SELL."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "volume", 
                    "description": "[in] Number of lots."
                }
            ]
        }
    ], 
    "description": "Returns free margin that remains after the specified order has been opened at the current price on the current account.", 
    "title": "AccountFreeMarginCheck"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountfreemarginmode.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "AccountFreeMarginMode", 
            "parameters": []
        }
    ], 
    "description": "Returns the calculation mode of free margin allowed to open orders on the current account.", 
    "title": "AccountFreeMarginMode"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountleverage.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "AccountLeverage", 
            "parameters": []
        }
    ], 
    "description": "Returns leverage of the current account.", 
    "title": "AccountLeverage"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountmargin.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "AccountMargin", 
            "parameters": []
        }
    ], 
    "description": "Returns margin value of the current account.", 
    "title": "AccountMargin"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountname.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "AccountName", 
            "parameters": []
        }
    ], 
    "description": "Returns the current account name.", 
    "title": "AccountName"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountnumber.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "AccountNumber", 
            "parameters": []
        }
    ], 
    "description": "Returns the current account number.", 
    "title": "AccountNumber"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountprofit.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "AccountProfit", 
            "parameters": []
        }
    ], 
    "description": "Returns profit value of the current account.", 
    "title": "AccountProfit"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountserver.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "AccountServer", 
            "parameters": []
        }
    ], 
    "description": "Returns the connected server name.", 
    "title": "AccountServer"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountstopoutlevel.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "AccountStopoutLevel", 
            "parameters": []
        }
    ], 
    "description": "Returns the value of the Stop Out level.", 
    "title": "AccountStopoutLevel"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/account/accountstopoutmode.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "AccountStopoutMode", 
            "parameters": []
        }
    ], 
    "description": "Returns the calculation mode for the Stop Out level.", 
    "title": "AccountStopoutMode"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/getlasterror.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "GetLastError", 
            "parameters": []
        }
    ], 
    "description": "Returns the contents of the", 
    "title": "GetLastError"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/isstopped.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsStopped", 
            "parameters": []
        }
    ], 
    "description": "Checks the forced shutdown of an mql4 program.", 
    "title": "IsStopped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/uninitializereason.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "UninitializeReason", 
            "parameters": []
        }
    ], 
    "description": "Returns the code of a", 
    "title": "UninitializeReason"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/mqlinfointeger.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "MQLInfoInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": "[in] Identifier of a property. Can be one of values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of a corresponding property of a running mql4 program.", 
    "title": "MQLInfoInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/mqlinfostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "MQLInfoString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": "[in] Identifier of a property. Can be one of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of a corresponding property of a running MQL4 program.", 
    "title": "MQLInfoString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/mqlsetinteger.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "MQLSetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": "[in] Identifier of a property. Only is supported, as other properties cannot be changed."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_value", 
                    "description": "[in] Value of property. Can be one of the ."
                }
            ]
        }
    ], 
    "description": "Sets the value of the", 
    "title": "MQLSetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/terminalinfointeger.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "TerminalInfoInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": "[in] Identifier of a property. Can be one of the values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of a corresponding property of the mql4 program environment.", 
    "title": "TerminalInfoInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/terminalinfodouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "TerminalInfoDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": "[in] Identifier of a property. Can be one of the values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of a corresponding property of the mql4 program environment.", 
    "title": "TerminalInfoDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/terminalinfostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "TerminalInfoString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": "[in] Identifier of a property. Can be one of the values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of a corresponding property of the mql4 program environment. The property must be of string type.", 
    "title": "TerminalInfoString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/symbol.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "Symbol", 
            "parameters": []
        }
    ], 
    "description": "Returns the name of a symbol of the current chart.", 
    "title": "Symbol"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/period.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Period", 
            "parameters": []
        }
    ], 
    "description": "Returns the current chart timeframe.", 
    "title": "Period"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/digits.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Digits", 
            "parameters": []
        }
    ], 
    "description": "Returns the number of decimal digits determining the accuracy of price of the current chart symbol.", 
    "title": "Digits"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/point.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "Point", 
            "parameters": []
        }
    ], 
    "description": "Returns the point size of the current symbol in the quote currency.", 
    "title": "Point"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/isconnected.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsConnected", 
            "parameters": []
        }
    ], 
    "description": "Checks connection between client terminal and server.", 
    "title": "IsConnected"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/isdemo.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsDemo", 
            "parameters": []
        }
    ], 
    "description": "Checks if the Expert Advisor runs on a demo account.", 
    "title": "IsDemo"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/isdllsallowed.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsDllsAllowed", 
            "parameters": []
        }
    ], 
    "description": "Checks if the DLL function call is allowed for the Expert Advisor.", 
    "title": "IsDllsAllowed"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/isexpertenabled.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsExpertEnabled", 
            "parameters": []
        }
    ], 
    "description": "Checks if Expert Advisors are enabled for running.", 
    "title": "IsExpertEnabled"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/islibrariesallowed.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsLibrariesAllowed", 
            "parameters": []
        }
    ], 
    "description": "Checks if the Expert Advisor can call library function.", 
    "title": "IsLibrariesAllowed"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/isoptimization.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsOptimization", 
            "parameters": []
        }
    ], 
    "description": "Checks if Expert Advisor runs in the Strategy Tester optimization mode.", 
    "title": "IsOptimization"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/istesting.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsTesting", 
            "parameters": []
        }
    ], 
    "description": "Checks", 
    "title": "IsTesting"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/istradeallowed.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsTradeAllowed", 
            "parameters": []
        }, 
        {
            "returnType": "bool", 
            "name": "IsTradeAllowed", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "symbol", 
                    "description": "[in] Symbol."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "tested_time", 
                    "description": "[in] Time to check status."
                }
            ]
        }
    ], 
    "description": "Checks", 
    "title": "IsTradeAllowed"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/istradecontextbusy.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsTradeContextBusy", 
            "parameters": []
        }
    ], 
    "description": "Returns the information about trade context.", 
    "title": "IsTradeContextBusy"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/isvisualmode.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IsVisualMode", 
            "parameters": []
        }
    ], 
    "description": "Checks", 
    "title": "IsVisualMode"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/terminalcompany.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "TerminalCompany", 
            "parameters": []
        }
    ], 
    "description": "Returns the name of company owning the client terminal.", 
    "title": "TerminalCompany"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/terminalname.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "TerminalName", 
            "parameters": []
        }
    ], 
    "description": "Returns client terminal name.", 
    "title": "TerminalName"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/check/terminalpath.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "TerminalPath", 
            "parameters": []
        }
    ], 
    "description": "Returns the directory, from which the client terminal was launched.", 
    "title": "TerminalPath"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/marketinfo.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "MarketInfo", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "type", 
                    "description": "[in] Request of information to be returned. Can be any of values of request identifiers."
                }
            ]
        }
    ], 
    "description": "Returns various data about securities listed in the \"Market Watch\" window.", 
    "title": "MarketInfo"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/symbolstotal.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "SymbolsTotal", 
            "parameters": [
                {
                    "default": "", 
                    "type": "bool", 
                    "name": "selected", 
                    "description": "[in] Request mode. Can be true or false."
                }
            ]
        }
    ], 
    "description": "Returns the number of available (selected in Market Watch or all) symbols.", 
    "title": "SymbolsTotal"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/symbolname.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "SymbolName", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "pos", 
                    "description": "[in] Order number of a symbol."
                }, 
                {
                    "default": "", 
                    "type": "bool", 
                    "name": "selected", 
                    "description": "[in] Request mode. If the value is true, the symbol is taken from the list of symbols selected in MarketWatch. If the value is false, the symbol is taken from the general list."
                }
            ]
        }
    ], 
    "description": "Returns the name of a symbol.", 
    "title": "SymbolName"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/symbolselect.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SymbolSelect", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "bool", 
                    "name": "select", 
                    "description": "[in] Switch. If the value is false, a symbol should be removed from MarketWatch, otherwise a symbol should be selected in this window. A symbol can't be removed if the symbol chart is open, or there are open orders for this symbol."
                }
            ]
        }
    ], 
    "description": "Selects a symbol in the Market Watch window or removes a symbol from the window.", 
    "title": "SymbolSelect"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/symbolinfodouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "SymbolInfoDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_SYMBOL_INFO_DOUBLE", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of a symbol property. The value can be one of the values of the enumeration."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "SymbolInfoDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_SYMBOL_INFO_DOUBLE", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of a symbol property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "double&", 
                    "name": "double_var", 
                    "description": "[out] Variable of double type receiving the value of the requested property."
                }
            ]
        }
    ], 
    "description": "Returns the corresponding property of a specified symbol. There are 2 variants of the function.", 
    "title": "SymbolInfoDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/symbolinfointeger.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "SymbolInfoInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_SYMBOL_INFO_INTEGER", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of a symbol property. The value can be one of the values of the enumeration."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "SymbolInfoInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_SYMBOL_INFO_INTEGER", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of a symbol property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "long&", 
                    "name": "long_var", 
                    "description": "[out] Variable of the long type receiving the value of the requested property."
                }
            ]
        }
    ], 
    "description": "Returns the corresponding property of a specified symbol. There are 2 variants of the function.", 
    "title": "SymbolInfoInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/symbolinfostring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "SymbolInfoString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_SYMBOL_INFO_STRING", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of a symbol property. The value can be one of the values of the enumeration."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "SymbolInfoString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_SYMBOL_INFO_STRING", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of a symbol property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "string_var", 
                    "description": "[out] Variable of the string type receiving the value of the requested property."
                }
            ]
        }
    ], 
    "description": "Returns the corresponding property of a specified symbol. There are 2 variants of the function.", 
    "title": "SymbolInfoString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/symbolinfotick.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SymbolInfoTick", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "MqlTick&", 
                    "name": "tick", 
                    "description": "[out] Link to the structure of the type, to which the current prices and time of the last price update will be placed."
                }
            ]
        }
    ], 
    "description": "The function returns current prices of a specified symbol in a variable of the MqlTick type.", 
    "title": "SymbolInfoTick"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/symbolinfosessionquote.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SymbolInfoSessionQuote", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_DAY_OF_WEEK", 
                    "name": "day_of_week", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "session_index", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "datetime&", 
                    "name": "from", 
                    "description": "[out] Session beginning time in seconds from 00 hours 00 minutes, in the returned value date should be ignored."
                }, 
                {
                    "default": "", 
                    "type": "datetime&", 
                    "name": "to", 
                    "description": "[out] Session end time in seconds from 00 hours 00 minutes, in the returned value date should be ignored."
                }
            ]
        }
    ], 
    "description": "Allows receiving time of beginning and end of the specified quoting sessions for a specified symbol and d", 
    "title": "SymbolInfoSessionQuote"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/marketinformation/symbolinfosessiontrade.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SymbolInfoSessionTrade", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_DAY_OF_WEEK", 
                    "name": "day_of_week", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "session_index", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "datetime&", 
                    "name": "from", 
                    "description": "[out] Session beginning time in seconds from 00 hours 00 minutes, in the returned value date should be ignored."
                }, 
                {
                    "default": "", 
                    "type": "datetime&", 
                    "name": "to", 
                    "description": "[out] Session end time in seconds from 00 hours 00 minutes, in the returned value date should be ignored."
                }
            ]
        }
    ], 
    "description": "Allows receiving time of beginning and end of the specified trading sessions for a specified symbol and d", 
    "title": "SymbolInfoSessionTrade"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/seriesinfointeger.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "SeriesInfoInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_SERIES_INFO_INTEGER", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of the requested property, value of the enumeration."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "SeriesInfoInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_SERIES_INFO_INTEGER", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of the requested property, value of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "long&", 
                    "name": "long_var", 
                    "description": "[out] Variable to which the value of the requested property is placed."
                }
            ]
        }
    ], 
    "description": "Returns information about the state of historical data. There are 2 variants of function calls.", 
    "title": "SeriesInfoInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/refreshrates.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "RefreshRates", 
            "parameters": []
        }
    ], 
    "description": "Refreshing of data in pre-defined variables and series arrays.", 
    "title": "RefreshRates"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/copyrates.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "CopyRates", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start_pos", 
                    "description": "[in] The start position for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "MqlRates", 
                    "name": "rates_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyRates", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] Bar time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "MqlRates", 
                    "name": "rates_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyRates", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] Bar time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "stop_time", 
                    "description": "[in] Bar time, corresponding to the last element to copy."
                }, 
                {
                    "default": "", 
                    "type": "MqlRates", 
                    "name": "rates_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }
    ], 
    "description": "Gets history data of", 
    "title": "CopyRates"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/copytime.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "CopyTime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start_pos", 
                    "description": "[in] The start position for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyTime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyTime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "stop_time", 
                    "description": "[in] Bar time corresponding to the last element to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }
    ], 
    "description": "The function gets to time_array history data of bar opening time for the specified symbol-period pair in the specified quantity. It should be noted that elements ordering", 
    "title": "CopyTime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/copyopen.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "CopyOpen", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start_pos", 
                    "description": "[in] The start position for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "open_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyOpen", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "open_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyOpen", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "stop_time", 
                    "description": "[in] The start time for the last element to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "open_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }
    ], 
    "description": "The function gets into open_array the history data of bar open prices for the selected symbol-period pair in the specified quantity. It should be noted that elements ordering is from present to past, i.e., starting position of 0 means the current bar.", 
    "title": "CopyOpen"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/copyhigh.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "CopyHigh", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start_pos", 
                    "description": "[in] The start position for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "high_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyHigh", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "high_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyHigh", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "stop_time", 
                    "description": "[in] Bar time, corresponding to the last element to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "high_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }
    ], 
    "description": "The function gets into high_array the history data of highest bar prices for the selected symbol-period pair in the specified quantity. It should be noted that elements ordering is from present to past, i.e., starting position of 0 means the current bar.", 
    "title": "CopyHigh"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/copylow.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "CopyLow", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start_pos", 
                    "description": "[in] The start position for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "low_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyLow", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] Bar time, corresponding to the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "low_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyLow", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] Bar time, corresponding to the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "stop_time", 
                    "description": "[in] Bar time, corresponding to the last element to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "low_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }
    ], 
    "description": "The function gets into low_array the history data of minimal bar prices for the selected symbol-period pair in the specified quantity. It should be noted that elements ordering is from present to past, i.e., starting position of 0 means the current bar.", 
    "title": "CopyLow"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/copyclose.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "CopyClose", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start_pos", 
                    "description": "[in] The start position for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "close_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyClose", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "close_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyClose", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "stop_time", 
                    "description": "[in] Bar time, corresponding to the last element to copy."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "close_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }
    ], 
    "description": "The function gets into close_array the history data of bar close prices for the selected symbol-period pair in the specified quantity. It should be noted that elements ordering is from present to past, i.e., starting position of 0 means the current bar.", 
    "title": "CopyClose"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/copytickvolume.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "CopyTickVolume", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start_pos", 
                    "description": "[in] The start position for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "volume_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyTickVolume", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Data count to copy."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "volume_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "CopyTickVolume", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] The start time for the first element to copy."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "stop_time", 
                    "description": "[in] Bar time, corresponding to the last element to copy."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "volume_array[]", 
                    "description": "[out] Array of type."
                }
            ]
        }
    ], 
    "description": "The function gets into volume_array the history data of tick volumes for the selected symbol-period pair in the specified quantity. It should be noted that elements ordering is from present to past, i.e., starting position of 0 means the current bar.", 
    "title": "CopyTickVolume"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/barsfunction.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Bars", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "Bars", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol_name", 
                    "description": "[in] Symbol name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "timeframe", 
                    "description": "[in] Period."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "start_time", 
                    "description": "[in] Bar time corresponding to the first element."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "stop_time", 
                    "description": "[in] Bar time corresponding to the last element."
                }
            ]
        }
    ], 
    "description": "Returns the number of bars count in the history for a specified symbol and period. There are 2 variants of functions calls.", 
    "title": "Bars"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/ibars.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "iBars", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol the data of which should be used to calculate indicator. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }
            ]
        }
    ], 
    "description": "Returns the number of bars on the specified chart.", 
    "title": "iBars"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/ibarshift.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "iBarShift", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time", 
                    "description": "[in] Time value for searching."
                }, 
                {
                    "default": "false", 
                    "type": "bool", 
                    "name": "exact", 
                    "description": "[in] Return mode when the bar is not found (false - iBarShift returns the nearest, true - iBarShift returns -1)."
                }
            ]
        }
    ], 
    "description": "Search for a bar by its time. The function returns the index of the bar which covers the specified time.", 
    "title": "iBarShift"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/iclose.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iClose", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Returns Close price value for the bar of specified symbol with timeframe and shift.", 
    "title": "iClose"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/ihigh.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iHigh", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Returns High price value for the bar of specified symbol with timeframe and shift.", 
    "title": "iHigh"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/ihighest.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "iHighest", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol the data of which should be used for search. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "type", 
                    "description": "[in] Series array identifier. It can be any of the enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of bars (in direction from the start bar to the back one) on which the search is carried out."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Shift showing the bar, relative to the current bar, that the data should be taken from."
                }
            ]
        }
    ], 
    "description": "Returns the shift of the maximum value over a specific number of bars depending on type.", 
    "title": "iHighest"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/ilow.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iLow", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Returns Low price value for the bar of indicated symbol with timeframe and shift.", 
    "title": "iLow"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/ilowest.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "iLowest", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "type", 
                    "description": "[in] Series array identifier. It can be any of the enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of bars (in direction from the start bar to the back one) on which the search is carried out."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Shift showing the bar, relative to the current bar, that the data should be taken from."
                }
            ]
        }
    ], 
    "description": "Returns the shift of the lowest value over a specific number of bars depending on type.", 
    "title": "iLowest"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/iopen.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iOpen", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Returns Open price value for the bar of specified symbol with timeframe and shift.", 
    "title": "iOpen"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/itime.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "iTime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Returns Time value for the bar of specified symbol with timeframe and shift.", 
    "title": "iTime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/series/ivolume.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "iVolume", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Returns Tick Volume value for the bar of specified symbol with timeframe and shift.", 
    "title": "iVolume"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartapplytemplate.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartApplyTemplate", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "filename", 
                    "description": "[in] The name of the file containing the template."
                }
            ]
        }
    ], 
    "description": "Applies a specific template from a specified file to the chart. The command is added to chart message queue and executed only after all previous commands have been processed.", 
    "title": "ChartApplyTemplate"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartsavetemplate.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartSaveTemplate", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "filename", 
                    "description": "[in] The filename to save the template. The \".tpl\" extension will be added to the filename automatically; there is no need to specify it. The template is saved in terminal_directory\\Profiles\\Templates\\ and can be used for manual application in the terminal. If a template with the same filename already exists, the contents of this file will be overwritten."
                }
            ]
        }
    ], 
    "description": "Saves current chart settings in a template with a specified name. The command is added to chart message queue and executed only after all previous commands have been processed.", 
    "title": "ChartSaveTemplate"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartwindowfind.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ChartWindowFind", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 denotes the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "indicator_shortname", 
                    "description": "[in] Short name of the indicator."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ChartWindowFind", 
            "parameters": []
        }
    ], 
    "description": "The function returns the number of a subwindow where an indicator is drawn. There are 2 variants of the function.", 
    "title": "ChartWindowFind"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/charttimepricetoxy.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartTimePriceToXY", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] The number of the chart subwindow. 0 means the main chart window."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time", 
                    "description": "[in] The time value on the chart, for which the value in pixels along the X axis will be received."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "price", 
                    "description": "[in] The price value on the chart, for which the value in pixels along the Y axis will be received."
                }, 
                {
                    "default": "", 
                    "type": "int&", 
                    "name": "x", 
                    "description": "[out] The variable, into which the conversion of time to X will be received. The origin is in the upper left corner of the main chart window."
                }, 
                {
                    "default": "", 
                    "type": "int&", 
                    "name": "y", 
                    "description": "[out] The variable, into which the conversion of price to Y will be received. The origin is in the upper left corner of the main chart window."
                }
            ]
        }
    ], 
    "description": "Converts the coordinates of a chart from the time/price representation to the X and Y coordinates.", 
    "title": "ChartTimePriceToXY"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartxytotimeprice.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartXYToTimePrice", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "x", 
                    "description": "[in] The X coordinate. The origin is in the upper left corner of the main chart window."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "y", 
                    "description": "[in] The Y coordinate. The origin is in the upper left corner of the main chart window."
                }, 
                {
                    "default": "", 
                    "type": "int&", 
                    "name": "sub_window", 
                    "description": "[out] The variable, into which the chart subwindow number will be written. 0 means the main chart window."
                }, 
                {
                    "default": "", 
                    "type": "datetime&", 
                    "name": "time", 
                    "description": "[out] The time value on the chart, for which the value in pixels along the X axis will be received."
                }, 
                {
                    "default": "", 
                    "type": "double&", 
                    "name": "price", 
                    "description": "[out] The price value on the chart, for which the value in pixels along the Y axis will be received."
                }
            ]
        }
    ], 
    "description": "Converts the X and Y coordinates on a chart to the time and price values.", 
    "title": "ChartXYToTimePrice"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartopen.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "ChartOpen", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Chart symbol. means the symbol of the current chart (the Expert Advisor is attached to)."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "period", 
                    "description": "[in] Chart period (timeframe). Can be one of the values. 0 means the current chart period."
                }
            ]
        }
    ], 
    "description": "Opens a new chart with the specified symbol and period. The command is added to chart message queue and executed only after all previous commands have been processed.", 
    "title": "ChartOpen"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartfirst.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "ChartFirst", 
            "parameters": []
        }
    ], 
    "description": "Returns the ID of the first chart of the client terminal.", 
    "title": "ChartFirst"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartnext.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "ChartNext", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 does not mean the current chart. 0 means \"return the first chart ID\"."
                }
            ]
        }
    ], 
    "description": "Returns the chart ID of the chart next to the specified one.", 
    "title": "ChartNext"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartclose.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartClose", 
            "parameters": [
                {
                    "default": "0", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }
            ]
        }
    ], 
    "description": "Closes the specified chart.", 
    "title": "ChartClose"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartsymbol.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ChartSymbol", 
            "parameters": [
                {
                    "default": "0", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }
            ]
        }
    ], 
    "description": "Returns the symbol name for the specified chart.", 
    "title": "ChartSymbol"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartperiod.html", 
    "functions": [
        {
            "returnType": "ENUM_TIMEFRAMES", 
            "name": "ChartPeriod", 
            "parameters": [
                {
                    "default": "0", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }
            ]
        }
    ], 
    "description": "Returns the timeframe", 
    "title": "ChartPeriod"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartredraw.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "ChartRedraw", 
            "parameters": [
                {
                    "default": "0", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }
            ]
        }
    ], 
    "description": "This function calls a forced redrawing of a specified chart.", 
    "title": "ChartRedraw"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartsetdouble.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartSetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Chart property ID. Can be one of the values (except the read-only properties)."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Property value."
                }
            ]
        }
    ], 
    "description": "Sets a value for a corresponding property of the specified chart. Chart property should be of a", 
    "title": "ChartSetDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartsetinteger.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartSetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Chart property ID. It can be one of the value (except the read-only properties)."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "value", 
                    "description": "[in] Property value."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ChartSetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "property_id", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "sub_window", 
                    "description": "[in] Chart subwindow."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "value", 
                    "description": "[in] Property value."
                }
            ]
        }
    ], 
    "description": "Sets a value for a corresponding property of the specified chart. Chart property must be", 
    "title": "ChartSetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartsetstring.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartSetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Chart property ID. Its value can be one of the values (except the read-only properties)."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "str_value", 
                    "description": "[in] Property value string. String length cannot exceed 2045 characters (extra characters will be truncated)."
                }
            ]
        }
    ], 
    "description": "Sets a value for a corresponding property of the specified chart. Chart property must be of the string type. The command is added to chart message queue and executed only after all previous commands have been processed.", 
    "title": "ChartSetString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartgetdouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "ChartGetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Chart property ID. This value can be one of the values."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. For the first case, the default value is 0 (main chart window). The most of the properties do not require a subwindow number."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ChartGetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Chart property ID. This value can be one of the values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. For the first case, the default value is 0 (main chart window). The most of the properties do not require a subwindow number."
                }, 
                {
                    "default": "", 
                    "type": "double&", 
                    "name": "double_var", 
                    "description": "[out] Target variable of double type for the requested property."
                }
            ]
        }
    ], 
    "description": "Returns the value of a corresponding property of the specified chart. Chart property must be of double type. There are 2 variants of the function calls.", 
    "title": "ChartGetDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartgetinteger.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "ChartGetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Chart property ID. This value can be one of the values."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. For the first case, the default value is 0 (main chart window). The most of the properties do not require a subwindow number."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ChartGetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Chart property ID. This value can be one of the values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. For the first case, the default value is 0 (main chart window). The most of the properties do not require a subwindow number."
                }, 
                {
                    "default": "", 
                    "type": "long&", 
                    "name": "long_var", 
                    "description": "[out] Target variable of long type for the requested property."
                }
            ]
        }
    ], 
    "description": "Returns the value of a corresponding property of the specified chart. Chart property must be of", 
    "title": "ChartGetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartgetstring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ChartGetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Chart property ID. This value can be one of the values."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ChartGetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Chart property ID. This value can be one of the values."
                }, 
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "string_var", 
                    "description": "[out] Target variable of string type for the requested property."
                }
            ]
        }
    ], 
    "description": "Returns the value of a corresponding property of the specified chart. Chart property must be of string type. There are 2 variants of the function call.", 
    "title": "ChartGetString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartnavigate.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartNavigate", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "position", 
                    "description": "[in] Chart position to perform a shift. Can be one of the values."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Number of bars to shift the chart. Positive value means the right shift (to the end of chart), negative value means the left shift (to the beginning of chart). The zero shift can be used to navigate to the beginning or end of chart."
                }
            ]
        }
    ], 
    "description": "Performs shift of the specified chart by the specified number of bars relative to the specified position in the chart. The command is added to chart message queue and executed only after all previous commands have been processed.", 
    "title": "ChartNavigate"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartid.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "ChartID", 
            "parameters": []
        }
    ], 
    "description": "Returns the ID of the current chart.", 
    "title": "ChartID"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartindicatordelete.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartIndicatorDelete", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 denotes the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. 0 denotes the main chart subwindow."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "indicator_shortname", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "Removes an indicator with a specified name from the specified chart window. The command is added to chart message queue and executed only after all previous commands have been processed.", 
    "title": "ChartIndicatorDelete"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartindicatorname.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ChartIndicatorName", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 denotes the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. 0 denotes the main chart subwindow."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] the index of the indicator in the list of indicators. The numeration of indicators start with zero, i.e. the first indicator in the list has the 0 index. To obtain the number of indicators in the list use the function."
                }
            ]
        }
    ], 
    "description": "Returns the short name of the indicator by the number in the indicators list on the specified chart window.", 
    "title": "ChartIndicatorName"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartindicatorstotal.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ChartIndicatorsTotal", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 denotes the current chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. 0 denotes the main chart subwindow."
                }
            ]
        }
    ], 
    "description": "Returns the number of all indicators applied to the specified chart window.", 
    "title": "ChartIndicatorsTotal"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartwindowondropped.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ChartWindowOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the number (index) of the chart subwindow the Expert Advisor or script has been dropped to. 0 means the main chart window.", 
    "title": "ChartWindowOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartpriceondropped.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "ChartPriceOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the price coordinate corresponding to the chart point the Expert Advisor or script has been dropped to.", 
    "title": "ChartPriceOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/charttimeondropped.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "ChartTimeOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the time coordinate corresponding to the chart point the Expert Advisor or script has been dropped to.", 
    "title": "ChartTimeOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartxondropped.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ChartXOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the X coordinate of the chart point the Expert Advisor or script has been dropped to.", 
    "title": "ChartXOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartyondropped.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ChartYOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the Y coordinateof the chart point the Expert Advisor or script has been dropped to.", 
    "title": "ChartYOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartsetsymbolperiod.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartSetSymbolPeriod", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Chart symbol. value means the current chart symbol (Expert Advisor is attached to)"
                }, 
                {
                    "default": "", 
                    "type": "ENUM_TIMEFRAMES", 
                    "name": "period", 
                    "description": "[in] Chart period (timeframe). Can be one of the values. 0 means the current chart period."
                }
            ]
        }
    ], 
    "description": "Changes the symbol and period of the specified chart. The function is asynchronous, i.e. it sends the command and does not wait for its execution completion. The command is added to chart message queue and executed only after all previous commands have been processed.", 
    "title": "ChartSetSymbolPeriod"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/chartscreenshot.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ChartScreenShot", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart ID. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "filename", 
                    "description": "[in] Screenshot file name. Cannot exceed 63 characters. Screenshot files are placed in the \\Files directory."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "width", 
                    "description": "[in] Screenshot width in pixels."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "height", 
                    "description": "[in] Screenshot height in pixels."
                }, 
                {
                    "default": "ALIGN_RIGHT", 
                    "type": "ENUM_ALIGN_MODE", 
                    "name": "align_mode", 
                    "description": "[in] Output mode of a narrow screenshot. A value of the enumeration. ALIGN_RIGHT means align to the right margin (the output from the end). ALIGN_LEFT means Left justify."
                }
            ]
        }
    ], 
    "description": "Saves current chart screen shot as a GIF, PNG or BMP file depending on specified extension. The command is added to chart message queue and executed only after all previous commands have been processed.", 
    "title": "ChartScreenShot"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/periodwindow.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "Period", 
            "parameters": []
        }
    ], 
    "description": "Returns timeframe of the current chart.", 
    "title": "Period"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/symbolwindow.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "Symbol", 
            "parameters": []
        }
    ], 
    "description": "Returns a text string with the name of the current financial instrument.", 
    "title": "Symbol"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowbarsperchart.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowBarsPerChart", 
            "parameters": []
        }
    ], 
    "description": "Returns the amount of bars visible on the chart.", 
    "title": "WindowBarsPerChart"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowexpertname.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "WindowExpertName", 
            "parameters": []
        }
    ], 
    "description": "Returns the name of the executed Expert Advisor, script, custom indicator, or library.", 
    "title": "WindowExpertName"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowfind.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowFind", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Indicator short name."
                }
            ]
        }
    ], 
    "description": "Returns the window index containing this specified indicator.", 
    "title": "WindowFind"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowfirstvisiblebar.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowFirstVisibleBar", 
            "parameters": []
        }
    ], 
    "description": "Returns index of the first visible bar in the current chart window.", 
    "title": "WindowFirstVisibleBar"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowhandle.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowHandle", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }
            ]
        }
    ], 
    "description": "Returns the system handle of the chart window.", 
    "title": "WindowHandle"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowisvisible.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowIsVisible", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Subwindow index."
                }
            ]
        }
    ], 
    "description": "Returns the visibility flag of the chart subwindow.", 
    "title": "WindowIsVisible"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowondropped.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the window index where Expert Advisor, custom indicator or script was dropped.", 
    "title": "WindowOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowpricemax.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowPriceMax", 
            "parameters": [
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Chart subwindow index (0 - main chart window)."
                }
            ]
        }
    ], 
    "description": "Returns the maximal value of the vertical scale of the specified subwindow of the current chart.", 
    "title": "WindowPriceMax"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowpricemin.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowPriceMin", 
            "parameters": [
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Chart subwindow index (0 - main chart window)."
                }
            ]
        }
    ], 
    "description": "Returns the minimal value of the vertical scale of the specified subwindow of the current chart.", 
    "title": "WindowPriceMin"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowpriceondropped.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "WindowPriceOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the price of the chart point where Expert Advisor or script was dropped.", 
    "title": "WindowPriceOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowredraw.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "WindowRedraw", 
            "parameters": []
        }
    ], 
    "description": "Redraws the current chart forcedly.", 
    "title": "WindowRedraw"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowscreenshot.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "WindowScreenShot", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "filename", 
                    "description": "[in] Screen shot file name. Screenshot is saved to \\Files folder."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "size_x", 
                    "description": "[in] Screen shot width in pixels."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "size_y", 
                    "description": "[in] Screen shot height in pixels."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "start_bar", 
                    "description": "[in] Index of the first visible bar in the screen shot. If 0 value is set, the current first visible bar will be shot. If no value or negative value has been set, the end-of-chart screen shot will be produced, indent being taken into consideration."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "chart_scale", 
                    "description": "[in] Horizontal chart scale for screen shot. Can be in the range from 0 to 5. If no value or negative value has been set, the current chart scale will be used."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "chart_mode", 
                    "description": "[in] Chart displaying mode. It can take the following values: CHART_BAR (0 is a sequence of bars), CHART_CANDLE (1 is a sequence of candlesticks), CHART_LINE (2 is a close prices line). If no value or negative value has been set, the chart will be shown in its current mode."
                }
            ]
        }
    ], 
    "description": "Saves current chart screen shot as a GIF file.", 
    "title": "WindowScreenShot"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowtimeondropped.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "WindowTimeOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the time of the chart point where Expert Advisor or script was dropped.", 
    "title": "WindowTimeOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowstotal.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowsTotal", 
            "parameters": []
        }
    ], 
    "description": "Returns total number of indicator windows on the chart.", 
    "title": "WindowsTotal"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowxondropped.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowXOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the value at X axis in pixels for the chart window client area point at which the Expert Advisor or script was dropped.", 
    "title": "WindowXOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/chart_operations/windowyondropped.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "WindowYOnDropped", 
            "parameters": []
        }
    ], 
    "description": "Returns the value at Y axis in pixels for the chart window client area point at which the Expert Advisor or script was dropped.", 
    "title": "WindowYOnDropped"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderclose.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "OrderClose", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ticket", 
                    "description": "[in] Unique number of the order ticket."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "lots", 
                    "description": "[in] Number of lots."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "price", 
                    "description": "[in] Closing price."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "slippage", 
                    "description": "[in] Value of the maximum price slippage in points."
                }, 
                {
                    "default": "", 
                    "type": "color", 
                    "name": "arrow_color", 
                    "description": "[in] Color of the closing arrow on the chart. If the parameter is missing or has CLR_NONE value closing arrow will not be drawn on the chart."
                }
            ]
        }
    ], 
    "description": "Closes opened order.", 
    "title": "OrderClose"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordercloseby.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "OrderCloseBy", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ticket", 
                    "description": "[in] Unique number of the order ticket."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "opposite", 
                    "description": "[in] Unique number of the opposite order ticket."
                }, 
                {
                    "default": "", 
                    "type": "color", 
                    "name": "arrow_color", 
                    "description": "[in] Color of the closing arrow on the chart. If the parameter is missing or has CLR_NONE value closing arrow will not be drawn on the chart."
                }
            ]
        }
    ], 
    "description": "Closes an opened order by another opposite opened order.", 
    "title": "OrderCloseBy"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordercloseprice.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "OrderClosePrice", 
            "parameters": []
        }
    ], 
    "description": "Returns close price of the currently selected order.", 
    "title": "OrderClosePrice"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderclosetime.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "OrderCloseTime", 
            "parameters": []
        }
    ], 
    "description": "Returns close time of the currently selected order.", 
    "title": "OrderCloseTime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordercomment.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "OrderComment", 
            "parameters": []
        }
    ], 
    "description": "Returns comment of the currently selected order.", 
    "title": "OrderComment"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordercommission.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "OrderCommission", 
            "parameters": []
        }
    ], 
    "description": "Returns calculated commission of the currently selected order.", 
    "title": "OrderCommission"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderdelete.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "OrderDelete", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ticket", 
                    "description": "[in] Unique number of the order ticket."
                }, 
                {
                    "default": "", 
                    "type": "color", 
                    "name": "arrow_color", 
                    "description": "[in] Color of the arrow on the chart. If the parameter is missing or has CLR_NONE value arrow will not be drawn on the chart."
                }
            ]
        }
    ], 
    "description": "Deletes previously opened pending order.", 
    "title": "OrderDelete"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderexpiration.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "OrderExpiration", 
            "parameters": []
        }
    ], 
    "description": "Returns expiration date of the selected pending order.", 
    "title": "OrderExpiration"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderlots.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "OrderLots", 
            "parameters": []
        }
    ], 
    "description": "Returns amount of lots of the selected order.", 
    "title": "OrderLots"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordermagicnumber.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "OrderMagicNumber", 
            "parameters": []
        }
    ], 
    "description": "Returns an identifying (magic) number of the currently selected order.", 
    "title": "OrderMagicNumber"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordermodify.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "OrderModify", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ticket", 
                    "description": "[in] Unique number of the order ticket."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "price", 
                    "description": "[in] New open price of the pending order."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "stoploss", 
                    "description": "[in] New StopLoss level."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "takeprofit", 
                    "description": "[in] New TakeProfit level."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "expiration", 
                    "description": "[in] Pending order expiration time."
                }, 
                {
                    "default": "", 
                    "type": "color", 
                    "name": "arrow_color", 
                    "description": "[in] Arrow color for StopLoss/TakeProfit modifications in the chart. If the parameter is missing or has CLR_NONE value, the arrows will not be shown in the chart."
                }
            ]
        }
    ], 
    "description": "Modification of characteristics of the previously opened or pending orders.", 
    "title": "OrderModify"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderopenprice.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "OrderOpenPrice", 
            "parameters": []
        }
    ], 
    "description": "Returns open price of the currently selected order.", 
    "title": "OrderOpenPrice"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderopentime.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "OrderOpenTime", 
            "parameters": []
        }
    ], 
    "description": "Returns open time of the currently selected order.", 
    "title": "OrderOpenTime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderprint.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "OrderPrint", 
            "parameters": []
        }
    ], 
    "description": "Prints information about the selected order in the log.", 
    "title": "OrderPrint"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderprofit.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "OrderProfit", 
            "parameters": []
        }
    ], 
    "description": "Returns profit of the currently selected order.", 
    "title": "OrderProfit"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderselect.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "OrderSelect", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "select", 
                    "description": "[in] Selecting flags. It can be any of the following values:"
                }, 
                {
                    "default": "MODE_TRADES", 
                    "type": "int", 
                    "name": "pool", 
                    "description": "SELECT_BY_POS - index in the order pool, SELECT_BY_TICKET - index is order ticket."
                }
            ]
        }
    ], 
    "description": "The function selects an order for further processing.", 
    "title": "OrderSelect"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordersend.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "OrderSend", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol for trading."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "cmd", 
                    "description": "[in] Operation type. It can be any of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "volume", 
                    "description": "[in] Number of lots."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "price", 
                    "description": "[in] Order price."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "slippage", 
                    "description": "[in] Maximum price slippage for buy or sell orders."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "stoploss", 
                    "description": "[in] Stop loss level."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "takeprofit", 
                    "description": "[in] Take profit level."
                }, 
                {
                    "default": "NULL", 
                    "type": "string", 
                    "name": "comment", 
                    "description": "[in] Order comment text. Last part of the comment may be changed by server."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "magic", 
                    "description": "[in] Order magic number. May be used as user defined identifier."
                }, 
                {
                    "default": "0", 
                    "type": "datetime", 
                    "name": "expiration", 
                    "description": "[in] Order expiration time (for pending orders only)."
                }, 
                {
                    "default": "clrNONE", 
                    "type": "color", 
                    "name": "arrow_color", 
                    "description": "[in] Color of the opening arrow on the chart. If parameter is missing or has CLR_NONE value opening arrow is not drawn on the chart."
                }
            ]
        }
    ], 
    "description": "The main function used to open market or place a pending order.", 
    "title": "OrderSend"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordershistorytotal.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "OrdersHistoryTotal", 
            "parameters": []
        }
    ], 
    "description": "Returns the number of closed orders in the account history loaded into the terminal.", 
    "title": "OrdersHistoryTotal"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderstoploss.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "OrderStopLoss", 
            "parameters": []
        }
    ], 
    "description": "Returns stop loss value of the currently selected order.", 
    "title": "OrderStopLoss"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderstotal.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "OrdersTotal", 
            "parameters": []
        }
    ], 
    "description": "Returns the number of market and pending orders.", 
    "title": "OrdersTotal"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderswap.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "OrderSwap", 
            "parameters": []
        }
    ], 
    "description": "Returns swap value of the currently selected order.", 
    "title": "OrderSwap"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordersymbol.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "OrderSymbol", 
            "parameters": []
        }
    ], 
    "description": "Returns symbol name of the currently selected order.", 
    "title": "OrderSymbol"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordertakeprofit.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "OrderTakeProfit", 
            "parameters": []
        }
    ], 
    "description": "Returns take profit value of the currently selected order.", 
    "title": "OrderTakeProfit"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/orderticket.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "OrderTicket", 
            "parameters": []
        }
    ], 
    "description": "Returns ticket number of the currently selected order.", 
    "title": "OrderTicket"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/trading/ordertype.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "OrderType", 
            "parameters": []
        }
    ], 
    "description": "Returns order operation type of the currently selected order.", 
    "title": "OrderType"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalbasegetdouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "SignalBaseGetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_SIGNAL_BASE_DOUBLE", 
                    "name": "property_id", 
                    "description": "[in] Signal property identifier. The value can be one of the values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of", 
    "title": "SignalBaseGetDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalbasegetinteger.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "SignalBaseGetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_SIGNAL_BASE_INTEGER", 
                    "name": "property_id", 
                    "description": "[in] Signal property identifier. The value can be one of the values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of", 
    "title": "SignalBaseGetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalbasegetstring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "SignalBaseGetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_SIGNAL_BASE_STRING", 
                    "name": "property_id", 
                    "description": "[in] Signal property identifier. The value can be one of the values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of", 
    "title": "SignalBaseGetString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalbaseselect.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SignalBaseSelect", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Signal index in base of trading signals."
                }
            ]
        }
    ], 
    "description": "Selects a signal from signals, available in terminal for further working with it.", 
    "title": "SignalBaseSelect"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalbasetotal.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "SignalBaseTotal", 
            "parameters": []
        }
    ], 
    "description": "Returns the total amount of signals, available in terminal.", 
    "title": "SignalBaseTotal"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalinfogetdouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "SignalInfoGetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_SIGNAL_INFO_DOUBLE", 
                    "name": "property_id", 
                    "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of", 
    "title": "SignalInfoGetDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalinfogetinteger.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "SignalInfoGetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_SIGNAL_INFO_INTEGER", 
                    "name": "property_id", 
                    "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of", 
    "title": "SignalInfoGetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalinfogetstring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "SignalInfoGetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_SIGNAL_INFO_STRING", 
                    "name": "property_id", 
                    "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                }
            ]
        }
    ], 
    "description": "Returns the value of", 
    "title": "SignalInfoGetString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalinfosetdouble.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SignalInfoSetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_SIGNAL_INFO_DOUBLE", 
                    "name": "property_id", 
                    "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] The value of signal copy settings property."
                }
            ]
        }
    ], 
    "description": "Sets the value of", 
    "title": "SignalInfoSetDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalinfosetinteger.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SignalInfoSetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "ENUM_SIGNAL_INFO_INTEGER", 
                    "name": "property_id", 
                    "description": "[in] Signal copy settings property identifier. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "value", 
                    "description": "[in] The value of signal copy settings property."
                }
            ]
        }
    ], 
    "description": "Sets the value of", 
    "title": "SignalInfoSetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalsubscribe.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SignalSubscribe", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "signal_id", 
                    "description": "[in] Signal identifier."
                }
            ]
        }
    ], 
    "description": "Subscribes to the trading signal.", 
    "title": "SignalSubscribe"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/signals/signalunsubscribe.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SignalUnsubscribe", 
            "parameters": []
        }
    ], 
    "description": "Cancels subscription.", 
    "title": "SignalUnsubscribe"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariablecheck.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "GlobalVariableCheck", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Global variable name."
                }
            ]
        }
    ], 
    "description": "Checks the existence of a global variable with the specified name", 
    "title": "GlobalVariableCheck"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariabletime.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "GlobalVariableTime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Name of the global variable."
                }
            ]
        }
    ], 
    "description": "Returns the time when the global variable was last accessed.", 
    "title": "GlobalVariableTime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariabledel.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "GlobalVariableDel", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Global variable name."
                }
            ]
        }
    ], 
    "description": "Deletes a global variable from the client terminal", 
    "title": "GlobalVariableDel"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariableget.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "GlobalVariableGet", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Global variable name."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "GlobalVariableGet", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Global variable name."
                }, 
                {
                    "default": "", 
                    "type": "double&", 
                    "name": "double_var", 
                    "description": "[out] Target variable of the double type, which accepts the value stored in a the global variable of the client terminal."
                }
            ]
        }
    ], 
    "description": "Returns the value of an existing global variable of the client terminal. There are 2 variants of the function.", 
    "title": "GlobalVariableGet"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariablename.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "GlobalVariableName", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Sequence number in the list of global variables. It should be greater than or equal to 0 and less than ."
                }
            ]
        }
    ], 
    "description": "Returns the name of a global variable by its ordinal number.", 
    "title": "GlobalVariableName"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariableset.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "GlobalVariableSet", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Global variable name."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] The new numerical value."
                }
            ]
        }
    ], 
    "description": "Sets a new value for a global variable. If the variable does not exist, the system creates a new global variable.", 
    "title": "GlobalVariableSet"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariablesflush.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "GlobalVariablesFlush", 
            "parameters": []
        }
    ], 
    "description": "Forcibly saves contents of all global variables to a disk.", 
    "title": "GlobalVariablesFlush"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariabletemp.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "GlobalVariableTemp", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] The name of a temporary global variable."
                }
            ]
        }
    ], 
    "description": "The function attempts to create a temporary global variable. If the variable doesn't exist, the system creates a new temporary global variable.", 
    "title": "GlobalVariableTemp"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariablesetoncondition.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "GlobalVariableSetOnCondition", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] The name of a global variable."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] New value."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "check_value", 
                    "description": "[in] The value to check the current value of the global variable."
                }
            ]
        }
    ], 
    "description": "Sets the new value of the existing global variable if the current value equals to the third parameter check_value. If there is no global variable, the function will generate an error ERR_GLOBALVARIABLE_NOT_FOUND (4501) and return false.", 
    "title": "GlobalVariableSetOnCondition"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariablesdeleteall.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "GlobalVariablesDeleteAll", 
            "parameters": [
                {
                    "default": "NULL", 
                    "type": "string", 
                    "name": "prefix_name", 
                    "description": "[in] Name prefix global variables to remove. If you specify a prefix NULL or empty string, then all variables that meet the data criterion will be deleted."
                }, 
                {
                    "default": "0", 
                    "type": "datetime", 
                    "name": "limit_data", 
                    "description": "[in] Optional parameter. Date to select global variables by the time of their last modification. The function removes global variables, which were changed before this date. If the parameter is zero, then all variables that meet the first criterion (prefix) are deleted."
                }
            ]
        }
    ], 
    "description": "Deletes global variables of the client terminal.", 
    "title": "GlobalVariablesDeleteAll"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/globals/globalvariablestotal.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "GlobalVariablesTotal", 
            "parameters": []
        }
    ], 
    "description": "Returns the total number of global variables of the client terminal.", 
    "title": "GlobalVariablesTotal"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filefindfirst.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "FileFindFirst", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "file_filter", 
                    "description": "[in] Search filter. A subdirectory (or sequence of nested subdirectories) relative to the \\Files directory, in which files should be searched for, can be specified in the filter."
                }, 
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "returned_filename", 
                    "description": "[out] The returned parameter, where, in case of success, the name of the first found file or subdirectory is placed. Only the file name is returned (including the extension), the directories and subdirectories are not included no matter if they are specified or not in the search filter."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "common_flag", 
                    "description": "[in] determining the location of the file. If common_flag = FILE_COMMON, then the file is located in a shared folder for all client terminals \\Terminal\\Common\\Files. Otherwise, the file is located in a local folder."
                }
            ]
        }
    ], 
    "description": "The function starts the search of files or", 
    "title": "FileFindFirst"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filefindnext.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FileFindNext", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "search_handle", 
                    "description": "[in] Search handle, retrieved by ."
                }, 
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "returned_filename", 
                    "description": "[out] The name of the next file or subdirectory found. Only the file name is returned (including the extension), the directories and subdirectories are not included no matter if they are specified or not in the search filter."
                }
            ]
        }
    ], 
    "description": "The function continues the search started by", 
    "title": "FileFindNext"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filefindclose.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "FileFindClose", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "search_handle", 
                    "description": "[in] Search handle, retrieved by ."
                }
            ]
        }
    ], 
    "description": "The function closes the search handle.", 
    "title": "FileFindClose"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/fileisexist.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FileIsExist", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "file_name", 
                    "description": "[in] The name of the file being checked"
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "common_flag", 
                    "description": "[in] determining the location of the file. If common_flag = FILE_COMMON, then the file is located in a shared folder for all client terminals \\Terminal\\Common\\Files. Otherwise, the file is located in a local folder."
                }
            ]
        }
    ], 
    "description": "Checks the existence of a file.", 
    "title": "FileIsExist"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/fileopen.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "FileOpen", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "file_name", 
                    "description": "[in] The name of the file can contain subfolders. If the file is opened for writing, these subfolders will be created if there are no such ones."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "open_flags", 
                    "description": "[in] determining the operation mode for the file. The flags are defined as follows:FILE_READ file is opened for readingFILE_WRITE file is opened for writingFILE_BIN binary read-write mode (no conversion from a string and to a string)FILE_CSV file of csv type (all recorded items are converted to the strings of unicode or ansi type, and are separated by a delimiter)FILE_TXT a simple text file (the same as csv, but the delimiter is not taken into account)FILE_ANSI lines of ANSI type (single-byte symbols) FILE_UNICODE lines of UNICODE type (double-byte characters)FILE_SHARE_READ shared reading from several programsFILE_SHARE_WRITE shared writing from several programsFILE_COMMON location of the file in a shared folder for all client terminals \\Terminal\\Common\\Files"
                }, 
                {
                    "default": "';'", 
                    "type": "short", 
                    "name": "delimiter", 
                    "description": "[in] value to be used as a separator in txt or csv-file. If the csv-file delimiter is not specified, the default delimiter is \";\". If the txt-file delimiter is not specified, then no separator is used. If the separator is clearly set to 0, then no separator is used."
                }, 
                {
                    "default": "CP_ACP", 
                    "type": "uint", 
                    "name": "codepage", 
                    "description": "[in] Optional parameter. The value of the code page. For the most-used provide appropriate constants."
                }
            ]
        }
    ], 
    "description": "The function opens the file with the specified name and flag.", 
    "title": "FileOpen"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/fileclose.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "FileClose", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by FileOpen()."
                }
            ]
        }
    ], 
    "description": "Close the file previously opened by", 
    "title": "FileClose"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filecopy.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FileCopy", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "src_file_name", 
                    "description": "[in] File name to copy."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "common_flag", 
                    "description": "[in] determining the location of the file. If common_flag = FILE_COMMON, then the file is located in a shared folder for all client terminals \\Terminal\\Common\\Files. Otherwise, the file is located in a local folder (for example, common_flag=0)."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "dst_file_name", 
                    "description": "[in] Result file name."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode_flags", 
                    "description": "[in] . The parameter can contain only 2 flags: FILE_REWRITE and/or FILE_COMMON - other flags are ignored. If the file already exists, and the FILE_REWRITE flag hasn't been specified, then the file will not be rewritten, and the function will return false."
                }
            ]
        }
    ], 
    "description": "The function copies the original file from a local or shared folder to another file.", 
    "title": "FileCopy"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filedelete.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FileDelete", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "file_name", 
                    "description": "[in] File name."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "common_flag", 
                    "description": "[in] determining the file location. If common_flag = FILE_COMMON, then the file is located in a shared folder for all client terminals \\Terminal\\Common\\Files. Otherwise, the file is located in a local folder."
                }
            ]
        }
    ], 
    "description": "Deletes the specified file in a local folder of the client terminal.", 
    "title": "FileDelete"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filemove.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FileMove", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "src_file_name", 
                    "description": "[in] File name to move/rename."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "common_flag", 
                    "description": "[in] determining the location of the file. If common_flag = FILE_COMMON, then the file is located in a shared folder for all client terminals \\Terminal\\Common\\Files. Otherwise, the file is located in a local folder (common_flag=0)."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "dst_file_name", 
                    "description": "[in] File name after operation"
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode_flags", 
                    "description": "[in] . The parameter can contain only 2 flags: FILE_REWRITE and/or FILE_COMMON - other flags are ignored. If the file already exists and the FILE_REWRITE flag isn't specified, the file will not be rewritten, and the function will return false."
                }
            ]
        }
    ], 
    "description": "Moves a file from a local or shared folder to another folder.", 
    "title": "FileMove"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/fileflush.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "FileFlush", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "Writes to a disk all data remaining in the input/output file buffer.", 
    "title": "FileFlush"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filegetinteger.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "FileGetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_FILE_PROPERTY_INTEGER", 
                    "name": "property_id", 
                    "description": "[in] File property ID. The value can be one of the values of the enumeration. If the second variant of the function is used, you can receive only the values of the : FILE_EXISTS, FILE_CREATE_DATE, FILE_MODIFY_DATE, FILE_ACCESS_DATE and FILE_SIZE."
                }
            ]
        }, 
        {
            "returnType": "long", 
            "name": "FileGetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "file_name", 
                    "description": "[in] File name."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_FILE_PROPERTY_INTEGER", 
                    "name": "property_id", 
                    "description": "[in] File property ID. The value can be one of the values of the enumeration. If the second variant of the function is used, you can receive only the values of the : FILE_EXISTS, FILE_CREATE_DATE, FILE_MODIFY_DATE, FILE_ACCESS_DATE and FILE_SIZE."
                }, 
                {
                    "default": "false", 
                    "type": "bool", 
                    "name": "common_folder", 
                    "description": "[in] Points to the file location. If the parameter is false, terminal data folder is viewed. Otherwise it is assumed that the file is in the shared folder of all terminals \\Terminal\\Common\\Files ()."
                }
            ]
        }
    ], 
    "description": "Gets an integer property of a file. There are two variants of the function.", 
    "title": "FileGetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/fileisending.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FileIsEnding", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "Defines the end of a file in the process of reading.", 
    "title": "FileIsEnding"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/fileislineending.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FileIsLineEnding", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "Defines the line end in a text file in the process of reading.", 
    "title": "FileIsLineEnding"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereadarray.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileReadArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "void&", 
                    "name": "array[]", 
                    "description": "[out] An array where the data will be loaded."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Start position to write to the array."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of elements to read. By default, reads the entire array (count=)."
                }
            ]
        }
    ], 
    "description": "Reads from a file of BIN type arrays of any type except string (may be an array of structures, not containing strings, and dynamic arrays", 
    "title": "FileReadArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereadbool.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FileReadBool", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "Reads from the file of CSV type string from the current position to a delimiter (or till the end of the text line) and converts the read string to a bool type value.", 
    "title": "FileReadBool"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereaddatetime.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "FileReadDatetime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "Reads from the file of CSV type a string of one of the formats: \"YYYY.MM.DD HH:MI:SS\", \"YYYY.MM.DD\" or \"HH:MI:SS\" - and converts it into a value of datetime type.", 
    "title": "FileReadDatetime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereaddouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "FileReadDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "DOUBLE_VALUE", 
                    "type": "int", 
                    "name": "size", 
                    "description": "Number of bytes (up to 8 inclusive), that should be read. The corresponding constants are provided: DOUBLE_VALUE = 8, FLOAT_VALUE = 4, so the function can read the whole value of double or float type."
                }
            ]
        }
    ], 
    "description": "Reads a double-precision floating point number (double) from the current position of the binary file.", 
    "title": "FileReadDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereadfloat.html", 
    "functions": [
        {
            "returnType": "float", 
            "name": "FileReadFloat", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "Reads the single-precision floating point number (float) from the current position of the binary file.", 
    "title": "FileReadFloat"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereadinteger.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "FileReadInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "INT_VALUE", 
                    "type": "int", 
                    "name": "size", 
                    "description": "[in] Number of bytes (up to 4 inclusive) that should be read. The corresponding constants are provided: CHAR_VALUE = 1, SHORT_VALUE = 2 and INT_VALUE (LONG_VALUE) = 4, so the function can read the whole value of char, short, int or long type."
                }
            ]
        }
    ], 
    "description": "The function reads int, short or char value from the current position of the file pointer depending on the length specified in bytes.", 
    "title": "FileReadInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereadlong.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "FileReadLong", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "The function reads an integer of long type (8 bytes) from the current position of the binary file.", 
    "title": "FileReadLong"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereadnumber.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "FileReadNumber", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "The function reads from the CSV file a string from the current position till a separator (or till the end of a text string) and converts the read string to a value of double type.", 
    "title": "FileReadNumber"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereadstring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "FileReadString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "length", 
                    "description": "[in] Number of characters to read."
                }
            ]
        }
    ], 
    "description": "The function reads a string from the current position of a file pointer in a file.", 
    "title": "FileReadString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filereadstruct.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileReadStruct", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor of an open bin-file."
                }, 
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "struct_object", 
                    "description": "[out] The object of this structure. The structure should not contain strings, or ."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "size", 
                    "description": "[in] Number of bytes that should be read. If size is not specified or the indicated value is greater than the size of the structure, the exact size of the specified structure is used."
                }
            ]
        }
    ], 
    "description": "The function reads contents into a structure passed as a parameter from a binary-file, starting with the current position of the file pointer.", 
    "title": "FileReadStruct"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/fileseek.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FileSeek", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "offset", 
                    "description": "[in] The shift in bytes (may take a negative value)."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_FILE_POSITION", 
                    "name": "origin", 
                    "description": "[in] The starting point for the displacement. Can be one of values of ."
                }
            ]
        }
    ], 
    "description": "The function moves the position of the file pointer by a specified number of bytes relative to the specified position.", 
    "title": "FileSeek"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filesize.html", 
    "functions": [
        {
            "returnType": "ulong", 
            "name": "FileSize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "The function returns the file size in bytes.", 
    "title": "FileSize"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filetell.html", 
    "functions": [
        {
            "returnType": "ulong", 
            "name": "FileTell", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "The file returns the current position of the file pointer of an open file.", 
    "title": "FileTell"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filewrite.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileWrite", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }
            ]
        }
    ], 
    "description": "The function is intended for writing of data into a CSV file, delimiter being inserted automatically unless it is equal to 0. After writing into the file, the line end character \"\\r\\n\" will be added.", 
    "title": "FileWrite"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filewritearray.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileWriteArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "array[]", 
                    "description": "[out] Array for recording."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "start", 
                    "description": "[in] Initial index in the array (number of the first recorded element)."
                }, 
                {
                    "default": "WHOLE_ARRAY", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Number of items to write ( means all items starting with the number start until the end of the array)."
                }
            ]
        }
    ], 
    "description": "The function writes arrays of any type except for string to a BIN file (can be an array of structures not containing strings or dynamic arrays).", 
    "title": "FileWriteArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filewritedouble.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileWriteDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] The value of double type."
                }
            ]
        }
    ], 
    "description": "The function writes the value of a double parameter to a file, starting from the current position of the file pointer.", 
    "title": "FileWriteDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filewritefloat.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileWriteFloat", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "float", 
                    "name": "value", 
                    "description": "[in] The value of float type."
                }
            ]
        }
    ], 
    "description": "The function writes the value of the float parameter to a bin-file, starting from the current position of the file pointer.", 
    "title": "FileWriteFloat"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filewriteinteger.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileWriteInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "value", 
                    "description": "[in] Integer value."
                }, 
                {
                    "default": "INT_VALUE", 
                    "type": "int", 
                    "name": "size", 
                    "description": "[in] Number of bytes (up to 4 inclusive), that should be written. The corresponding constants are provided: CHAR_VALUE=1, SHORT_VALUE=2 and INT_VALUE=4, so the function can write the integer value of char, uchar, short, ushort, int, or uint type."
                }
            ]
        }
    ], 
    "description": "The function writes the value of the int parameter to a bin-file, starting from the current position of the file pointer.", 
    "title": "FileWriteInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filewritelong.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileWriteLong", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "value", 
                    "description": "[in] Value of type long."
                }
            ]
        }
    ], 
    "description": "The function writes the value of the long-type parameter to a bin-file, starting from the current position of the file pointer.", 
    "title": "FileWriteLong"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filewritestring.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileWriteString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "text_string", 
                    "description": "[in] String."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "length", 
                    "description": "[in] The number of characters that you want to write. This option is needed for writing a string into a BIN file. If the size is not specified, then the entire string without the trailer 0 is written. If you specify a size smaller than the length of the string, then a part of the string without the trailer 0 is written. If you specify a size greater than the length of the string, the string is filled by the appropriate number of zeros. For files of CSV and TXT type, this parameter is ignored and the string is written entirely."
                }
            ]
        }
    ], 
    "description": "The function writes the value of a string-type parameter into a BIN, CSV or TXT file starting from the current position of the file pointer. When writing to a CSV or TXT file: if there is a symbol in the string '\\n' (LF) without previous character '\\r' (CR), then before '\\n' the missing '\\r' is added.", 
    "title": "FileWriteString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/filewritestruct.html", 
    "functions": [
        {
            "returnType": "uint", 
            "name": "FileWriteStruct", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "file_handle", 
                    "description": "[in] File descriptor returned by ."
                }, 
                {
                    "default": "", 
                    "type": "const void&", 
                    "name": "struct_object", 
                    "description": "[in] Reference to the object of this structure. The structure should not contain strings, or ."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "size", 
                    "description": "[in] Number of bytes that you want to record. If size is not specified or the specified number of bytes is greater than the size of the structure, the entire structure is written."
                }
            ]
        }
    ], 
    "description": "The function writes into a bin-file contents of a structure passed as a parameter, starting from the current position of the file pointer.", 
    "title": "FileWriteStruct"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/foldercreate.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FolderCreate", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "folder_name", 
                    "description": "[in] The name of the directory you want to create. Contains the full path to the folder."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "common_flag", 
                    "description": "[in] determining the location of the directory. If common_flag=FILE_COMMON, then the directory is in the shared folder for all client terminals \\Terminal\\Common\\Files. Otherwise, the directory is in a local folder (MQL4\\Files or MQL4\\Tester\\Files in case of testing)."
                }
            ]
        }
    ], 
    "description": "The function creates a folder in the Files directory (depending on the value of common_flag).", 
    "title": "FolderCreate"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/folderdelete.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FolderDelete", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "folder_name", 
                    "description": "[in] The name of the directory you want to delete. Contains the full path to the folder."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "common_flag", 
                    "description": "[in] determining the location of the directory. If common_flag=FILE_COMMON, then the directory is in the shared folder for all client terminals \\Terminal\\Common\\Files. Otherwise, the directory is in a local folder (MQL4\\Files or MQL4\\Tester\\Files in the case of testing)."
                }
            ]
        }
    ], 
    "description": "The function removes the specified directory. If the folder is not empty, then it can't be removed.", 
    "title": "FolderDelete"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/folderclean.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "FolderClean", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "folder_name", 
                    "description": "[in] The name of the directory where you want to delete all files. Contains the full path to the folder."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "common_flag", 
                    "description": "[in] determining the location of the directory. If common_flag = FILE_COMMON, then the directory is in the shared folder for all client terminals \\Terminal\\Common\\Files. Otherwise, the directory is in a local folder(MQL4\\files or MQL4\\tester\\files in case of testing)."
                }
            ]
        }
    ], 
    "description": "The function deletes all files in a specified folder.", 
    "title": "FolderClean"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/files/fileopenhistory.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "FileOpenHistory", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "filename", 
                    "description": "[in] File name."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] File open mode. Can be one or combination of values: FILE_BIN, FILE_CSV, FILE_READ, FILE_WRITE, FILE_SHARE_READ, FILE_SHARE_WRITE."
                }, 
                {
                    "default": "';'", 
                    "type": "int", 
                    "name": "delimiter", 
                    "description": "[in] Delimiter for csv files. By default, the ';' symbol will be passed."
                }
            ]
        }
    ], 
    "description": "Opens file in the current history directory (terminal_directory\\history\\server_name) or in its subfolders.", 
    "title": "FileOpenHistory"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/hidetestindicators.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "HideTestIndicators", 
            "parameters": [
                {
                    "default": "", 
                    "type": "bool", 
                    "name": "hide", 
                    "description": "[in] Hiding flag."
                }
            ]
        }
    ], 
    "description": "The function sets a flag hiding indicators called by the Expert Advisor.", 
    "title": "HideTestIndicators"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/indicatorsetdouble.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IndicatorSetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "prop_value", 
                    "description": "[in] Value of property."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "IndicatorSetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. Only level properties require a modifier. Numbering of levels starts from 0. It means that in order to set property for the second level you need to specify 1 (1 less than when using )."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "prop_value", 
                    "description": "[in] Value of property."
                }
            ]
        }
    ], 
    "description": "The function sets the value of the corresponding indicator property. Indicator property must be of the double type. There are two variants of the function.", 
    "title": "IndicatorSetDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/indicatorsetinteger.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IndicatorSetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_value", 
                    "description": "[in] Value of property."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "IndicatorSetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. Only level properties require a modifier."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_value", 
                    "description": "[in] Value of property."
                }
            ]
        }
    ], 
    "description": "The function sets the value of the corresponding indicator property. Indicator property must be of the int or color type. There are two variants of the function.", 
    "title": "IndicatorSetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/indicatorsetstring.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IndicatorSetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "prop_value", 
                    "description": "[in] Value of property."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "IndicatorSetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] Identifier of the indicator property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. Only level properties require a modifier."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "prop_value", 
                    "description": "[in] Value of property."
                }
            ]
        }
    ], 
    "description": "The function sets the value of the corresponding indicator property. Indicator property must be of the string type. There are two variants of the function.", 
    "title": "IndicatorSetString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/setindexbuffer.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "SetIndexBuffer", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Number of the indicator buffer. The numbering starts with 0. The number must be less than the value declared in ."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "buffer[]", 
                    "description": "[in] An array declared in the custom indicator program."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_INDEXBUFFER_TYPE", 
                    "name": "data_type", 
                    "description": ""
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "SetIndexBuffer", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Number of the indicator buffer. The numbering starts with 0. The number must be less than the value declared in ."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "buffer[]", 
                    "description": "[in] An array declared in the custom indicator program."
                }
            ]
        }
    ], 
    "description": "The function binds a specified indicator buffer with one-dimensional dynamic array of the", 
    "title": "SetIndexBuffer"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/indicatorbuffers.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "IndicatorBuffers", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "count", 
                    "description": "[in] Amount of buffers to be allocated. Should be within the range between indicator_buffers and 512 buffers."
                }
            ]
        }
    ], 
    "description": "Allocates memory for buffers used for custom indicator calculations.", 
    "title": "IndicatorBuffers"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/indicatorcounted.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "IndicatorCounted", 
            "parameters": []
        }
    ], 
    "description": "The function returns the amount of bars not changed after the indicator had been launched last.", 
    "title": "IndicatorCounted"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/indicatordigits.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "IndicatorDigits", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "digits", 
                    "description": "[in] Precision format, the count of digits after decimal point."
                }
            ]
        }
    ], 
    "description": "Sets precision format (the count of digits after decimal point) to visualize indicator values.", 
    "title": "IndicatorDigits"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/indicatorshortname.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "IndicatorShortName", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] New short name."
                }
            ]
        }
    ], 
    "description": "Sets the \"short\" name of a custom indicator to be shown in the DataWindow and in the chart subwindow.", 
    "title": "IndicatorShortName"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/setindexarrow.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "SetIndexArrow", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Line index. Must lie between 0 and 7."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "code", 
                    "description": "[in] Symbol code from or predefined ."
                }
            ]
        }
    ], 
    "description": "Sets an arrow symbol for indicators line of the DRAW_ARROW type.", 
    "title": "SetIndexArrow"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/setindexdrawbegin.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "SetIndexDrawBegin", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Line index. Must lie between 0 and 7."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "begin", 
                    "description": "[in] First drawing bar position number."
                }
            ]
        }
    ], 
    "description": "Sets the bar number (from the data beginning) from which the drawing of the given indicator line must start.", 
    "title": "SetIndexDrawBegin"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/setindexemptyvalue.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "SetIndexEmptyValue", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Line index. Must lie between 0 and 7."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] New \"empty\" value."
                }
            ]
        }
    ], 
    "description": "Sets drawing line empty value.", 
    "title": "SetIndexEmptyValue"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/setindexlabel.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "SetIndexLabel", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Line index. Must lie between 0 and 7."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "text", 
                    "description": "[in] Label text. NULL means that index value is not shown in the DataWindow."
                }
            ]
        }
    ], 
    "description": "Sets drawing line description for showing in the DataWindow and in the tooltip.", 
    "title": "SetIndexLabel"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/setindexshift.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "SetIndexShift", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Line index. Must lie between 0 and 7."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Shift value in bars."
                }
            ]
        }
    ], 
    "description": "Sets offset for the drawing line.", 
    "title": "SetIndexShift"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/setindexstyle.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "SetIndexStyle", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Line index. Must lie between 0 and 7."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "type", 
                    "description": "[in] Shape style. Can be one of listed."
                }, 
                {
                    "default": "EMPTY", 
                    "type": "int", 
                    "name": "style", 
                    "description": "[in] Drawing style. It is used for one-pixel thick lines. It can be one of the listed. EMPTY value means that the style will not be changed."
                }, 
                {
                    "default": "EMPTY", 
                    "type": "int", 
                    "name": "width", 
                    "description": "[in] Line width. Valid values are: 1,2,3,4,5. EMPTY value means that width will not be changed."
                }, 
                {
                    "default": "clrNONE", 
                    "type": "color", 
                    "name": "clr", 
                    "description": "[in] Line color. Absence of this parameter means that the color will not be changed."
                }
            ]
        }
    ], 
    "description": "Sets the new type, style, width and color for a given indicator line.", 
    "title": "SetIndexStyle"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/setlevelstyle.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "SetLevelStyle", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "draw_style", 
                    "description": "[in] Drawing style. Can be one of the listed. EMPTY value means that the style will not be changed."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "line_width", 
                    "description": "[in] Line width. Valid values are 1,2,3,4,5. EMPTY value indicates that the width will not be changed."
                }, 
                {
                    "default": "", 
                    "type": "color", 
                    "name": "clr", 
                    "description": "[in] Line color. Empty value CLR_NONE means that the color will not be changed."
                }
            ]
        }
    ], 
    "description": "The function sets a new style, width and color of horizontal levels of indicator to be output in a separate window.", 
    "title": "SetLevelStyle"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/customind/setlevelvalue.html", 
    "functions": [
        {
            "returnType": "void", 
            "name": "SetLevelValue", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "level", 
                    "description": "[in] Level index (0-31)."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Value for the given indicator level."
                }
            ]
        }
    ], 
    "description": "The function sets a value for a given horizontal level of the indicator to be output in a separate window.", 
    "title": "SetLevelValue"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectcreate.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ObjectCreate", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object. The name must be unique within a chart, including its subwindows."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_OBJECT", 
                    "name": "object_type", 
                    "description": "[in] Object type. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. 0 means the main chart window. The specified subwindow must exist (window index must be greater or equal to 0 and less than ), otherwise the function returns false."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time1", 
                    "description": "[in] The time coordinate of the first anchor point."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "price1", 
                    "description": "[in] The price coordinate of the first anchor point."
                }, 
                {
                    "default": "0", 
                    "type": "datetime", 
                    "name": "timeN", 
                    "description": "[in] The time coordinate of the N-th anchor point."
                }, 
                {
                    "default": "0", 
                    "type": "double", 
                    "name": "priceN", 
                    "description": "[in] The price coordinate of the N-th anchor point."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ObjectCreate", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object. The name must be unique within a chart, including its subwindows."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_OBJECT", 
                    "name": "object_type", 
                    "description": "[in] Object type. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. 0 means the main chart window. The specified subwindow must exist (window index must be greater or equal to 0 and less than ), otherwise the function returns false."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time1", 
                    "description": "[in] The time coordinate of the first anchor point."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "price1", 
                    "description": "[in] The price coordinate of the first anchor point."
                }, 
                {
                    "default": "0", 
                    "type": "datetime", 
                    "name": "time2", 
                    "description": "[in] The time coordinate of the second anchor point."
                }, 
                {
                    "default": "0", 
                    "type": "double", 
                    "name": "price2", 
                    "description": "[in] The price coordinate of the second anchor point."
                }, 
                {
                    "default": "0", 
                    "type": "datetime", 
                    "name": "time3", 
                    "description": "[in] The time coordinate of the third anchor point."
                }, 
                {
                    "default": "0", 
                    "type": "double", 
                    "name": "price3", 
                    "description": "[in] The price coordinate of the third anchor point."
                }
            ]
        }
    ], 
    "description": "The function creates an object with the specified name, type, and the initial coordinates in the specified chart subwindow of the specified chart. There are two variants of the function:", 
    "title": "ObjectCreate"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectname.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ObjectName", 
            "parameters": [
                {
                    "default": "", 
                    "type": "int", 
                    "name": "object_index", 
                    "description": "[in] Object index. This value must be greater or equal to 0 and less than ."
                }
            ]
        }
    ], 
    "description": "The function returns the name of the corresponding object by its index in the objects list.", 
    "title": "ObjectName"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectdelete.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ObjectDelete", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of object to be deleted."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ObjectDelete", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of object to be deleted."
                }
            ]
        }
    ], 
    "description": "The function removes the object with the specified name at the specified chart. There are two variants of the function:", 
    "title": "ObjectDelete"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectsdeleteall.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ObjectsDeleteAll", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier."
                }, 
                {
                    "default": "EMPTY", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart window. Must be greater or equal to -1 (-1 mean all subwindows, 0 means the main chart window) and less than ."
                }, 
                {
                    "default": "EMPTY", 
                    "type": "int", 
                    "name": "object_type", 
                    "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY (-1) means all types."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ObjectsDeleteAll", 
            "parameters": [
                {
                    "default": "EMPTY", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart window. Must be greater or equal to -1 (-1 mean all subwindows, 0 means the main chart window) and less than ."
                }, 
                {
                    "default": "EMPTY", 
                    "type": "int", 
                    "name": "object_type", 
                    "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY (-1) means all types."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ObjectsDeleteAll", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier."
                }, 
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "prefix", 
                    "description": "[in] Prefix in object names. All objects whose names start with this set of characters will be removed from chart. You can specify prefix as 'name' or 'name*' both variants will work the same. If an empty string is specified as the prefix, objects with all possible names will be removed."
                }, 
                {
                    "default": "EMPTY", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart window. Must be greater or equal to -1 (-1 mean all subwindows, 0 means the main chart window) and less than ."
                }, 
                {
                    "default": "EMPTY", 
                    "type": "int", 
                    "name": "object_type", 
                    "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY (-1) means all types."
                }
            ]
        }
    ], 
    "description": "Removes all objects from the specified chart, specified chart subwindow, of the specified type.", 
    "title": "ObjectsDeleteAll"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectfind.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ObjectFind", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] The name of the object to find."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ObjectFind", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] The name of the object to find."
                }
            ]
        }
    ], 
    "description": "The function searches for an object having the specified name. There are two variants of the function:", 
    "title": "ObjectFind"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectgettimebyvalue.html", 
    "functions": [
        {
            "returnType": "datetime", 
            "name": "ObjectGetTimeByValue", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Price value."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "line_id", 
                    "description": "[in] Line identifier."
                }
            ]
        }
    ], 
    "description": "The function returns the time value for the specified price value of the specified object.", 
    "title": "ObjectGetTimeByValue"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectgetvaluebytime.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "ObjectGetValueByTime", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time", 
                    "description": "[in] Time value."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "line_id", 
                    "description": "[in] Line identifier."
                }
            ]
        }
    ], 
    "description": "The function returns the price value for the specified time value of the specified object.", 
    "title": "ObjectGetValueByTime"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectmove.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ObjectMove", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "point_index", 
                    "description": "[in] Index of the anchor point. The number of anchor points depends on the ."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time", 
                    "description": "[in] Time coordinate of the selected anchor point."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "price", 
                    "description": "[in] Price coordinate of the selected anchor point."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ObjectMove", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "point_index", 
                    "description": "[in] Index of the anchor point. The number of anchor points depends on the ."
                }, 
                {
                    "default": "", 
                    "type": "datetime", 
                    "name": "time", 
                    "description": "[in] Time coordinate of the selected anchor point."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "price", 
                    "description": "[in] Price coordinate of the selected anchor point."
                }
            ]
        }
    ], 
    "description": "The function changes coordinates of the specified anchor point of the object at the specified chart. There are two variants of the function:", 
    "title": "ObjectMove"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectstotal.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ObjectsTotal", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "sub_window", 
                    "description": "[in] Number of the chart subwindow. 0 means the main chart window, -1 means all the subwindows of the chart, including the main window."
                }, 
                {
                    "default": "-1", 
                    "type": "int", 
                    "name": "type", 
                    "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY(-1) means all types."
                }
            ]
        }, 
        {
            "returnType": "int", 
            "name": "ObjectsTotal", 
            "parameters": [
                {
                    "default": "EMPTY", 
                    "type": "int", 
                    "name": "type", 
                    "description": "[in] Type of the object. The value can be one of the values of the enumeration. EMPTY(-1) means all types."
                }
            ]
        }
    ], 
    "description": "The function returns the number of objects of the specified type in the specified chart. There are two variants of the function:", 
    "title": "ObjectsTotal"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectgetdouble.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "ObjectGetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. For the first variant, the default modifier value is equal to 0. Most properties do not require a modifier. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ObjectGetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. For the first variant, the default modifier value is equal to 0. Most properties do not require a modifier. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                }, 
                {
                    "default": "", 
                    "type": "double&", 
                    "name": "double_var", 
                    "description": "[out] Variable of the double type that received the value of the requested property."
                }
            ]
        }
    ], 
    "description": "The function returns the value of the corresponding object property. The object property must be of the", 
    "title": "ObjectGetDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectgetinteger.html", 
    "functions": [
        {
            "returnType": "long", 
            "name": "ObjectGetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. For the first variant, the default modifier value is equal to 0. Most properties do not require a modifier. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ObjectGetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. For the first variant, the default modifier value is equal to 0. Most properties do not require a modifier. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                }, 
                {
                    "default": "", 
                    "type": "long&", 
                    "name": "long_var", 
                    "description": "[out] Variable of the long type that receives the value of the requested property."
                }
            ]
        }
    ], 
    "description": "The function returns the value of the corresponding object property. The object property must be of the", 
    "title": "ObjectGetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectgetstring.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ObjectGetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. For the first variant, the default modifier value is equal to 0. Most properties do not require a modifier. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ObjectGetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. For the first variant, the default modifier value is equal to 0. Most properties do not require a modifier. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                }, 
                {
                    "default": "", 
                    "type": "string&", 
                    "name": "string_var", 
                    "description": "[out] Variable of the string type that receives the value of the requested properties."
                }
            ]
        }
    ], 
    "description": "The function returns the value of the corresponding object property. The object property must be of the", 
    "title": "ObjectGetString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectsetdouble.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ObjectSetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "prop_value", 
                    "description": "[in] The value of the property."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ObjectSetDouble", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "prop_value", 
                    "description": "[in] The value of the property."
                }
            ]
        }
    ], 
    "description": "The function sets the value of the corresponding object property. The object property must be of the", 
    "title": "ObjectSetDouble"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectsetinteger.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ObjectSetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "prop_value", 
                    "description": "[in] The value of the property."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ObjectSetInteger", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                }, 
                {
                    "default": "", 
                    "type": "long", 
                    "name": "prop_value", 
                    "description": "[in] The value of the property."
                }
            ]
        }
    ], 
    "description": "The function sets the value of the corresponding object property. The object property must be of the", 
    "title": "ObjectSetInteger"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectsetstring.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ObjectSetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "prop_value", 
                    "description": "[in] The value of the property."
                }
            ]
        }, 
        {
            "returnType": "bool", 
            "name": "ObjectSetString", 
            "parameters": [
                {
                    "default": "", 
                    "type": "long", 
                    "name": "chart_id", 
                    "description": "[in] Chart identifier. 0 means the current chart."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Name of the object."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_id", 
                    "description": "[in] ID of the object property. The value can be one of the values of the enumeration."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "prop_modifier", 
                    "description": "[in] Modifier of the specified property. It denotes the number of the level in and in the graphical object Andrew's pitchfork. The numeration of levels starts from zero."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "prop_value", 
                    "description": "[in] The value of the property."
                }
            ]
        }
    ], 
    "description": "The function sets the value of the corresponding object property. The object property must be of the", 
    "title": "ObjectSetString"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/textsetfont.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "TextSetFont", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "name", 
                    "description": "[in] Font name in the system or the name of the resource containing the font or the path to font file on the disk."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "size", 
                    "description": "[in] The font size that can be set using positive and negative values. In case of positive values, the size of a displayed text does not depend on the operating system's font size settings. In case of negative values, the value is set in tenths of a point and the text size depends on the operating system settings (\"standard scale\" or \"large scale\"). See the Note below for more information about the differences between the modes."
                }, 
                {
                    "default": "0", 
                    "type": "uint", 
                    "name": "flags", 
                    "description": "[in] Combination of describing font style."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "orientation", 
                    "description": "[in] Text's horizontal inclination to X axis, the unit of measurement is 0.1 degrees. It means that orientation=450 stands for inclination equal to 45 degrees."
                }
            ]
        }
    ], 
    "description": "The function sets the font for displaying the text using drawing methods and returns the result of that operation. Arial font with the size -120 (12 pt) is used by default.", 
    "title": "TextSetFont"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/textout.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "TextOut", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "text", 
                    "description": "[in] Displayed text that will be written to the buffer. Only one-lined text is displayed."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "x", 
                    "description": "[in] X coordinate of the anchor point of the displayed text."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "y", 
                    "description": "[in] Y coordinate of the anchor point of the displayed text."
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "anchor", 
                    "description": "[in] The value out of the 9 pre-defined methods of the displayed text's anchor point location. The value is set by a combination of two flags flags of horizontal and vertical text align. Flag names are listed in the Note below."
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "&data[]", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "width", 
                    "description": "[in] Buffer width in pixels."
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "height", 
                    "description": "[in] Buffer height in pixels."
                }, 
                {
                    "default": "", 
                    "type": "uint", 
                    "name": "color", 
                    "description": "[in] Text color."
                }, 
                {
                    "default": "", 
                    "type": "ENUM_COLOR_FORMAT", 
                    "name": "color_format", 
                    "description": "[in] Color format is set by enumeration value."
                }
            ]
        }
    ], 
    "description": "The function displays a text in a custom array (buffer) and returns the result of that operation. The array is designed to create the graphical", 
    "title": "TextOut"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/textgetsize.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "TextGetSize", 
            "parameters": [
                {
                    "default": "", 
                    "type": "const string", 
                    "name": "text", 
                    "description": "[in] String, for which length and width should be obtained."
                }, 
                {
                    "default": "", 
                    "type": "uint&", 
                    "name": "width", 
                    "description": "[out] Input parameter for receiving width."
                }, 
                {
                    "default": "", 
                    "type": "uint&", 
                    "name": "height", 
                    "description": "[out] Input parameter for receiving height."
                }
            ]
        }
    ], 
    "description": "The function returns the line width and height at the current", 
    "title": "TextGetSize"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectdescription.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ObjectDescription", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Object name."
                }
            ]
        }
    ], 
    "description": "Returns the object description.", 
    "title": "ObjectDescription"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectget.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "ObjectGet", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Object name."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Object property index. It can be any of the enumeration values."
                }
            ]
        }
    ], 
    "description": "Returns the value of the specified object property.", 
    "title": "ObjectGet"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectgetfibodescription.html", 
    "functions": [
        {
            "returnType": "string", 
            "name": "ObjectGetFiboDescription", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Fibonacci object name."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Index of the Fibonacci level (0-31)."
                }
            ]
        }
    ], 
    "description": "Returns the level description of a Fibonacci object.", 
    "title": "ObjectGetFiboDescription"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectgetshiftbyvalue.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ObjectGetShiftByValue", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Object name."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] Price value."
                }
            ]
        }
    ], 
    "description": "The function calculates and returns bar index (shift related to the current bar) for the given price.", 
    "title": "ObjectGetShiftByValue"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectgetvaluebyshift.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "ObjectGetValueByShift", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Object name."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Bar index."
                }
            ]
        }
    ], 
    "description": "The function calculates and returns the price value for the specified bar (shift related to the current bar).", 
    "title": "ObjectGetValueByShift"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectset.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ObjectSet", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Object name."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Object property index. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "value", 
                    "description": "[in] New value of the given property."
                }
            ]
        }
    ], 
    "description": "Changes the value of the specified object property.", 
    "title": "ObjectSet"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectsetfibodescription.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ObjectSetFiboDescription", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Object name."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "index", 
                    "description": "[in] Index of the Fibonacci level (0-31)."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "text", 
                    "description": "[in] New description of the level."
                }
            ]
        }
    ], 
    "description": "The function sets a new description to a level of a Fibonacci object.", 
    "title": "ObjectSetFiboDescription"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objectsettext.html", 
    "functions": [
        {
            "returnType": "bool", 
            "name": "ObjectSetText", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Object name."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "text", 
                    "description": "[in] A text describing the object."
                }, 
                {
                    "default": "0", 
                    "type": "int", 
                    "name": "font_size", 
                    "description": "[in] Font size in points."
                }, 
                {
                    "default": "NULL", 
                    "type": "string", 
                    "name": "font_name", 
                    "description": "[in] Font name."
                }, 
                {
                    "default": "clrNONE", 
                    "type": "color", 
                    "name": "text_color", 
                    "description": "[in] Font color."
                }
            ]
        }
    ], 
    "description": "The function c", 
    "title": "ObjectSetText"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/objects/objecttype.html", 
    "functions": [
        {
            "returnType": "int", 
            "name": "ObjectType", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "object_name", 
                    "description": "[in] Object name."
                }
            ]
        }
    ], 
    "description": "The function returns the object type value.", 
    "title": "ObjectType"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iac.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iAC", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Bill Williams' Accelerator/Decelerator oscillator and returns its value.", 
    "title": "iAC"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iad.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iAD", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Accumulation/Distribution indicator and returns its value.", 
    "title": "iAD"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iadx.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iADX", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be any of the enumeration value. (0 - MODE_MAIN, 1 - MODE_PLUSDI, 2 - MODE_MINUSDI)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Average Directional Movement Index indicator and returns its value.", 
    "title": "iADX"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ialligator.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iAlligator", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "jaw_period", 
                    "description": "[in] Blue line averaging period (Alligator's Jaw)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "jaw_shift", 
                    "description": "[in] Blue line shift relative to the chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "teeth_period", 
                    "description": "[in] Red line averaging period (Alligator's Teeth)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "teeth_shift", 
                    "description": "[in] Red line shift relative to the chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "lips_period", 
                    "description": "[in] Green line averaging period (Alligator's Lips)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "lips_shift", 
                    "description": "[in] Green line shift relative to the chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_method", 
                    "description": "[in] MA method. It can be any of Moving Average methods. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Data source, identifier of the . It can be any of the following values:"
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "MODE_GATORJAW - Gator Jaw (blue) balance line,MODE_GATORTEETH - Gator Teeth (red) balance line,MODE_GATORLIPS - Gator Lips (green) balance line."
                }
            ]
        }
    ], 
    "description": "Calculates the Alligator indicator and returns its value.", 
    "title": "iAlligator"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iao.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iAO", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Awesome oscillator and returns its value.", 
    "title": "iAO"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iatr.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iATR", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Average True Range indicator and returns its value.", 
    "title": "iATR"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ibearspower.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iBearsPower", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Bears Power indicator and returns its value.", 
    "title": "iBearsPower"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ibands.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iBands", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period to calculate the main line."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "deviation", 
                    "description": "[in] Number of standard deviations from the main line."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "bands_shift", 
                    "description": "[in] The indicator shift relative to the chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be any of the enumeration value (0 - MODE_MAIN, 1 - MODE_UPPER, 2 - MODE_LOWER)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Bollinger Bands indicator and returns its value.", 
    "title": "iBands"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ibandsonarray.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iBandsOnArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "array[]", 
                    "description": "[in] Array with data."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "total", 
                    "description": "[in] The number of items to be counted. 0 means the whole array."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period to calculate the main line."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "deviation", 
                    "description": "[in] Number of standard deviations from the main line."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "bands_shift", 
                    "description": "[in] The indicator shift relative to the chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be any of the enumeration value (0 - MODE_MAIN, 1 - MODE_UPPER, 2 - MODE_LOWER)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Bollinger Bands indicator on data, stored in array, and returns its value.", 
    "title": "iBandsOnArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ibullspower.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iBullsPower", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Bulls Power indicator and returns its value.", 
    "title": "iBullsPower"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/icci.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iCCI", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Commodity Channel Index indicator and returns its value.", 
    "title": "iCCI"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iccionarray.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iCCIOnArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "array[]", 
                    "description": "[in] Array with data."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "total", 
                    "description": "[in] The number of items to be counted. 0 means the whole array."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Commodity Channel Index indicator on data, stored in array, and returns its value.", 
    "title": "iCCIOnArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/icustom.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iCustom", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "string", 
                    "name": "name", 
                    "description": "[in] Custom indicator compiled program name, relative to the root indicators directory (MQL4/Indicators/). If the indicator is located in subdirectory, for example, in MQL4/Indicators/Examples, its name must be specified as \"Examples\\\\indicator_name\" (double backslash \"\\\\\"must be specified as separator instead of a single one)."
                }, 
                {
                    "default": "", 
                    "type": "custom indicator input parameters (if necessary)", 
                    "name": "int", 
                    "description": ""
                }, 
                {
                    "default": "", 
                    "type": "line index", 
                    "name": "int", 
                    "description": ""
                }
            ]
        }
    ], 
    "description": "Calculates the specified custom indicator and returns its value.", 
    "title": "iCustom"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/idemarker.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iDeMarker", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the DeMarker indicator and returns its value.", 
    "title": "iDeMarker"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ienvelopes.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iEnvelopes", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_period", 
                    "description": "[in] Averaging period for calculation of the main line."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_method", 
                    "description": "[in] Moving Average method. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_shift", 
                    "description": "[in] MA shift. Indicator line offset relate to the chart by timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "deviation", 
                    "description": "[in] Percent deviation from the main line."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be any of enumeration value (0 - MODE_MAIN, 1 - MODE_UPPER, 2 - MODE_LOWER)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Envelopes indicator and returns its value.", 
    "title": "iEnvelopes"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ienvelopesonarray.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iEnvelopesOnArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "array[]", 
                    "description": "[in] Array with data."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "total", 
                    "description": "[in] The number of items to be counted. 0 means the whole array."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_period", 
                    "description": "[in] Averaging period for calculation of the main line."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_method", 
                    "description": "[in] Moving Average method. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_shift", 
                    "description": "[in] MA shift. Indicator line offset relate to the chart by timeframe."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "deviation", 
                    "description": "[in] Percent deviation from the main line."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be any of enumeration value (0 - MODE_MAIN, 1 - MODE_UPPER, 2 - MODE_LOWER)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Envelopes indicator on data, stored in array, and returns its value.", 
    "title": "iEnvelopesOnArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iforce.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iForce", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_method", 
                    "description": "[in] Moving Average method. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Force Index indicator and returns its value.", 
    "title": "iForce"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ifractals.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iFractals", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be any of the enumeration value."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Fractals indicator and returns its value.", 
    "title": "iFractals"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/igator.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iGator", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "jaw_period", 
                    "description": "[in] Blue line averaging period (Alligator's Jaw)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "jaw_shift", 
                    "description": "[in] Blue line shift relative to the chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "teeth_period", 
                    "description": "[in] Red line averaging period (Alligator's Teeth)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "teeth_shift", 
                    "description": "[in] Red line shift relative to the chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "lips_period", 
                    "description": "[in] Green line averaging period (Alligator's Lips)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "lips_shift", 
                    "description": "[in] Green line shift relative to the chart."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_method", 
                    "description": "[in] MA method. It can be any of enumeration value."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be any of enumeration value."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "MODE_GATORJAW - blue line (Jaw line),MODE_GATORTEETH - red line (Teeth line),MODE_GATORLIPS - green line (Lips line)."
                }
            ]
        }
    ], 
    "description": "Calculates the Gator oscillator and returns its value.", 
    "title": "iGator"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iichimoku.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iIchimoku", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "tenkan_sen", 
                    "description": "[in] Tenkan Sen averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "kijun_sen", 
                    "description": "[in] Kijun Sen averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "senkou_span_b", 
                    "description": "[in] Senkou SpanB averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Source of data. It can be one of the enumeration (1 - MODE_TENKANSEN, 2 - MODE_KIJUNSEN, 3 - MODE_SENKOUSPANA, 4 - MODE_SENKOUSPANB, 5 - MODE_CHIKOUSPAN)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Ichimoku Kinko Hyo indicator and returns its value.", 
    "title": "iIchimoku"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ibwmfi.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iBWMFI", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Market Facilitation Index indicator and returns its value.", 
    "title": "iBWMFI"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/imomentum.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iMomentum", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period (amount of bars) for calculation of price changes."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Momentum indicator and returns its value.", 
    "title": "iMomentum"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/imomentumonarray.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iMomentumOnArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "array[]", 
                    "description": "[in] Array with data."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "total", 
                    "description": "[in] The number of items to be counted. 0 means the whole array."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period (amount of bars) for calculation of price changes."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Momentum indicator on data, stored in array, and returns its value.", 
    "title": "iMomentumOnArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/imfi.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iMFI", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Period (amount of bars) for calculation of the indicator."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Money Flow Index indicator and returns its value.", 
    "title": "iMFI"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/ima.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iMA", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_shift", 
                    "description": "[in] MA shift. Indicators line offset relate to the chart by timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_method", 
                    "description": "[in] Moving Average method. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Moving Average indicator and returns its value.", 
    "title": "iMA"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/imaonarray.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iMAOnArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "array[]", 
                    "description": "[in] Array with data."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "total", 
                    "description": "[in] The number of items to be counted. 0 means the whole array."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_shift", 
                    "description": "[in] MA shift. Indicators line offset relate to the chart by timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_method", 
                    "description": "[in] Moving Average method. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Moving Average indicator on data, stored in array, and returns its value.", 
    "title": "iMAOnArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iosma.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iOsMA", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "fast_ema_period", 
                    "description": "[in] Fast EMA averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "slow_ema_period", 
                    "description": "[in] Slow EMA averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "signal_period", 
                    "description": "[in] Signal line averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "iOsMA", 
    "title": "iOsMA"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/imacd.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iMACD", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "fast_ema_period", 
                    "description": "[in] Fast EMA averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "slow_ema_period", 
                    "description": "[in] Slow EMA averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "signal_period", 
                    "description": "[in] Signal line averaging period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be one of the enumeration values (0-MODE_MAIN, 1-MODE_SIGNAL)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Moving Averages Convergence/Divergence indicator and returns its value.", 
    "title": "iMACD"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iobv.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iOBV", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the On Balance Volume indicator and returns its value.", 
    "title": "iOBV"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/isar.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iSAR", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "step", 
                    "description": "[in] The step of price increment, usually 0.02."
                }, 
                {
                    "default": "", 
                    "type": "double", 
                    "name": "maximum", 
                    "description": "[in] The maximum step, usually 0.2."
                }
            ]
        }
    ], 
    "description": "Calculates the Parabolic Stop and Reverse system indicator and returns its value.", 
    "title": "iSAR"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/irsi.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iRSI", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Relative Strength Index indicator and returns its value.", 
    "title": "iRSI"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/irsionarray.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iRSIOnArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "array[]", 
                    "description": "[in] Array with data."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "total", 
                    "description": "[in] The number of items to be counted. 0 means the whole array."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Relative Strength Index indicator on data, stored in array, and returns its value.", 
    "title": "iRSIOnArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/irvi.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iRVI", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be any of enumeration value."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Relative Vigor Index indicator and returns its value.", 
    "title": "iRVI"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/istddev.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iStdDev", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_period", 
                    "description": "[in] Moving Average period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_shift", 
                    "description": "[in] Moving Average shift."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_method", 
                    "description": "[in] Moving Average method. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "applied_price", 
                    "description": "[in] Applied price. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Standard Deviation indicator and returns its value.", 
    "title": "iStdDev"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/istddevonarray.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iStdDevOnArray", 
            "parameters": [
                {
                    "default": "", 
                    "type": "double", 
                    "name": "array[]", 
                    "description": "[in] Array with data."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "total", 
                    "description": "[in] The number of items to be counted. 0 means the whole array."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_period", 
                    "description": "[in] Moving Average period."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_shift", 
                    "description": "[in] Moving Average shift."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "ma_method", 
                    "description": "[in] Moving Average method. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Standard Deviation indicator on data, stored in array, and returns its value.", 
    "title": "iStdDevOnArray"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/istochastic.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iStochastic", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "Kperiod", 
                    "description": "[in] Period of the %K line."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "Dperiod", 
                    "description": "[in] Period of the %D line."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "slowing", 
                    "description": "[in] Slowing value."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "method", 
                    "description": "[in] Moving Average method. It can be any of enumeration values."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "price_field", 
                    "description": "[in] Price field parameter. Can be one of this values: 0 - Low/High or 1 - Close/Close."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "mode", 
                    "description": "[in] Indicator line index. It can be any of the enumeration value (0 - MODE_MAIN, 1 - MODE_SIGNAL)."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Stochastic Oscillator and returns its value.", 
    "title": "iStochastic"
}
,
{
    "url": "http://mm.l/mql4/docs.mql4.com/indicators/iwpr.html", 
    "functions": [
        {
            "returnType": "double", 
            "name": "iWPR", 
            "parameters": [
                {
                    "default": "", 
                    "type": "string", 
                    "name": "symbol", 
                    "description": "[in] Symbol name on the data of which the indicator will be calculated. means the current symbol."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "timeframe", 
                    "description": "[in] Timeframe. It can be any of enumeration values. 0 means the current chart timeframe."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "period", 
                    "description": "[in] Averaging period for calculation."
                }, 
                {
                    "default": "", 
                    "type": "int", 
                    "name": "shift", 
                    "description": "[in] Index of the value taken from the indicator buffer (shift relative to the current bar the given amount of periods ago)."
                }
            ]
        }
    ], 
    "description": "Calculates the Larry Williams' Percent Range and returns its value.", 
    "title": "iWPR"
}
]
